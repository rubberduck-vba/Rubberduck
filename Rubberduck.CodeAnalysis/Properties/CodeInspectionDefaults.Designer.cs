//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rubberduck.CodeAnalysis.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "16.10.0.0")]
    public sealed partial class CodeInspectionDefaults : global::System.Configuration.ApplicationSettingsBase {
        
        private static CodeInspectionDefaults defaultInstance = ((CodeInspectionDefaults)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new CodeInspectionDefaults())));
        
        public static CodeInspectionDefaults Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<CodeInspectionSettings xmlns:xsi=\"http:" +
            "//www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchem" +
            "a\">\r\n  <CodeInspections>\r\n    <CodeInspection Name=\"BooleanAssignedInIfElseInspe" +
            "ction\" Severity=\"Warning\" InspectionType=\"NamingAndConventionsIssues\" />\r\n    <C" +
            "odeInspection Name=\"ObsoleteErrorSyntaxInspection\" Severity=\"Suggestion\" Inspect" +
            "ionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"StopKeywordInspect" +
            "ion\" Severity=\"Suggestion\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspe" +
            "ction Name=\"UnhandledOnErrorResumeNextInspection\" Severity=\"Warning\" InspectionT" +
            "ype=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"EmptyStringLiteralInspecti" +
            "on\" Severity=\"Warning\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspe" +
            "ction Name=\"ImplicitByRefModifierInspection\" Severity=\"Hint\" InspectionType=\"Cod" +
            "eQualityIssues\" />\r\n    <CodeInspection Name=\"FunctionReturnValueNotUsedInspecti" +
            "on\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspectio" +
            "n Name=\"RedundantByRefModifierInspection\" Severity=\"DoNotShow\" InspectionType=\"C" +
            "odeQualityIssues\" />\r\n    <CodeInspection Name=\"MissingAttributeInspection\" Seve" +
            "rity=\"Warning\" InspectionType=\"RubberduckOpportunities\" />\r\n    <CodeInspection " +
            "Name=\"AttributeOutOfSyncInspection\" Severity=\"Warning\" InspectionType=\"Rubberduc" +
            "kOpportunities\" />\r\n    <CodeInspection Name=\"MissingAnnotationArgumentInspectio" +
            "n\" Severity=\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection N" +
            "ame=\"ModuleScopeDimKeywordInspection\" Severity=\"Suggestion\" InspectionType=\"Lang" +
            "uageOpportunities\" />\r\n    <CodeInspection Name=\"MultilineParameterInspection\" S" +
            "everity=\"Suggestion\" InspectionType=\"NamingAndConventionsIssues\" />\r\n    <CodeIn" +
            "spection Name=\"MultipleDeclarationsInspection\" Severity=\"Warning\" InspectionType" +
            "=\"NamingAndConventionsIssues\" />\r\n    <CodeInspection Name=\"ObsoleteCallStatemen" +
            "tInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n  " +
            "  <CodeInspection Name=\"ObsoleteCommentSyntaxInspection\" Severity=\"Suggestion\" I" +
            "nspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"ObsoleteLetS" +
            "tatementInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\"" +
            " />\r\n    <CodeInspection Name=\"OptionBaseInspection\" Severity=\"Hint\" InspectionT" +
            "ype=\"NamingAndConventionsIssues\" />\r\n    <CodeInspection Name=\"RedundantOptionIn" +
            "spection\" Severity=\"Hint\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeIn" +
            "spection Name=\"OptionExplicitInspection\" Severity=\"Error\" InspectionType=\"CodeQu" +
            "alityIssues\" />\r\n    <CodeInspection Name=\"ProcedureCanBeWrittenAsFunctionInspec" +
            "tion\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <Code" +
            "Inspection Name=\"ApplicationWorksheetFunctionInspection\" Severity=\"Suggestion\" I" +
            "nspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"AssignedByValPar" +
            "ameterInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    " +
            "<CodeInspection Name=\"EmptyModuleInspection\" Severity=\"Hint\" InspectionType=\"Nam" +
            "ingAndConventionsIssues\" />\r\n    <CodeInspection Name=\"LineLabelNotUsedInspectio" +
            "n\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection" +
            " Name=\"IntegerDataTypeInspection\" Severity=\"Hint\" InspectionType=\"CodeQualityIss" +
            "ues\" />\r\n    <CodeInspection Name=\"ShadowedDeclarationInspection\" Severity=\"DoNo" +
            "tShow\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"Constant" +
            "NotUsedInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n   " +
            " <CodeInspection Name=\"DefaultProjectNameInspection\" Severity=\"Suggestion\" Inspe" +
            "ctionType=\"NamingAndConventionsIssues\" />\r\n    <CodeInspection Name=\"EmptyCaseBl" +
            "ockInspection\" Severity=\"Warning\" InspectionType=\"NamingAndConventionsIssues\" />" +
            "\r\n    <CodeInspection Name=\"EmptyDoWhileBlockInspection\" Severity=\"Suggestion\" I" +
            "nspectionType=\"NamingAndConventionsIssues\" />\r\n    <CodeInspection Name=\"EmptyEl" +
            "seBlockInspection\" Severity=\"Warning\" InspectionType=\"NamingAndConventionsIssues" +
            "\" />\r\n    <CodeInspection Name=\"EmptyForEachBlockInspection\" Severity=\"Warning\" " +
            "InspectionType=\"NamingAndConventionsIssues\" />\r\n    <CodeInspection Name=\"EmptyF" +
            "orLoopBlockInspection\" Severity=\"Warning\" InspectionType=\"NamingAndConventionsIs" +
            "sues\" />\r\n    <CodeInspection Name=\"EmptyIfBlockInspection\" Severity=\"Warning\" I" +
            "nspectionType=\"NamingAndConventionsIssues\" />\r\n    <CodeInspection Name=\"EmptyWh" +
            "ileWendBlockInspection\" Severity=\"Warning\" InspectionType=\"NamingAndConventionsI" +
            "ssues\" />\r\n    <CodeInspection Name=\"EncapsulatePublicFieldInspection\" Severity=" +
            "\"Suggestion\" InspectionType=\"NamingAndConventionsIssues\" />\r\n    <CodeInspection" +
            " Name=\"HostSpecificExpressionInspection\" Severity=\"Warning\" InspectionType=\"Lang" +
            "uageOpportunities\" />\r\n    <CodeInspection Name=\"HungarianNotationInspection\" Se" +
            "verity=\"Suggestion\" InspectionType=\"NamingAndConventionsIssues\" />\r\n    <CodeIns" +
            "pection Name=\"ImplicitActiveSheetReferenceInspection\" Severity=\"Warning\" Inspect" +
            "ionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"ImplicitActiveWork" +
            "bookReferenceInspection\" Severity=\"Warning\" InspectionType=\"LanguageOpportunitie" +
            "s\" />\r\n    <CodeInspection Name=\"ImplicitDefaultMemberAssignmentInspection\" Seve" +
            "rity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection" +
            " Name=\"ImplicitPublicMemberInspection\" Severity=\"Hint\" InspectionType=\"LanguageO" +
            "pportunities\" />\r\n    <CodeInspection Name=\"ImplicitVariantReturnTypeInspection\"" +
            " Severity=\"Hint\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection " +
            "Name=\"MemberNotOnInterfaceInspection\" Severity=\"Warning\" InspectionType=\"CodeQua" +
            "lityIssues\" />\r\n    <CodeInspection Name=\"MoveFieldCloserToUsageInspection\" Seve" +
            "rity=\"Hint\" InspectionType=\"NamingAndConventionsIssues\" />\r\n    <CodeInspection " +
            "Name=\"NonReturningFunctionInspection\" Severity=\"Error\" InspectionType=\"CodeQuali" +
            "tyIssues\" />\r\n    <CodeInspection Name=\"ObjectVariableNotSetInspection\" Severity" +
            "=\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"Obsole" +
            "teGlobalInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\"" +
            " />\r\n    <CodeInspection Name=\"ObsoleteTypeHintInspection\" Severity=\"Suggestion\"" +
            " InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"ParameterC" +
            "anBeByValInspection\" Severity=\"Suggestion\" InspectionType=\"NamingAndConventionsI" +
            "ssues\" />\r\n    <CodeInspection Name=\"ParameterNotUsedInspection\" Severity=\"Warni" +
            "ng\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"ProcedureNo" +
            "tUsedInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <" +
            "CodeInspection Name=\"SelfAssignedDeclarationInspection\" Severity=\"Suggestion\" In" +
            "spectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"UnassignedVariabl" +
            "eUsageInspection\" Severity=\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n    <C" +
            "odeInspection Name=\"UndeclaredVariableInspection\" Severity=\"Error\" InspectionTyp" +
            "e=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"UntypedFunctionUsageInspecti" +
            "on\" Severity=\"Hint\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspecti" +
            "on Name=\"UseMeaningfulNameInspection\" Severity=\"Suggestion\" InspectionType=\"Nami" +
            "ngAndConventionsIssues\" />\r\n    <CodeInspection Name=\"VariableNotAssignedInspect" +
            "ion\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspecti" +
            "on Name=\"VariableNotUsedInspection\" Severity=\"Warning\" InspectionType=\"CodeQuali" +
            "tyIssues\" />\r\n    <CodeInspection Name=\"VariableTypeNotDeclaredInspection\" Sever" +
            "ity=\"Warning\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Nam" +
            "e=\"WriteOnlyPropertyInspection\" Severity=\"Suggestion\" InspectionType=\"CodeQualit" +
            "yIssues\" />\r\n    <CodeInspection Name=\"DefTypeStatementInspection\" Severity=\"Sug" +
            "gestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"St" +
            "epIsNotSpecifiedInspection\" Severity=\"DoNotShow\" InspectionType=\"LanguageOpportu" +
            "nities\" />\r\n    <CodeInspection Name=\"StepOneIsRedundantInspection\" Severity=\"Hi" +
            "nt\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"SheetAc" +
            "cessedUsingStringInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOppor" +
            "tunities\" />\r\n    <CodeInspection Name=\"ObsoleteMemberUsageInspection\" Severity=" +
            "\"Warning\" InspectionType=\"NamingAndConventionsIssues\" />\r\n    <CodeInspection Na" +
            "me=\"ObsoleteCallingConventionInspection\" Severity=\"Warning\" InspectionType=\"Code" +
            "QualityIssues\" />\r\n    <CodeInspection Name=\"DuplicatedAnnotationInspection\" Sev" +
            "erity=\"Error\" InspectionType=\"RubberduckOpportunities\" />\r\n    <CodeInspection N" +
            "ame=\"ModuleWithoutFolderInspection\" Severity=\"Suggestion\" InspectionType=\"Rubber" +
            "duckOpportunities\" />\r\n    <CodeInspection Name=\"OnLocalErrorInspection\" Severit" +
            "y=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Na" +
            "me=\"IsMissingOnInappropriateArgumentInspection\" Severity=\"Warning\" InspectionTyp" +
            "e=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"IsMissingWithNonArgumentPara" +
            "meterInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <" +
            "CodeInspection Name=\"AssignmentNotUsedInspection\" Severity=\"Suggestion\" Inspecti" +
            "onType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"UnderscoreInPublicClass" +
            "ModuleMemberInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />" +
            "\r\n    <CodeInspection Name=\"ExcelUdfNameIsValidCellReferenceInspection\" Severity" +
            "=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"Empt" +
            "yMethodInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n   " +
            " <CodeInspection Name=\"ImplementedInterfaceMemberInspection\" Severity=\"Suggestio" +
            "n\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"PublicContro" +
            "lFieldAccessInspection\" Severity=\"Hint\" InspectionType=\"LanguageOpportunities\" /" +
            ">\r\n  </CodeInspections>\r\n  <WhitelistedIdentifiers />\r\n  <RunInspectionsOnSucces" +
            "sfulParse>true</RunInspectionsOnSuccessfulParse>\r\n</CodeInspectionSettings>")]
        public global::Rubberduck.CodeAnalysis.Settings.CodeInspectionSettings CodeInspectionSettings {
            get {
                return ((global::Rubberduck.CodeAnalysis.Settings.CodeInspectionSettings)(this["CodeInspectionSettings"]));
            }
        }
    }
}
