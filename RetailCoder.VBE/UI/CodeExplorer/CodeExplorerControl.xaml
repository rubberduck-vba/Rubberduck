<UserControl x:Class="Rubberduck.UI.CodeExplorer.CodeExplorerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:codeExplorer="clr-namespace:Rubberduck.Navigation.CodeExplorer"
             xmlns:controls="clr-namespace:Rubberduck.UI.Controls"
             xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             xmlns:converters="clr-namespace:Rubberduck.UI.Converters"
             xmlns:codeExplorerConverters="clr-namespace:Rubberduck.UI.CodeExplorer.Converters"
             ResxExtension.DefaultResxName="Rubberduck.UI.RubberduckUI" 
             Language="{UICulture}"
             Name="CodeExplorer"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300" d:DataContext="{d:DesignInstance codeExplorer:CodeExplorerViewModel}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Controls/ToolBar.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <BitmapImage x:Key="RefreshImage" UriSource="../../Resources/arrow-circle-double.png" />
            <BitmapImage x:Key="CollaseNodesImage" UriSource="../../Resources/folder.png" />
            <BitmapImage x:Key="ExpandNodesImage" UriSource="../../Resources/folder-open.png" />
            <BitmapImage x:Key="UndoImage" UriSource="../../Resources/arrow-circle-left.png" />
            <BitmapImage x:Key="PrintImage" UriSource="../../Resources/printer.png" />
            <BitmapImage x:Key="AddTestModuleImage" UriSource="../../Resources/Custom/PNG/ListOfTests.png" />
            <BitmapImage x:Key="AddStdModuleImage" UriSource="../../Resources/Custom/PNG/AddModule.png" />
            <BitmapImage x:Key="AddClassModuleImage" UriSource="../../Resources/Custom/PNG/AddClass.png" />
            <BitmapImage x:Key="AddUserFormImage" UriSource="../../Resources/Custom/PNG/AddForm.png" />
            <BitmapImage x:Key="SearchImage" UriSource="../../Resources/magnifier-medium.png" />

            <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>
            <converters:BoolToHiddenVisibilityConverter x:Key="BoolToHiddenVisibility" />
            <codeExplorerConverters:StringHasValueToVisibilityConverter x:Key="StringHasValueToVisibility" />
            <codeExplorerConverters:StringHasNoValueToVisibilityConverter x:Key="StringHasNoValueToVisibility" />

            <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFD9F4FF" Offset="0"/>
                <GradientStop Color="#FF9BDDFB" Offset="1"/>
            </LinearGradientBrush>
            <LinearGradientBrush x:Key="{x:Static SystemColors.ControlBrushKey}" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#FFEEEDED" Offset="0"/>
                <GradientStop Color="#FFDDDDDD" Offset="1"/>
            </LinearGradientBrush>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
            <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />

            <Style x:Key="ShinyTreeView"
               TargetType="{x:Type TreeViewItem}">
                <Setter Property="BorderThickness" Value="1.5"/>
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                <Setter Property="Visibility" Value="{Binding IsVisible, Mode=OneWay, Converter={StaticResource BoolToVisibility}}" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <EventSetter Event="MouseDoubleClick" Handler="TreeView_OnMouseDoubleClick" />
                <EventSetter Event="MouseRightButtonDown" Handler="TreeView_OnMouseRightButtonDown" />
                <Style.Triggers>
                    <Trigger Property="IsSelected" Value="True">
                        <Setter Property="BorderBrush" Value="#adc6e5"/>
                    </Trigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="IsSelected" Value="True"/>
                            <Condition Property="IsSelectionActive" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter Property="BorderBrush" Value="LightGray"/>
                    </MultiTrigger>
                </Style.Triggers>
                <Style.Resources>
                    <Style TargetType="Border">
                        <Setter Property="CornerRadius" Value="2"/>
                    </Style>
                </Style.Resources>
            </Style>

            <Style x:Key="IconStyle" TargetType="Image">
                <Setter Property="Height" Value="16" />
                <Setter Property="Width" Value="16" />
                <Setter Property="Margin" Value="2,0,2,0" />
                <Setter Property="VerticalAlignment" Value="Top" />
            </Style>

            <Style x:Key="TreeViewItemStyle" TargetType="TextBlock">
                <Setter Property="Text" Value="{Binding Name}" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="Margin" Value="2,0,2,0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="ToolTip" Value="{Binding Name}" />
                <Setter Property="ToolTipService.InitialShowDelay" Value="500" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            </Style>

            <Style x:Key="TreeViewItemStyleWithSignatures" TargetType="TextBlock">
                <Setter Property="Text" Value="{Binding NameWithSignature}" />
                <Setter Property="FontSize" Value="10" />
                <Setter Property="Margin" Value="2,0,2,0" />
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="ToolTip" Value="{Binding NameWithSignature}" />
                <Setter Property="ToolTipService.InitialShowDelay" Value="500" />
                <Setter Property="TextTrimming" Value="CharacterEllipsis" />
            </Style>

            <Style x:Key="TreeViewIconStyle" TargetType="Image" BasedOn="{StaticResource IconStyle}">
                <Setter Property="Source" Value="{Binding CollapsedIcon}" />
                <Style.Triggers>
                    <!-- thanks to H.B. on http://stackoverflow.com/a/5797323/1188513 -->
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=TreeViewItem}, Path=IsExpanded}" Value="True">
                        <Setter Property="Source" Value="{Binding ExpandedIcon}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <HierarchicalDataTemplate x:Key="CodeExplorerTemplate" 
                                  DataType="codeExplorer:CodeExplorerProjectViewModel"
                                  ItemsSource="{Binding Items}">
                <StackPanel Orientation="Horizontal">
                    <Image Style="{StaticResource TreeViewIconStyle}" />
                    <TextBlock Style="{StaticResource TreeViewItemStyle}" Visibility="{Binding ElementName=DisplaySignatures, Path=IsChecked, Converter={StaticResource BoolToHiddenVisibility}}" />
                    <TextBlock Style="{StaticResource TreeViewItemStyleWithSignatures}" Visibility="{Binding ElementName=DisplaySignatures, Path=IsChecked, Converter={StaticResource BoolToVisibility}}" />
                </StackPanel>
            </HierarchicalDataTemplate>

            <Style x:Key="CodeExplorerTreeViewStyle" TargetType="TreeView">
                <Setter Property="ItemTemplate" Value="{StaticResource CodeExplorerTemplate}" />
                <Setter Property="ItemsSource" Value="{Binding Projects, UpdateSourceTrigger=PropertyChanged}" />
                <Setter Property="ContextMenu">
                    <Setter.Value>
                        <ContextMenu DataContext="{Binding DataContext, Source={x:Reference CodeExplorer}}">
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_Open}"
                                  FontWeight="Bold"
                                  Command="{Binding OpenCommand}"
                                  CommandParameter="{Binding SelectedItem}" />
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_OpenDesigner}"
                                  Command="{Binding OpenDesignerCommand}"
                                  CommandParameter="{Binding SelectedItem}"
                                  Visibility="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}, Mode=OneWay, Converter={StaticResource BoolToVisibility}}">
                                <MenuItem.Icon>
                                    <Image Height="16" Source="../../Resources/Custom/PNG/ProjectForm.png" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=Refresh}"
                                  Command="{Binding RefreshCommand}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource RefreshImage}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=Rename}"
                                  Command="{Binding RenameCommand}"
                                  CommandParameter="{Binding SelectedItem}" />
                            <Separator />
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_OpenProjectProperties}"
                                  Command="{Binding OpenProjectPropertiesCommand}"
                                  CommandParameter="{Binding SelectedItem}" />
                            <Separator />
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_AddModule}">
                                <MenuItem.Icon>
                                    <Image Height="16" Source="../../Resources/plus-circle.png" />
                                </MenuItem.Icon>
                                <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_AddTestModuleText}"
                                  Command="{Binding AddTestModuleCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                                    <MenuItem.Icon>
                                        <Image Height="16" Source="{StaticResource AddTestModuleImage}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_AddTestModuleWithStubsText}"
                                  Command="{Binding AddTestModuleWithStubsCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                                    <MenuItem.Icon>
                                        <Image Height="16" Source="{StaticResource AddTestModuleImage}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator />
                                <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_AddStdModuleText}"
                                  Command="{Binding AddStdModuleCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                                    <MenuItem.Icon>
                                        <Image Height="16" Source="{StaticResource AddStdModuleImage}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_AddClassModuleText}"
                                  Command="{Binding AddClassModuleCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                                    <MenuItem.Icon>
                                        <Image Height="16" Source="{StaticResource AddClassModuleImage}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_AddFormText}"
                                  Command="{Binding AddUserFormCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                                    <MenuItem.Icon>
                                        <Image Height="16" Source="{StaticResource AddUserFormImage}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem>
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=Find}">
                                <MenuItem.Icon>
                                    <Image Height="16" Source="../../Resources/magnifier--arrow.png" />
                                </MenuItem.Icon>
                                <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_FindAllReferencesText}"
                                  Command="{Binding FindAllReferencesCommand}"
                                  CommandParameter="{Binding SelectedItem}" />
                                <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_FindAllImplementationsText}"
                                  Command="{Binding FindAllImplementationsCommand}"
                                  CommandParameter="{Binding SelectedItem}" />
                            </MenuItem>
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_Indent}"
                                  Command="{Binding IndenterCommand}"
                                  CommandParameter="{Binding SelectedItem}" />
                            <Separator />
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_CollapseSubnodesToolTip}"
                                  Command="{Binding CollapseAllSubnodesCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource CollaseNodesImage}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_ExpandSubnodesToolTip}"
                                  Command="{Binding ExpandAllSubnodesCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource ExpandNodesImage}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_Import}"
                                  Command="{Binding ImportCommand}"
                                  CommandParameter="{Binding SelectedItem}" />
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_Export}"
                                  Command="{Binding ExportCommand}"
                                  CommandParameter="{Binding SelectedItem}"
                                  Visibility="{Binding ExportVisibility}" />
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_ExportAll}"
                                  Command="{Binding ExportAllCommand}"
                                  CommandParameter="{Binding SelectedItem}" 
                                  Visibility="{Binding ExportAllVisibility}" />
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_Remove}"
                                  Command="{Binding RemoveCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                                <MenuItem.Icon>
                                    <Image Height="16" Source="../../Resources/minus-circle.png">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.5" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </MenuItem.Icon>
                            </MenuItem>
                            <Separator />
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_Print}"
                                  Command="{Binding PrintCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource PrintImage}">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Style.Triggers>
                                                    <Trigger Property="IsEnabled" Value="False">
                                                        <Setter Property="Opacity" Value="0.5" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControlPanel_Caption}" Visibility="{Binding IsSourceControlEnabled, Converter={StaticResource BoolToVisibility}}" >
                                <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_Commit}"
                                      Command="{Binding CommitCommand}"
                                      CommandParameter="{Binding SelectedItem}" />
                                <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_Undo}"
                                      Command="{Binding UndoCommand}"
                                      CommandParameter="{Binding SelectedItem}">
                                    <MenuItem.Icon>
                                        <Image Source="{StaticResource UndoImage}" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </MenuItem>
                        </ContextMenu>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="XButtonStyle" TargetType="Button">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Content" Value="✕"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Grid>
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal"/>
                                        <VisualState x:Name="MouseOver">
                                            <Storyboard>
                                                <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="PaleGoldenrod"/>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Pressed">
                                            <Storyboard>
                                                <ColorAnimation Duration="0" Storyboard.TargetName="Background" Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)" To="PaleGoldenrod"/>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="BackgroundAnimation" Storyboard.TargetProperty="Opacity" To="1"/>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="FocusStates">
                                        <VisualState x:Name="Focused">
                                            <Storyboard>
                                                <DoubleAnimation Duration="0" Storyboard.TargetName="FocusVisualElement" Storyboard.TargetProperty="Opacity" To="1"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Unfocused" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <Border x:Name="Background" CornerRadius="3" Background="White" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                    <Grid Background="{TemplateBinding Background}"  Margin="1">
                                        <Border Opacity="0" x:Name="BackgroundAnimation" Background="PaleGoldenrod" />
                                    </Grid>
                                </Border>
                                <ContentPresenter
                                  x:Name="contentPresenter"
                                  Content="{TemplateBinding Content}"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"/>
                                <Rectangle x:Name="DisabledVisualElement" RadiusX="3" RadiusY="3" Fill="#FFFFFFFF" Opacity="0" IsHitTestVisible="false" />
                                <Rectangle x:Name="FocusVisualElement" RadiusX="2" RadiusY="2" Margin="1" Stroke="PaleGoldenrod" StrokeThickness="1" Opacity="0" IsHitTestVisible="false" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid UseLayoutRounding="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="20"/>
            <RowDefinition Height="*" MinHeight="64" />
            <RowDefinition Height="5"/>
            <RowDefinition Height="Auto" MinHeight="48"/>
        </Grid.RowDefinitions>

        <ToolBarTray Grid.Row="0" IsLocked="True">
            <ToolBar Style="{DynamicResource ToolBarWithOverflowOnlyShowingWhenNeededStyle}">

                <Button Command="{Binding RefreshCommand}">
                    <Image Height="16" Source="../../Resources/arrow-circle-double.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled"  Value="False">
                                        <Setter Property="Opacity" Value="0.3" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Button.ToolTip>
                        <TextBlock Text="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=Refresh}" />
                    </Button.ToolTip>
                </Button>

                <Separator />

                <Menu>
                    <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=Add}">
                        <MenuItem.Icon>
                            <Image Height="16" Source="../../Resources/plus-circle.png" />
                        </MenuItem.Icon>
                        <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_AddTestModuleText}"
                                  Command="{Binding AddTestModuleCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                            <MenuItem.Icon>
                                <Image Height="16" Source="{StaticResource AddTestModuleImage}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_AddStdModuleText}"
                                  Command="{Binding AddStdModuleCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                            <MenuItem.Icon>
                                <Image Height="16" Source="{StaticResource AddStdModuleImage}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_AddClassModuleText}"
                                  Command="{Binding AddClassModuleCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                            <MenuItem.Icon>
                                <Image Height="16" Source="{StaticResource AddClassModuleImage}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_AddFormText}"
                                  Command="{Binding AddUserFormCommand}"
                                  CommandParameter="{Binding SelectedItem}">
                            <MenuItem.Icon>
                                <Image Height="16" Source="{StaticResource AddUserFormImage}" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </Menu>

                <Separator />

                <Menu Margin="0,0,2,0">
                    <MenuItem Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_Sort}">
                        <MenuItem.Icon>
                            <Image Height="16" Source="../../Resources/edit-list-order.png" />
                        </MenuItem.Icon>

                        <MenuItem Name="SortByName"
                                  Style="{DynamicResource MenuItemStyle}" VerticalAlignment="Center" 
                                  Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_SortStyle_ByName}"
                                  IsChecked="{Binding SortByName, UpdateSourceTrigger=PropertyChanged}" 
                                  Command="{Binding SetNameSortCommand}"
                                  CommandParameter="{Binding ElementName=SortByName, Path=IsChecked}"
                                  IsCheckable="True" />
                        <MenuItem Name="SortByCodeOrder"
                                  Style="{DynamicResource MenuItemStyle}" VerticalAlignment="Center" 
                                  Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_SortStyle_ByCodeOrder}"
                                  IsChecked="{Binding SortByCodeOrder, UpdateSourceTrigger=PropertyChanged}" 
                                  Command="{Binding SetCodeOrderSortCommand}"
                                  CommandParameter="{Binding ElementName=SortByCodeOrder, Path=IsChecked}"
                                  IsCheckable="True" />

                        <Separator />

                        <MenuItem Style="{DynamicResource MenuItemStyle}" VerticalAlignment="Center" 
                                  Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_SortStyle_ByType}"
                                  IsChecked="{Binding GroupByType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                  IsCheckable="True" />
                    </MenuItem>
                </Menu>

                <ToggleButton Name="DisplaySignatures" ToolTip="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_ShowSignaturesToolTip}" IsChecked="True">
                    <Image Height="16" Source="../../Resources/Custom/PNG/DisplayFullSignature.png" />
                </ToggleButton>

                <Separator />

                <Button Command="{Binding OpenDesignerCommand}" CommandParameter="{Binding SelectedItem}">
                    <Image Height="16" Source="../../Resources/Custom/PNG/ProjectForm.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.3" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Button.ToolTip>
                        <TextBlock Text="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_ShowDesignerToolTip}" />
                    </Button.ToolTip>
                </Button>

                <Separator />

                <Button Command="{Binding CopyResultsCommand}" CommandParameter="{Binding ElementName=ProjectTree}">
                    <Image Height="16" Source="../../Resources/document-copy.png">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Opacity" Value="0.3" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                    <Button.ToolTip>
                        <TextBlock Text="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_CopyToolTip}" />
                    </Button.ToolTip>
                </Button>

            </ToolBar>
        </ToolBarTray>

        <Border Grid.Row="1" 
                BorderBrush="{StaticResource {x:Static SystemColors.ControlBrushKey}}" 
                BorderThickness="1">
            <Grid>
                <TextBox x:Name="SearchBox"
                         VerticalContentAlignment="Center"
                         IsEnabled="{Binding CanSearch}"
                         MinHeight="20"
                         PreviewKeyDown="SearchBox_OnPreviewKeyDown"
                         TextChanged="SearchBox_OnTextChanged" />
        
                <Image Source="{StaticResource SearchImage}" 
                       HorizontalAlignment="Right" VerticalAlignment="Center" 
                       MaxHeight="16" Margin="0,0,1,0" 
                       IsEnabled="{Binding CanSearch}"
                       Visibility="{Binding ElementName=SearchBox, Path=Text.Length, Converter={StaticResource StringHasValueToVisibility}}"
                       MouseDown="SearchIcon_OnMouseDown" />
        
                <Button Style="{StaticResource XButtonStyle}" 
                        HorizontalAlignment="Right" VerticalAlignment="Center" 
                        Height="18" Width="18" Margin="0,1,1,0" 
                        IsEnabled="{Binding CanSearch}"
                        Visibility="{Binding ElementName=SearchBox, Path=Text.Length, Converter={StaticResource StringHasNoValueToVisibility}}" 
                        Click="ButtonBase_OnClick" />
            </Grid>
        </Border>
        <controls:EmptyUIRefresh Grid.Row="2" />

        <TreeView x:Name="ProjectTree"
                  Grid.Row="2"
                  Background="White"
                  ItemContainerStyle="{StaticResource ShinyTreeView}"
                  HorizontalContentAlignment="Stretch"
                  Style="{StaticResource CodeExplorerTreeViewStyle}" BorderThickness="0,1"
                  VirtualizingPanel.IsVirtualizing="False"
                  Visibility="{Binding Path=TreeViewVisibility}">
            <i:Interaction.Behaviors>
                <controls:BindableSelectedItemBehavior SelectedItem="{Binding SelectedItem, Mode=TwoWay}" />
            </i:Interaction.Behaviors>
        </TreeView>

        <controls:BusyIndicator Grid.Row="2" Width="120" Height="120" Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibility}}" />

        <GridSplitter Grid.Row="3" Height="5" ShowsPreview="True" Cursor="SizeNS" HorizontalAlignment="Stretch"/>

        <Border Grid.Row="4" BorderThickness="0,1,0,0" BorderBrush="DimGray">

            <ScrollViewer Background="WhiteSmoke" VerticalScrollBarVisibility="Auto">
                <WrapPanel Orientation="Vertical" MinHeight="70" Background="WhiteSmoke">

                    <Grid Margin="4" HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="20" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Image Style="{StaticResource IconStyle}"
                               Source="{Binding SelectedItem.CollapsedIcon}" Grid.Column="0"/>
                        <TextBox IsReadOnly="True" Margin="4" Text="{Binding PanelTitle, Mode=OneWay}" FontWeight="Bold"
                                 TextWrapping="WrapWithOverflow" Grid.Column="1" FontSize="10"
                                 Background="WhiteSmoke" BorderThickness="0" Foreground="Black" />
                    </Grid>

                    <TextBox IsReadOnly="True" Margin="4" Text="{Binding Description, Mode=OneWay}"
                             BorderThickness="0" Background="WhiteSmoke" Foreground="Black"
                             FontSize="10" TextWrapping="WrapWithOverflow" />

                    <WrapPanel>
                        <controls:LinkButton Margin="4"
                                Visibility="{Binding CanExecuteIndenterCommand, Converter={StaticResource BoolToVisibility}, UpdateSourceTrigger=PropertyChanged}"
                                Command="{Binding IndenterCommand}"
                                CommandParameter="{Binding SelectedItem}"
                                Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_Indent}" />
                        <controls:LinkButton Margin="4"
                                Visibility="{Binding CanExecuteRenameCommand, Converter={StaticResource BoolToVisibility}}"
                                Command="{Binding RenameCommand}"
                                CommandParameter="{Binding SelectedItem}"
                                Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=Rename}" />
                        <controls:LinkButton Margin="4"
                                Visibility="{Binding CanExecuteFindAllReferencesCommand, Converter={StaticResource BoolToVisibility}}"
                                Command="{Binding FindAllReferencesCommand}"
                                CommandParameter="{Binding SelectedItem}"
                                Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=CodeExplorer_FindAllReferencesText}" />
                    </WrapPanel>
                </WrapPanel>
            </ScrollViewer>
        </Border>
    </Grid>
</UserControl>
