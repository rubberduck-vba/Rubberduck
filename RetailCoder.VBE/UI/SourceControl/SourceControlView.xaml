<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
             xmlns:sourceControl="clr-namespace:Rubberduck.UI.SourceControl"
             xmlns:controls="clr-namespace:Rubberduck.UI.Controls"
             xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" x:Class="Rubberduck.UI.SourceControl.SourceControlView"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="300"
             d:DataContext="{d:DesignInstance {x:Type sourceControl:SourceControlViewViewModel}, IsDesignTimeCreatable=False}">
    <UserControl.Resources>
        <BitmapImage x:Key="RefreshImage" UriSource="../../Resources/arrow-circle-double.png" />
        <BitmapImage x:Key="OpenRepoImage" UriSource="../../Resources/folder-horizontal-open.png" />
        <BitmapImage x:Key="CreateRepoImage" UriSource="../../Resources/init-repo.png" />
        <BitmapImage x:Key="CloneRepoImage" UriSource="../../Resources/drive-download.png" />
        <BitmapImage x:Key="PublishRepoImage" UriSource="../../Resources/drive-upload.png" />
        <BitmapImage x:Key="GitIcon" UriSource="../../Resources/icon-github.png" />
        <BitmapImage x:Key="ErrorImage" UriSource="../../Resources/cross-circle.png" />
        <BitmapImage x:Key="WarningIcon" UriSource="../../Resources/exclamation-white.png" />
        <BitmapImage x:Key="OpenCommandPromptImage" UriSource="../../Resources/Terminal.png" />

        <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>

        <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFD9F4FF" Offset="0"/>
            <GradientStop Color="#FF9BDDFB" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEEEDED" Offset="0"/>
            <GradientStop Color="#FFDDDDDD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />

        <SolidColorBrush x:Key="ToolBarHorizontalBackground" Color="#FFEEF5FD"/>
        <SolidColorBrush x:Key="ToolBarToggleButtonVerticalBackground" Color="#FFEEF5FD"/>
        <SolidColorBrush x:Key="ToolBarButtonHover" Color="#210080FF"/>
        <SolidColorBrush x:Key="ToolBarGripper" Color="#FF6D6D6D"/>
        <Style x:Key="ToolBarVerticalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonVerticalBackground}"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="Bd" SnapsToDevicePixels="true" CornerRadius="0,0,3,3" Background="{TemplateBinding Background}">
                            <Canvas Width="7" VerticalAlignment="Bottom" SnapsToDevicePixels="true" Margin="2,7,2,2" Height="6" HorizontalAlignment="Right">
                                <Path Data="M 1.5 1 L 1.5 6" Stroke="White"/>
                                <Path Data="M 0.5 0 L 0.5 5" Stroke="{TemplateBinding Foreground}"/>
                                <Path Data="M 3.5 0.5 L 7 3.5 L 4 6.5 Z" Fill="White"/>
                                <Path Data="M 3 -0.5 L 6 2.5 L 3 5.5 Z" Fill="{TemplateBinding Foreground}"/>
                            </Canvas>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="ToolBarVerticalBackground" Color="#FFEEF5FD"/>
        <SolidColorBrush x:Key="ToolBarToggleButtonHorizontalBackground" Color="#FFEEF5FD"/>
        <Style x:Key="ToolBarHorizontalOverflowButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{StaticResource ToolBarToggleButtonHorizontalBackground}"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="Bd" SnapsToDevicePixels="true" CornerRadius="0,3,3,0" Background="{TemplateBinding Background}">
                            <Canvas Width="6" VerticalAlignment="Bottom" SnapsToDevicePixels="true" Margin="7,2,2,2" Height="7" HorizontalAlignment="Right">
                                <Path Data="M 1 1.5 L 6 1.5" Stroke="White"/>
                                <Path Data="M 0 0.5 L 5 0.5" Stroke="{TemplateBinding Foreground}"/>
                                <Path Data="M 0.5 4 L 6.5 4 L 3.5 7 Z" Fill="White"/>
                                <Path Data="M -0.5 3 L 5.5 3 L 2.5 6 Z" Fill="{TemplateBinding Foreground}"/>
                            </Canvas>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ToolBarButtonHover}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{StaticResource ToolBarGripper}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <SolidColorBrush x:Key="ToolBarMenuBorder" Color="#FFB6BDC5"/>
        <SolidColorBrush x:Key="ToolBarSubMenuBackground" Color="#FFEEF5FD"/>
        <Style x:Key="ToolBarThumbStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border SnapsToDevicePixels="True" Padding="{TemplateBinding Padding}" Background="Transparent">
                            <Rectangle>
                                <Rectangle.Fill>
                                    <DrawingBrush ViewboxUnits="Absolute" ViewportUnits="Absolute" Viewport="0,0,4,4" Viewbox="0,0,4,4" TileMode="Tile">
                                        <DrawingBrush.Drawing>
                                            <DrawingGroup>
                                                <GeometryDrawing Brush="White" Geometry="M 1 1 L 1 3 L 3 3 L 3 1 z"/>
                                                <GeometryDrawing Brush="{StaticResource ToolBarGripper}" Geometry="M 0 0 L 0 2 L 2 2 L 2 0 z"/>
                                            </DrawingGroup>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Cursor" Value="SizeAll"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ToolBarMainPanelBorderStyle" TargetType="{x:Type Border}">
            <Setter Property="Margin" Value="0,0,11,0"/>
            <Setter Property="CornerRadius" Value="3,3,3,3"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="CornerRadius" Value="0,0,0,0"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ToolBarWithOverflowOnlyShowingWhenNeededStyle" TargetType="{x:Type ToolBar}">
            <Setter Property="Background" Value="{StaticResource ToolBarHorizontalBackground}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToolBar}">
                        <Grid x:Name="Grid" Margin="3,1,1,1" SnapsToDevicePixels="true">
                            <Grid x:Name="OverflowGrid" HorizontalAlignment="Right">
                                <ToggleButton x:Name="OverflowButton" ClickMode="Press" FocusVisualStyle="{x:Null}" IsChecked="{Binding IsOverflowOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" IsEnabled="{TemplateBinding HasOverflowItems}" Style="{StaticResource ToolBarHorizontalOverflowButtonStyle}" Visibility="{Binding IsEnabled, Converter={StaticResource BoolToVisibility}, ElementName=OverflowButton}"/>
                                <Popup x:Name="OverflowPopup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsOverflowOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" StaysOpen="false">
                                    <themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                        <Border x:Name="ToolBarSubMenuBorder" BorderBrush="{StaticResource ToolBarMenuBorder}" BorderThickness="1" Background="{StaticResource ToolBarSubMenuBackground}" RenderOptions.ClearTypeHint="Enabled">
                                            <ToolBarOverflowPanel x:Name="PART_ToolBarOverflowPanel" KeyboardNavigation.DirectionalNavigation="Cycle" FocusVisualStyle="{x:Null}" Focusable="true" Margin="2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle" WrapWidth="200"/>
                                        </Border>
                                    </themes:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <Border x:Name="MainPanelBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" Style="{StaticResource ToolBarMainPanelBorderStyle}">
                                <DockPanel KeyboardNavigation.TabIndex="1" KeyboardNavigation.TabNavigation="Local">
                                    <Thumb x:Name="ToolBarThumb" Margin="-3,-1,0,0" Padding="6,5,1,6" Style="{StaticResource ToolBarThumbStyle}" Width="10"/>
                                    <ContentPresenter x:Name="ToolBarHeader" ContentSource="Header" HorizontalAlignment="Center" Margin="4,0,4,0" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
                                    <ToolBarPanel x:Name="PART_ToolBarPanel" IsItemsHost="true" Margin="0,1,2,2" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsOverflowOpen" Value="true">
                                <Setter Property="IsEnabled" TargetName="ToolBarThumb" Value="false"/>
                            </Trigger>
                            <Trigger Property="Header" Value="{x:Null}">
                                <Setter Property="Visibility" TargetName="ToolBarHeader" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="ToolBarTray.IsLocked" Value="true">
                                <Setter Property="Visibility" TargetName="ToolBarThumb" Value="Collapsed"/>
                            </Trigger>
                            <Trigger Property="HasDropShadow" SourceName="OverflowPopup" Value="true">
                                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true"/>
                                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                            </Trigger>
                            <Trigger Property="Orientation" Value="Vertical">
                                <Setter Property="Margin" TargetName="Grid" Value="1,3,1,1"/>
                                <Setter Property="Style" TargetName="OverflowButton" Value="{StaticResource ToolBarVerticalOverflowButtonStyle}"/>
                                <Setter Property="Height" TargetName="ToolBarThumb" Value="10"/>
                                <Setter Property="Width" TargetName="ToolBarThumb" Value="Auto"/>
                                <Setter Property="Margin" TargetName="ToolBarThumb" Value="-1,-3,0,0"/>
                                <Setter Property="Padding" TargetName="ToolBarThumb" Value="5,6,6,1"/>
                                <Setter Property="Margin" TargetName="ToolBarHeader" Value="0,0,0,4"/>
                                <Setter Property="Margin" TargetName="PART_ToolBarPanel" Value="1,0,2,2"/>
                                <Setter Property="DockPanel.Dock" TargetName="ToolBarThumb" Value="Top"/>
                                <Setter Property="DockPanel.Dock" TargetName="ToolBarHeader" Value="Top"/>
                                <Setter Property="HorizontalAlignment" TargetName="OverflowGrid" Value="Stretch"/>
                                <Setter Property="VerticalAlignment" TargetName="OverflowGrid" Value="Bottom"/>
                                <Setter Property="Placement" TargetName="OverflowPopup" Value="Right"/>
                                <Setter Property="Margin" TargetName="MainPanelBorder" Value="0,0,0,11"/>
                                <Setter Property="Background" Value="{StaticResource ToolBarVerticalBackground}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding Source={x:Static SystemParameters.HighContrast}}" Value="true">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <SolidColorBrush x:Key="ToolBarSeparatorFill" Color="#FFB6BDC5"/>
        <SolidColorBrush x:Key="ToolBarButtonHoverBorder" Color="#80DADADA"/>
        <SolidColorBrush x:Key="ToolBarOpenHeaderBackground" Color="#FFEEF5FD"/>
        <Geometry x:Key="RightArrow">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
        <Style x:Key="MenuStyle1" TargetType="{x:Type Menu}">
            <Style.Resources>
                <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" TargetType="{x:Type Separator}">
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="Background" Value="{StaticResource ToolBarSeparatorFill}"/>
                    <Setter Property="Height" Value="1"/>
                    <Setter Property="Margin" Value="0,1,0,0"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type Separator}">
                                <Grid SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1" Margin="8,0,0,0"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style x:Key="{x:Type MenuItem}" TargetType="{x:Type MenuItem}">
                    <Setter Property="OverridesDefaultStyle" Value="true"/>
                    <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="Margin" Value="0,1,0,0"/>
                    <Setter Property="Padding" Value="8,3,8,3"/>
                    <Setter Property="DockPanel.Dock" Value="Top"/>
                    <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                    <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <Grid Background="Transparent" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                        <ColumnDefinition Width="14"/>
                                    </Grid.ColumnDefinitions>
                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Margin="1,0"/>
                                    <ContentPresenter Grid.Column="0" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <TextBlock Grid.Column="1" HorizontalAlignment="Right" Margin="4,3,2,3" Text="{TemplateBinding InputGestureText}"/>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsHighlighted" Value="true">
                                        <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder}"/>
                                        <Setter Property="Background" TargetName="Border" Value="{StaticResource ToolBarButtonHover}"/>
                                    </Trigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Style.Triggers>
                        <Trigger Property="Role" Value="TopLevelHeader">
                            <Setter Property="Padding" Value="6,2,7,2"/>
                            <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                            <DockPanel x:Name="Header">
                                                <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" HorizontalOffset="-1" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Bottom">
                                                    <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                                        <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource ToolBarMenuBorder}" BorderThickness="1" Background="{StaticResource ToolBarSubMenuBackground}">
                                                            <Grid>
                                                                <Rectangle Fill="{StaticResource ToolBarSubMenuBackground}" HorizontalAlignment="Left" Height="1" Margin="0,-1,0,0" VerticalAlignment="Top" Width="{Binding ActualWidth, ElementName=Header}"/>
                                                                <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                                    <Grid RenderOptions.ClearTypeHint="Enabled" Grid.IsSharedSizeScope="true">
                                                                        <Grid.ColumnDefinitions>
                                                                            <ColumnDefinition Width="*"/>
                                                                        </Grid.ColumnDefinitions>
                                                                        <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                            <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                                                        </Canvas>
                                                                        <Rectangle Fill="{StaticResource ToolBarVerticalBackground}" Margin="0,1"/>
                                                                        <ItemsPresenter x:Name="ItemsPresenter" Grid.ColumnSpan="1" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="0,0,0,1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                                                    </Grid>
                                                                </ScrollViewer>
                                                            </Grid>
                                                        </Border>
                                                    </Themes:SystemDropShadowChrome>
                                                </Popup>
                                            </DockPanel>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                            </Trigger>
                                            <Trigger Property="IsHighlighted" Value="true">
                                                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder}"/>
                                                <Setter Property="Background" TargetName="Border" Value="{StaticResource ToolBarButtonHover}"/>
                                            </Trigger>
                                            <Trigger Property="IsSubmenuOpen" Value="true">
                                                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource ToolBarMenuBorder}"/>
                                                <Setter Property="Background" TargetName="Border" Value="{StaticResource ToolBarOpenHeaderBackground}"/>
                                            </Trigger>
                                            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                                <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true"/>
                                                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Role" Value="TopLevelItem">
                            <Setter Property="Margin" Value="0,1,0,1"/>
                            <Setter Property="Padding" Value="7,1,8,2"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                        <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                            <DockPanel>
                                                <ContentPresenter ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </DockPanel>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsHighlighted" Value="true">
                                                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder}"/>
                                                <Setter Property="Background" TargetName="Border" Value="{StaticResource ToolBarButtonHover}"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter Property="DockPanel.Dock" Value="Top"/>
                            <Setter Property="Padding" Value="8,3,8,3"/>
                            <Setter Property="Grid.IsSharedSizeScope" Value="true"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type MenuItem}">
                                        <Grid Background="Transparent" SnapsToDevicePixels="true">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="MenuItemIGTColumnGroup" Width="Auto"/>
                                                <ColumnDefinition Width="14"/>
                                            </Grid.ColumnDefinitions>
                                            <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.ColumnSpan="4" Margin="1,0"/>
                                            <ContentPresenter Grid.Column="0" ContentSource="Header" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            <Path Grid.Column="1" DockPanel.Dock="Right" Data="{StaticResource RightArrow}" Fill="{TemplateBinding Foreground}" Margin="4,0,6,0" VerticalAlignment="Center"/>
                                            <Popup x:Name="PART_Popup" AllowsTransparency="true" Focusable="false" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" Placement="Right">
                                                <Themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                                    <Border x:Name="SubMenuBorder" BorderBrush="{StaticResource ToolBarMenuBorder}" BorderThickness="1" Background="{StaticResource ToolBarSubMenuBackground}" Grid.IsSharedSizeScope="true">
                                                        <ScrollViewer x:Name="SubMenuScrollViewer" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly={x:Type FrameworkElement}}}">
                                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition Width="*"/>
                                                                </Grid.ColumnDefinitions>
                                                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=SubMenuBorder}" Height="{Binding ActualHeight, ElementName=SubMenuBorder}" Width="{Binding ActualWidth, ElementName=SubMenuBorder}"/>
                                                                </Canvas>
                                                                <Rectangle Fill="{StaticResource ToolBarVerticalBackground}" Margin="0,1"/>
                                                                <ItemsPresenter x:Name="ItemsPresenter" Grid.ColumnSpan="1" KeyboardNavigation.DirectionalNavigation="Cycle" Margin="0,0,0,1" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" KeyboardNavigation.TabNavigation="Cycle"/>
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </Border>
                                                </Themes:SystemDropShadowChrome>
                                            </Popup>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                                <Setter Property="PopupAnimation" TargetName="PART_Popup" Value="None"/>
                                            </Trigger>
                                            <Trigger Property="IsHighlighted" Value="true">
                                                <Setter Property="BorderBrush" TargetName="Border" Value="{StaticResource ToolBarButtonHoverBorder}"/>
                                                <Setter Property="Background" TargetName="Border" Value="{StaticResource ToolBarButtonHover}"/>
                                            </Trigger>
                                            <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                                <Setter Property="Margin" TargetName="Shdw" Value="0,0,5,5"/>
                                                <Setter Property="SnapsToDevicePixels" TargetName="Shdw" Value="true"/>
                                                <Setter Property="Color" TargetName="Shdw" Value="#71000000"/>
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="false">
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                            </Trigger>
                                            <Trigger Property="ScrollViewer.CanContentScroll" SourceName="SubMenuScrollViewer" Value="false">
                                                <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}"/>
                                                <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Style.Resources>
            <Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
            <Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
            <Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
            <Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>



    </UserControl.Resources>
    <Grid>
        <DockPanel>
            <ToolBarTray DockPanel.Dock="Top"
                         IsLocked="True">
                <ToolBar Style="{DynamicResource ToolBarWithOverflowOnlyShowingWhenNeededStyle}">
                    <Button ToolTip="{Resx Key=Refresh, ResxName=Rubberduck.UI.RubberduckUI}"
                            Command="{Binding RefreshCommand, Mode=OneWay}"
                            BorderThickness="0"
                            Background="Transparent">
                        <Image Source="{StaticResource RefreshImage}" />
                    </Button>
                    <Separator />
                    <Menu Style="{DynamicResource PrettyMenuStyle}">
                        <MenuItem Header="{Resx Key=SourceControl_ManageRepositories, ResxName=Rubberduck.UI.RubberduckUI}">
                            <MenuItem Command="{Binding OpenRepoCommand, Mode=OneWay}">
                                <MenuItem.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Height="16"
                                               Margin="0,2,7,0"
                                               Source="{StaticResource OpenRepoImage}"
                                               VerticalAlignment="Top" />
                                        <StackPanel Grid.Column="1">
                                            <TextBlock FontWeight="Bold"
                                                       Text="{Resx Key=SourceControl_OpenRepositoryTitle, ResxName=Rubberduck.UI.RubberduckUI}" />
                                            <TextBlock Text="{Resx Key=SourceControl_OpenRepositoryDescription, ResxName=Rubberduck.UI.RubberduckUI}"
                                                       TextWrapping="WrapWithOverflow"
                                                       Width="200" />
                                        </StackPanel>
                                    </Grid>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding InitRepoCommand, Mode=OneWay}">
                                <MenuItem.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Height="16"
                                               Margin="0,2,7,0"
                                               Source="{StaticResource CreateRepoImage}"
                                               VerticalAlignment="Top" />
                                        <StackPanel Grid.Column="1">
                                            <TextBlock FontWeight="Bold"
                                                       Text="{Resx Key=SourceControl_InitializeRepositoryTitle, ResxName=Rubberduck.UI.RubberduckUI}" />
                                            <TextBlock Text="{Resx Key=SourceControl_InitializeRepositoryDescription, ResxName=Rubberduck.UI.RubberduckUI}"
                                                       TextWrapping="WrapWithOverflow"
                                                       Width="200" />
                                        </StackPanel>
                                    </Grid>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding CloneRepoCommand, Mode=OneWay}">
                                <MenuItem.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Height="16"
                                               Margin="0,2,7,0"
                                               Source="{StaticResource CloneRepoImage}"
                                               VerticalAlignment="Top" />
                                        <StackPanel Grid.Column="1">
                                            <TextBlock FontWeight="Bold"
                                                       Text="{Resx Key=SourceControl_CloneRepositoryTitle, ResxName=Rubberduck.UI.RubberduckUI}" />
                                            <TextBlock Text="{Resx Key=SourceControl_CloneRepositoryDescription, ResxName=Rubberduck.UI.RubberduckUI}"
                                                       TextWrapping="WrapWithOverflow"
                                                       Width="200" />
                                        </StackPanel>
                                    </Grid>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding PublishRepoCommand, Mode=OneWay}">
                                <MenuItem.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Image Height="16"
                                               Margin="0,2,7,0"
                                               Source="{StaticResource PublishRepoImage}"
                                               VerticalAlignment="Top" />
                                        <StackPanel Grid.Column="1">
                                            <TextBlock FontWeight="Bold"
                                                       Text="{Resx Key=SourceControl_PublishRepositoryTitle, ResxName=Rubberduck.UI.RubberduckUI}" />
                                            <TextBlock Text="{Resx Key=SourceControl_PublishRepositoryDescription, ResxName=Rubberduck.UI.RubberduckUI}"
                                                       TextWrapping="WrapWithOverflow"
                                                       Width="200" />
                                        </StackPanel>
                                    </Grid>
                                </MenuItem.Header>
                            </MenuItem>
                        </MenuItem>
                    </Menu>
                    <Button ToolTip="{Resx Key=SourceControl_OpenCommandPromptButtonToolTip, ResxName=Rubberduck.UI.RubberduckUI}"
                            Command="{Binding OpenCommandPromptCommand, Mode=OneWay}"
                            BorderThickness="0"
                            Background="Transparent">
                        <Image Source="{StaticResource OpenCommandPromptImage}" />
                    </Button>
                    <Separator />
                    <StackPanel Orientation="Horizontal">
                        <Image Source="{StaticResource GitIcon}" Height="25" />
                        <TextBlock Text="{Binding Status}"
                                   VerticalAlignment="Center"/>
                    </StackPanel>
                </ToolBar>
            </ToolBarTray>

            <Grid Visibility="{Binding DisplayErrorMessageGrid, Converter={StaticResource BoolToVisibility}}"
                  DockPanel.Dock="Top">
                <StackPanel Background="LightYellow">
                    <Grid HorizontalAlignment="Stretch">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Image Source="{Binding ErrorIcon, UpdateSourceTrigger=PropertyChanged}"
                               Height="16"
                               Margin="5"
                               VerticalAlignment="Top" />
                        <StackPanel Grid.Column="1">
                            <TextBlock Text="{Binding ErrorTitle, UpdateSourceTrigger=PropertyChanged}"
                                       TextWrapping="WrapWithOverflow"
                                       Margin="5,7,5,0"
                                       FontWeight="Bold" />
                            <TextBlock Text="{Binding ErrorMessage, UpdateSourceTrigger=PropertyChanged}"
                                       TextWrapping="WrapWithOverflow"
                                       Margin="5" />
                        </StackPanel>
                    </Grid>
                    <controls:LinkButton HorizontalAlignment="Right"
                            Content="{Resx Key=SourceControl_Dismiss, ResxName=Rubberduck.UI.RubberduckUI}"
                            Padding="5"
                            Margin="0,0,5,5"
                            Command="{Binding DismissErrorMessageCommand}" />
                </StackPanel>
            </Grid>

            <Grid Visibility="{Binding DisplayLoginGrid, Converter={StaticResource BoolToVisibility}}"
                  DockPanel.Dock="Top">
                <StackPanel VerticalAlignment="Top">
                    <Grid HorizontalAlignment="Stretch"
                          Background="LightYellow">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="25" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Image Source="{StaticResource WarningIcon}"
                               Height="16"
                               Margin="5"
                               VerticalAlignment="Top" />
                        <StackPanel Grid.Column="1">
                            <TextBlock Text="{Resx Key=SourceControl_MissingCredentials, ResxName=Rubberduck.UI.RubberduckUI}"
                               TextWrapping="WrapWithOverflow"
                               FontWeight="Bold"
                               Margin="5,7,5,3" />
                            <TextBlock Text="{Resx Key=SourceControl_LoginInstructions, ResxName=Rubberduck.UI.RubberduckUI}"
                               TextWrapping="WrapWithOverflow"
                               Margin="5,0,5,12" />
                        </StackPanel>
                    </Grid>
                    <Border Background="LightGray" Height="2" />

                    <TextBlock Text="{Resx Key=SourceControl_UserNameLabel, ResxName=Rubberduck.UI.RubberduckUI}"
                               FontWeight="SemiBold"
                               Margin="5,5,5,5" />
                    <TextBox x:Name="UserNameBox"
                             Margin="5,0,5,10"
                             Height="18"
                             VerticalContentAlignment="Center" />

                    <TextBlock Text="{Resx Key=SourceControl_PasswordLabel, ResxName=Rubberduck.UI.RubberduckUI}"
                               FontWeight="SemiBold"
                               Margin="5,0,5,5" />
                    <PasswordBox x:Name="PasswordBox"
                                 Margin="5,0,5,10"
                                 Height="18"
                                 VerticalContentAlignment="Center" />

                    <Grid Grid.IsSharedSizeScope="True"
                          HorizontalAlignment="Right"
                          Margin="0,0,5,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="LoginButtons" />
                            <ColumnDefinition SharedSizeGroup="LoginButtons" />
                        </Grid.ColumnDefinitions>
                        <Button Content="{Resx Key=OK, ResxName=Rubberduck.UI.RubberduckUI}"
                                Padding="5"
                                Click="Login_Click"
                                Command="{Binding LoginGridOkCommand}"
                                CommandParameter="{Binding Text, ElementName=UserNameBox}"/>
                        <Button Content="{Resx Key=CancelButtonText, ResxName=Rubberduck.UI.RubberduckUI}"
                                Grid.Column="1"
                                Margin="10,0,0,0"
                                Padding="5"
                                Command="{Binding LoginGridCancelCommand}"/>
                    </Grid>
                </StackPanel>
            </Grid>

            <Grid Visibility="{Binding DisplayCloneRepoGrid, Converter={StaticResource BoolToVisibility}}"
                  DockPanel.Dock="Top">
                <StackPanel VerticalAlignment="Top"
                            Margin="10,5">
                    <TextBlock Text="{Resx Key=SourceControl_RemotePathLabel, ResxName=Rubberduck.UI.RubberduckUI}"
                               FontWeight="SemiBold"
                               Margin="0,0,0,5" />
                    <TextBox Text="{Binding CloneRemotePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Margin="0,0,0,10"
                             Height="18"
                             VerticalContentAlignment="Center" />
                    <Image Source="{StaticResource ErrorImage}"
                           HorizontalAlignment="Right"
                           Margin="0,-57,-7.8,0"
                           Width="16"
                           Visibility="{Binding IsNotValidCloneRemotePath, Converter={StaticResource BoolToVisibility}}" />

                    <TextBlock Text="{Resx Key=SourceControl_LocalDirectoryLabel, ResxName=Rubberduck.UI.RubberduckUI}"
                               FontWeight="SemiBold"
                               Margin="0,0,0,5" />
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="40" />
                        </Grid.ColumnDefinitions>
                        <TextBox Text="{Binding LocalDirectory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                 Margin="0,0,0,10"
                                 Height="18"
                                 VerticalContentAlignment="Center" />
                        <Button Content="…"
                                Margin="5,0,0,10"
                                Height="18"
                                Grid.Column="1"
                                FontSize="15"
                                Command="{Binding ShowFilePickerCommand}" />
                    </Grid>

                    <Grid Grid.IsSharedSizeScope="True"
                          HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="CloneRepoButtons" />
                            <ColumnDefinition SharedSizeGroup="CloneRepoButtons" />
                        </Grid.ColumnDefinitions>
                        <Button Content="{Resx Key=OK, ResxName=Rubberduck.UI.RubberduckUI}"
                                Padding="5"
                                Command="{Binding CloneRepoOkButtonCommand}"/>
                        <Button Content="{Resx Key=CancelButtonText, ResxName=Rubberduck.UI.RubberduckUI}"
                                Grid.Column="1"
                                Margin="10,0,0,0"
                                Padding="5"
                                Command="{Binding CloneRepoCancelButtonCommand}"/>
                    </Grid>
                </StackPanel>
            </Grid>

            <Grid Visibility="{Binding DisplayPublishRepoGrid, Converter={StaticResource BoolToVisibility}}"
                  DockPanel.Dock="Top">
                <StackPanel VerticalAlignment="Top"
                            Margin="10,5">
                    <TextBlock Text="{Resx Key=SourceControl_RemotePathLabel, ResxName=Rubberduck.UI.RubberduckUI}"
                               FontWeight="SemiBold"
                               Margin="0,0,0,5" />
                    <TextBox Text="{Binding PublishRemotePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             Margin="0,0,0,10"
                             Height="18"
                             VerticalContentAlignment="Center" />
                    <Image Source="{StaticResource ErrorImage}"
                           HorizontalAlignment="Right"
                           Margin="0,-57,-7.8,0"
                           Width="16"
                           Visibility="{Binding IsNotValidPublishRemotePath, Converter={StaticResource BoolToVisibility}}" />
                    <Image Source="{StaticResource ErrorImage}"
                               HorizontalAlignment="Right"
                               Margin="0,-57,-7.8,0"
                               Width="16"
                               Visibility="{Binding IsNotValidBranchName, Converter={StaticResource BoolToVisibility}}" />
                    <Grid Grid.IsSharedSizeScope="True"
                          HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="CreateRemoteRepoButtons" />
                            <ColumnDefinition SharedSizeGroup="CreateRemoteRepoButtons" />
                        </Grid.ColumnDefinitions>
                        <Button Content="{Resx Key=OK, ResxName=Rubberduck.UI.RubberduckUI}"
                                Padding="5"
                                Command="{Binding PublishRepoOkButtonCommand}"/>
                        <Button Content="{Resx Key=CancelButtonText, ResxName=Rubberduck.UI.RubberduckUI}"
                                Grid.Column="1"
                                Margin="10,0,0,0"
                                Padding="5"
                                Command="{Binding PublishRepoCancelButtonCommand}"/>
                    </Grid>
                </StackPanel>
            </Grid>
            <TabControl DockPanel.Dock="Bottom"
                        ItemsSource="{Binding TabItems}"
                        SelectedItem="{Binding SelectedItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
        </DockPanel>
    </Grid>
</UserControl>
