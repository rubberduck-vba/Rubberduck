<TabItem x:Class="Rubberduck.UI.SourceControl.UnsyncedCommitsView"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
         xmlns:sourceControl="clr-namespace:Rubberduck.UI.SourceControl"
         mc:Ignorable="d"
         Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_UnsyncedCommits}"
         d:DesignHeight="450" d:DesignWidth="300"
         d:DataContext="{d:DesignInstance {x:Type sourceControl:UnsyncedCommitsPanelViewModel}, IsDesignTimeCreatable=false}">
    <TabItem.Resources>
        <BitmapImage x:Key="FetchCommitsImage" UriSource="../../Resources/arrow-step.png" />
        <BitmapImage x:Key="PullCommitsImage" UriSource="../../Resources/drive-download.png" />
        <BitmapImage x:Key="PushCommitsImage" UriSource="../../Resources/drive-upload.png" />
        <BitmapImage x:Key="SyncCommitsImage" UriSource="../../Resources/arrow-circle-double.png" />

        <Style x:Key="PrettifyRow" TargetType="{x:Type DataGridRow}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="2"/>
                </Style>
            </Style.Resources>
            <Setter Property="BorderThickness" Value="0,.5,0,0" />
            <Setter Property="BorderBrush" Value="DarkGray" />
            <Setter Property="Height" Value="26" />
            <Setter Property="TextBlock.FontWeight" Value="Normal" />
            <Setter Property="Padding" Value="20,0,0,0" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderThickness" Value="1.5" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="#adc6e5"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="LightGray"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </TabItem.Resources>
    <Grid>
        <ScrollViewer VerticalScrollBarVisibility="Auto">
            <StackPanel Margin="5">
                <StackPanel Orientation="Horizontal">
                    <Label Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_CurrentBranchLabel}" />
                    <TextBlock FontWeight="SemiBold"
                               Padding="0,5,0,0"
                               Text="{Binding CurrentBranch, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </StackPanel>

                <WrapPanel Orientation="Horizontal"
                           Margin="5,-5,0,5"
                           Grid.IsSharedSizeScope="True">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="UnsyncedCommitButtons" />
                        </Grid.ColumnDefinitions>
                        <Button Margin="6"
                                Height="25"
                                Command="{Binding FetchCommitsCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource FetchCommitsImage}"
                                       Margin="5,0"
                                       Width="16"
                                       Height="16" />
                                <TextBlock Text="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_FetchCommitsLabel}"
                                           Margin="0,0,5,0"
                                           VerticalAlignment="Center" />
                            </StackPanel>
                        </Button>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="UnsyncedCommitButtons" />
                        </Grid.ColumnDefinitions>
                    <Button Margin="6"
                            Height="25"
                            Command="{Binding PullCommitsCommand}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{StaticResource PullCommitsImage}"
                                   Margin="5,0"
                                   Width="16"
                                   Height="16"  />
                            <TextBlock Text="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_PullCommitsLabel}"
                                       Margin="0,0,5,0"
                                       VerticalAlignment="Center" />
                        </StackPanel>
                        </Button>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="UnsyncedCommitButtons" />
                        </Grid.ColumnDefinitions>
                        <Button Margin="6"
                                Height="25"
                                Command="{Binding PushCommitsCommand}">
                        <StackPanel Orientation="Horizontal">
                            <Image Source="{StaticResource PushCommitsImage}"
                                   Margin="5,0"
                                   Width="16"
                                   Height="16"  />
                            <TextBlock Text="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_PushCommitsLabel}"
                                       Margin="0,0,5,0"
                                       VerticalAlignment="Center" />
                        </StackPanel>
                        </Button>
                    </Grid>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition SharedSizeGroup="UnsyncedCommitButtons" />
                        </Grid.ColumnDefinitions>
                        <Button Margin="6"
                                Height="25"
                                Command="{Binding SyncCommitsCommand}">
                            <StackPanel Orientation="Horizontal">
                                <Image Source="{StaticResource SyncCommitsImage}"
                                       Margin="5,0"
                                       Width="16"
                                       Height="16"  />
                                <TextBlock Text="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_SyncCommitsLabel}"
                                           Margin="0,0,5,0"
                                           VerticalAlignment="Center" />
                            </StackPanel>
                        </Button>
                    </Grid>
                </WrapPanel>

                <GroupBox Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_OutgoingCommits}"
                          Height="175"
                          Padding="5">
                    <DataGrid ItemsSource="{Binding OutgoingCommits}"
                              AutoGenerateColumns="False"
                              CanUserReorderColumns="False"
                              IsReadOnly="True"
                              SelectionMode="Single"
                              CanUserAddRows="False"
                              HorizontalGridLinesBrush="Transparent"
                              VerticalGridLinesBrush="Transparent"
                              HeadersVisibility="Column"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              ItemContainerStyle="{StaticResource PrettifyRow}"
                              ColumnHeaderHeight="22"
                              BorderThickness="0">
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Message}" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_Message}" Width="*" />
                            <DataGridTextColumn Binding="{Binding Author}" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_Author}" />
                            <DataGridTextColumn Binding="{Binding Id}" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_Id}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>
                <GroupBox Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_IncomingCommits}"
                          Height="175"
                          Padding="5">
                    <DataGrid ItemsSource="{Binding IncomingCommits}"
                              AutoGenerateColumns="False"
                              CanUserReorderColumns="False"
                              IsReadOnly="True"
                              SelectionMode="Single"
                              CanUserAddRows="False"
                              HorizontalGridLinesBrush="Transparent"
                              VerticalGridLinesBrush="Transparent"
                              HeadersVisibility="Column"
                              ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                              ItemContainerStyle="{StaticResource PrettifyRow}"
                              ColumnHeaderHeight="22"
                              BorderThickness="0">
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridTextColumn Binding="{Binding Message}" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_Message}" Width="*" />
                            <DataGridTextColumn Binding="{Binding Author}" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_Author}" />
                            <DataGridTextColumn Binding="{Binding Id}" Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SourceControl_Id}" />
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>
            </StackPanel>
        </ScrollViewer>
    </Grid>
</TabItem>
