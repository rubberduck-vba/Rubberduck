<UserControl x:Class="Rubberduck.UI.Settings.GeneralSettings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:settings="clr-namespace:Rubberduck.UI.Settings"
             xmlns:controls="clr-namespace:Rubberduck.UI.Controls"
             xmlns:converters="clr-namespace:Rubberduck.UI.Settings.Converters"
             xmlns:core="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300"
             d:DataContext="{d:DesignInstance {x:Type settings:GeneralSettingsViewModel}, IsDesignTimeCreatable=False}">
    <UserControl.Resources>
        <converters:DelimiterValueToTextConverter x:Key="DelimiterValueToText" />
        <converters:DelimiterToTextConverter x:Key="DelimiterToText" />
        <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFD9F4FF" Offset="0"/>
            <GradientStop Color="#FF9BDDFB" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEEEDED" Offset="0"/>
            <GradientStop Color="#FFDDDDDD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />

        <ObjectDataProvider x:Key="Delimiters"
                            MethodName="GetValues"
                            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="settings:DelimiterOptions"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Style x:Key="PrettifyRow" TargetType="{x:Type DataGridRow}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="2"/>
                </Style>
            </Style.Resources>
            <Setter Property="BorderThickness" Value="0,.5,0,0" />
            <Setter Property="BorderBrush" Value="DarkGray" />
            <Setter Property="Height" Value="26" />
            <Setter Property="TextBlock.FontWeight" Value="Normal" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderThickness" Value="1.5" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="#adc6e5"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="LightGray"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <ScrollViewer>
            <Grid>
                <StackPanel Grid.Row="0" Margin="5,5,5,0">
                    <Label DockPanel.Dock="Top"
                   Background="DarkGray"
                   Foreground="White"
                   FontWeight="SemiBold"
                   Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=SettingsCaption_GeneralSettings}"
                   Margin="0,0,0,3">
                        <Label.Style>
                            <Style>
                                <Style.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="5"/>
                                    </Style>
                                </Style.Resources>
                            </Style>
                        </Label.Style>
                    </Label>
                    <Label Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=GeneralSettings_LanguageLabel}"
                   FontWeight="SemiBold" />
                    <ComboBox Width="210"
                      HorizontalAlignment="Left"
                      Margin="5"
                      SelectedItem="{Binding SelectedLanguage, Mode=TwoWay}"
                      ItemsSource="{Binding Languages, UpdateSourceTrigger=PropertyChanged}"
                      DisplayMemberPath="Name" />

                    <Label Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=GeneralSettings_AutoSaveLabel}"
                   FontWeight="SemiBold" />
                    <StackPanel Orientation="Horizontal">
                        <CheckBox Name="AutoSaveButton"
                          Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=GeneralSettings_AutoSaveEnabled}"
                          Margin="5,0,0,5"
                          IsChecked="{Binding AutoSaveEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          HorizontalAlignment="Left" />
                        <controls:NumberPicker Margin="0,-6,0,0"
                                       IsEnabled="{Binding ElementName=AutoSaveButton, Path=IsChecked}"
                                       NumValue="{Binding AutoSavePeriod, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                       MinNumber="1"
                                       HorizontalAlignment="Left" />
                    </StackPanel>

                    <Label Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=GeneralSettings_FolderDelimiterLabel}"
                   FontWeight="SemiBold" />
                    <ComboBox Width="210"
                      HorizontalAlignment="Left"
                      Margin="5"
                      SelectedIndex="0"
                      ItemsSource="{Binding Source={StaticResource Delimiters}, Converter={StaticResource DelimiterToText}, UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{Binding Delimiter, Mode=TwoWay, Converter={StaticResource DelimiterValueToText}}" />

                    <Label Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=GeneralSettings_MinimumLogLevelLabel}"
                        FontWeight="SemiBold" />
                    <StackPanel Orientation="Horizontal">
                        <ComboBox Width="210"
                      HorizontalAlignment="Left"
                      Margin="5"
                      SelectedItem="{Binding SelectedLogLevel, Mode=TwoWay}"
                      ItemsSource="{Binding LogLevels, UpdateSourceTrigger=PropertyChanged}"
                      DisplayMemberPath="Name"/>
                        <Button 
                            Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=GeneralSettings_ShowLogFolder}"
                            Padding="5"
                            Command="{Binding ShowLogFolderCommand}"/>
                    </StackPanel>

                    <Label Content="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=GeneralSettings_HotkeysLabel}" FontWeight="SemiBold" />

                <DataGrid ItemsSource="{Binding Hotkeys}"
                      HorizontalAlignment="Stretch"
                      AutoGenerateColumns="False"
                      CanUserDeleteRows="False"
                      CanUserReorderColumns="False"
                      CanUserResizeColumns="True"
                      IsReadOnly="False"
                      SelectionMode="Single"
                      CanUserAddRows="False"
                      HorizontalGridLinesBrush="Transparent"
                      VerticalGridLinesBrush="Transparent"
                      HeadersVisibility="Column"
                      VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Hidden"
                      ItemContainerStyle="{StaticResource PrettifyRow}"
                      ColumnHeaderHeight="22"
                      Height="100"
                      BorderThickness="0">
                    <DataGrid.CellStyle>
                        <Style TargetType="{x:Type DataGridCell}">
                            <Setter Property="BorderThickness" Value="0" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="Background" Value="Transparent" />
                        </Style>
                    </DataGrid.CellStyle>
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn
                    Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=GeneralSettings_HotkeyEnabled}"
                    Width="Auto"
                    Binding="{Binding IsEnabled}" />
                        <DataGridTextColumn
                    Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=GeneralSettings_HotkeyDescription}"
                    Binding="{Binding Prompt}"
                    Width="*"
                    IsReadOnly="True" />
                        <DataGridCheckBoxColumn
                    Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=GeneralSettings_HotkeyShift}"
                    Width="Auto"
                    Binding="{Binding HasShiftModifier}" />
                        <DataGridCheckBoxColumn
                    Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=GeneralSettings_HotkeyAlt}"
                    Width="Auto"
                    Binding="{Binding HasAltModifier}" />
                        <DataGridCheckBoxColumn
                    Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=GeneralSettings_HotkeyCtrl}"
                    Width="Auto"
                    Binding="{Binding HasCtrlModifier}" />
                        <DataGridTemplateColumn
                    Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=GeneralSettings_HotkeyKey1}"
                    Width="Auto"
                    SortMemberPath="KeyDisplaySymbol">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Key1, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn
                    Header="{Resx ResxName=Rubberduck.UI.RubberduckUI, Key=GeneralSettings_HotkeyKey2}"
                    Width="Auto"
                    SortMemberPath="KeyDisplaySymbol"
                    Visibility="Collapsed">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBox Text="{Binding Key2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    </DataGrid>
                </StackPanel>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
