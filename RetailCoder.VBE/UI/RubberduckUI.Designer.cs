//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.18444
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rubberduck.UI {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class RubberduckUI {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RubberduckUI() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Rubberduck.UI.RubberduckUI", typeof(RubberduckUI).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parsing powered by ANTLR
        ///GitHub integration powered by LibGit2Sharp
        ///Fugue icons by Yusuke Kamiyamane ähnelt.
        /// </summary>
        public static string AboutWindow_AttributionList {
            get {
                return ResourceManager.GetString("AboutWindow_AttributionList", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Attributions ähnelt.
        /// </summary>
        public static string AboutWindow_AttributionsLabel {
            get {
                return ResourceManager.GetString("AboutWindow_AttributionsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Blogs: ähnelt.
        /// </summary>
        public static string AboutWindow_BlogsHeader {
            get {
                return ResourceManager.GetString("AboutWindow_BlogsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die About Rubberduck ähnelt.
        /// </summary>
        public static string AboutWindow_Caption {
            get {
                return ResourceManager.GetString("AboutWindow_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Community: ähnelt.
        /// </summary>
        public static string AboutWindow_CommunityHeader {
            get {
                return ResourceManager.GetString("AboutWindow_CommunityHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Contributors &amp; supporters: ähnelt.
        /// </summary>
        public static string AboutWindow_ContributorsHeader {
            get {
                return ResourceManager.GetString("AboutWindow_ContributorsHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die © Copyright 2014-2016 Mathieu Guindon &amp; Christopher McClellan ähnelt.
        /// </summary>
        public static string AboutWindow_Copyright {
            get {
                return ResourceManager.GetString("AboutWindow_Copyright", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All contributors to our GitHub repository
        ///All our stargazers, likers &amp; followers, for the warm fuzzies
        ///...and anyone reading this! ähnelt.
        /// </summary>
        public static string AboutWindow_GeneralThanks {
            get {
                return ResourceManager.GetString("AboutWindow_GeneralThanks", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Special Thanks ähnelt.
        /// </summary>
        public static string AboutWindow_SpecialThanksLabel {
            get {
                return ResourceManager.GetString("AboutWindow_SpecialThanksLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add ähnelt.
        /// </summary>
        public static string Add {
            get {
                return ResourceManager.GetString("Add", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Implementations of &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string AllImplementations_Caption {
            get {
                return ResourceManager.GetString("AllImplementations_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Class or member &apos;{0}&apos; is not implemented. ähnelt.
        /// </summary>
        public static string AllImplementations_NoneFound {
            get {
                return ResourceManager.GetString("AllImplementations_NoneFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All references: &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string AllReferences_Caption {
            get {
                return ResourceManager.GetString("AllReferences_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No references were found for identifier &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string AllReferences_NoneFound {
            get {
                return ResourceManager.GetString("AllReferences_NoneFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string CancelButtonText {
            get {
                return ResourceManager.GetString("CancelButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change ähnelt.
        /// </summary>
        public static string Change {
            get {
                return ResourceManager.GetString("Change", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Class module (.cls) ähnelt.
        /// </summary>
        public static string CodeExplorer_AddClassModuleText {
            get {
                return ResourceManager.GetString("CodeExplorer_AddClassModuleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User form (.frm) ähnelt.
        /// </summary>
        public static string CodeExplorer_AddFormText {
            get {
                return ResourceManager.GetString("CodeExplorer_AddFormText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Standard module (.bas) ähnelt.
        /// </summary>
        public static string CodeExplorer_AddStdModuleText {
            get {
                return ResourceManager.GetString("CodeExplorer_AddStdModuleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test module ähnelt.
        /// </summary>
        public static string CodeExplorer_AddTestModuleText {
            get {
                return ResourceManager.GetString("CodeExplorer_AddTestModuleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commit... ähnelt.
        /// </summary>
        public static string CodeExplorer_Commit {
            get {
                return ResourceManager.GetString("CodeExplorer_Commit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display member &amp;names ähnelt.
        /// </summary>
        public static string CodeExplorer_DisplayMemberNamesText {
            get {
                return ResourceManager.GetString("CodeExplorer_DisplayMemberNamesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display style ähnelt.
        /// </summary>
        public static string CodeExplorer_DisplayModeToolTip {
            get {
                return ResourceManager.GetString("CodeExplorer_DisplayModeToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display full &amp;signatures ähnelt.
        /// </summary>
        public static string CodeExplorer_DisplaySignaturesText {
            get {
                return ResourceManager.GetString("CodeExplorer_DisplaySignaturesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Export... ähnelt.
        /// </summary>
        public static string CodeExplorer_Export {
            get {
                return ResourceManager.GetString("CodeExplorer_Export", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find All Implementations... ähnelt.
        /// </summary>
        public static string CodeExplorer_FindAllImplementationsText {
            get {
                return ResourceManager.GetString("CodeExplorer_FindAllImplementationsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find All References... ähnelt.
        /// </summary>
        public static string CodeExplorer_FindAllReferencesText {
            get {
                return ResourceManager.GetString("CodeExplorer_FindAllReferencesText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Import... ähnelt.
        /// </summary>
        public static string CodeExplorer_Import {
            get {
                return ResourceManager.GetString("CodeExplorer_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Na&amp;vigate ähnelt.
        /// </summary>
        public static string CodeExplorer_Navigate {
            get {
                return ResourceManager.GetString("CodeExplorer_Navigate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;New ähnelt.
        /// </summary>
        public static string CodeExplorer_New {
            get {
                return ResourceManager.GetString("CodeExplorer_New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add a component to the active project ähnelt.
        /// </summary>
        public static string CodeExplorer_NewToolTip {
            get {
                return ResourceManager.GetString("CodeExplorer_NewToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Print... ähnelt.
        /// </summary>
        public static string CodeExplorer_Print {
            get {
                return ResourceManager.GetString("CodeExplorer_Print", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die R&amp;efresh ähnelt.
        /// </summary>
        public static string CodeExplorer_Refresh {
            get {
                return ResourceManager.GetString("CodeExplorer_Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh component ähnelt.
        /// </summary>
        public static string CodeExplorer_RefreshComponent {
            get {
                return ResourceManager.GetString("CodeExplorer_RefreshComponent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove... ähnelt.
        /// </summary>
        public static string CodeExplorer_Remove {
            get {
                return ResourceManager.GetString("CodeExplorer_Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run All &amp;Tests ähnelt.
        /// </summary>
        public static string CodeExplorer_RunAllTestsText {
            get {
                return ResourceManager.GetString("CodeExplorer_RunAllTestsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Designer ähnelt.
        /// </summary>
        public static string CodeExplorer_ShowDesignerToolTip {
            get {
                return ResourceManager.GetString("CodeExplorer_ShowDesignerToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Toggle folders ähnelt.
        /// </summary>
        public static string CodeExplorer_ShowFoldersToolTip {
            get {
                return ResourceManager.GetString("CodeExplorer_ShowFoldersToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Toggle signatures ähnelt.
        /// </summary>
        public static string CodeExplorer_ShowSignaturesToolTip {
            get {
                return ResourceManager.GetString("CodeExplorer_ShowSignaturesToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sort ähnelt.
        /// </summary>
        public static string CodeExplorer_Sort {
            get {
                return ResourceManager.GetString("CodeExplorer_Sort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Undo... ähnelt.
        /// </summary>
        public static string CodeExplorer_Undo {
            get {
                return ResourceManager.GetString("CodeExplorer_Undo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code Explorer ähnelt.
        /// </summary>
        public static string CodeExplorerDockablePresenter_Caption {
            get {
                return ResourceManager.GetString("CodeExplorerDockablePresenter_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} (parsing...) ähnelt.
        /// </summary>
        public static string CodeExplorerDockablePresenter_ParseStarted {
            get {
                return ResourceManager.GetString("CodeExplorerDockablePresenter_ParseStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By module ähnelt.
        /// </summary>
        public static string CodeInspectionResults_GroupByModule {
            get {
                return ResourceManager.GetString("CodeInspectionResults_GroupByModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By inspection type ähnelt.
        /// </summary>
        public static string CodeInspectionResults_GroupByType {
            get {
                return ResourceManager.GetString("CodeInspectionResults_GroupByType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Issue ähnelt.
        /// </summary>
        public static string CodeInspectionResults_Issue {
            get {
                return ResourceManager.GetString("CodeInspectionResults_Issue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Location ähnelt.
        /// </summary>
        public static string CodeInspectionResults_Location {
            get {
                return ResourceManager.GetString("CodeInspectionResults_Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type ähnelt.
        /// </summary>
        public static string CodeInspectionResults_Type {
            get {
                return ResourceManager.GetString("CodeInspectionResults_Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code Inspections ähnelt.
        /// </summary>
        public static string CodeInspections {
            get {
                return ResourceManager.GetString("CodeInspections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Copy inspection results to clipboard ähnelt.
        /// </summary>
        public static string CodeInspections_CopyToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_CopyToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigate to selected issue ähnelt.
        /// </summary>
        public static string CodeInspections_GoToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_GoToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Inspecting... ähnelt.
        /// </summary>
        public static string CodeInspections_Inspecting {
            get {
                return ResourceManager.GetString("CodeInspections_Inspecting", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ({1} issues) ähnelt.
        /// </summary>
        public static string CodeInspections_InspectingIssues_Plural {
            get {
                return ResourceManager.GetString("CodeInspections_InspectingIssues_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} ({1} issue) ähnelt.
        /// </summary>
        public static string CodeInspections_InspectingIssues_Singular {
            get {
                return ResourceManager.GetString("CodeInspections_InspectingIssues_Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigate to next issue ähnelt.
        /// </summary>
        public static string CodeInspections_NextToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_NextToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} issues ähnelt.
        /// </summary>
        public static string CodeInspections_NumberOfIssues_Plural {
            get {
                return ResourceManager.GetString("CodeInspections_NumberOfIssues_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} issue ähnelt.
        /// </summary>
        public static string CodeInspections_NumberOfIssues_Singular {
            get {
                return ResourceManager.GetString("CodeInspections_NumberOfIssues_Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck Code Inspections - {0}
        ///{1} issues found. ähnelt.
        /// </summary>
        public static string CodeInspections_NumberOfIssuesFound_Plural {
            get {
                return ResourceManager.GetString("CodeInspections_NumberOfIssuesFound_Plural", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck Code Inspections - {0}
        ///{1} issue found. ähnelt.
        /// </summary>
        public static string CodeInspections_NumberOfIssuesFound_Singular {
            get {
                return ResourceManager.GetString("CodeInspections_NumberOfIssuesFound_Singular", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigate to previous issue ähnelt.
        /// </summary>
        public static string CodeInspections_PreviousToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_PreviousToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Address the issue ähnelt.
        /// </summary>
        public static string CodeInspections_QuickFixToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_QuickFixToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run code inspections ähnelt.
        /// </summary>
        public static string CodeInspections_RefreshToolTip {
            get {
                return ResourceManager.GetString("CodeInspections_RefreshToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run code inspections ähnelt.
        /// </summary>
        public static string CodeInspections_Run {
            get {
                return ResourceManager.GetString("CodeInspections_Run", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code Quality Issues ähnelt.
        /// </summary>
        public static string CodeInspectionSettings_CodeQualityIssues {
            get {
                return ResourceManager.GetString("CodeInspectionSettings_CodeQualityIssues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Language Opportunities ähnelt.
        /// </summary>
        public static string CodeInspectionSettings_LanguageOpportunities {
            get {
                return ResourceManager.GetString("CodeInspectionSettings_LanguageOpportunities", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Maintainability and Readability Issues ähnelt.
        /// </summary>
        public static string CodeInspectionSettings_MaintainabilityAndReadabilityIssues {
            get {
                return ResourceManager.GetString("CodeInspectionSettings_MaintainabilityAndReadabilityIssues", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do Not Show ähnelt.
        /// </summary>
        public static string CodeInspectionSeverity_DoNotShow {
            get {
                return ResourceManager.GetString("CodeInspectionSeverity_DoNotShow", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error ähnelt.
        /// </summary>
        public static string CodeInspectionSeverity_Error {
            get {
                return ResourceManager.GetString("CodeInspectionSeverity_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hint ähnelt.
        /// </summary>
        public static string CodeInspectionSeverity_Hint {
            get {
                return ResourceManager.GetString("CodeInspectionSeverity_Hint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Suggestion ähnelt.
        /// </summary>
        public static string CodeInspectionSeverity_Suggestion {
            get {
                return ResourceManager.GetString("CodeInspectionSeverity_Suggestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning ähnelt.
        /// </summary>
        public static string CodeInspectionSeverity_Warning {
            get {
                return ResourceManager.GetString("CodeInspectionSeverity_Warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hook is already attached. ähnelt.
        /// </summary>
        public static string CommonHotkey_HookAttached {
            get {
                return ResourceManager.GetString("CommonHotkey_HookAttached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hook is already detached. ähnelt.
        /// </summary>
        public static string CommonHotkey_HookDetached {
            get {
                return ResourceManager.GetString("CommonHotkey_HookDetached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid key. ähnelt.
        /// </summary>
        public static string CommonHotkey_InvalidKey {
            get {
                return ResourceManager.GetString("CommonHotkey_InvalidKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hotkey ({0}) not registered. ähnelt.
        /// </summary>
        public static string CommonHotkey_KeyNotRegistered {
            get {
                return ResourceManager.GetString("CommonHotkey_KeyNotRegistered", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Component ähnelt.
        /// </summary>
        public static string Component {
            get {
                return ResourceManager.GetString("Component", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Find all references... ähnelt.
        /// </summary>
        public static string ContextMenu_FindAllReferences {
            get {
                return ResourceManager.GetString("ContextMenu_FindAllReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find &amp;symbol... ähnelt.
        /// </summary>
        public static string ContextMenu_FindSymbol {
            get {
                return ResourceManager.GetString("ContextMenu_FindSymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go to &amp;implementation... ähnelt.
        /// </summary>
        public static string ContextMenu_GoToImplementation {
            get {
                return ResourceManager.GetString("ContextMenu_GoToImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap cross_circle {
            get {
                object obj = ResourceManager.GetObject("cross_circle", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die class ähnelt.
        /// </summary>
        public static string DeclarationType_ClassModule {
            get {
                return ResourceManager.GetString("DeclarationType_ClassModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die constant ähnelt.
        /// </summary>
        public static string DeclarationType_Constant {
            get {
                return ResourceManager.GetString("DeclarationType_Constant", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die control ähnelt.
        /// </summary>
        public static string DeclarationType_Control {
            get {
                return ResourceManager.GetString("DeclarationType_Control", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die enum ähnelt.
        /// </summary>
        public static string DeclarationType_Enumeration {
            get {
                return ResourceManager.GetString("DeclarationType_Enumeration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die enum member ähnelt.
        /// </summary>
        public static string DeclarationType_EnumerationMember {
            get {
                return ResourceManager.GetString("DeclarationType_EnumerationMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die event ähnelt.
        /// </summary>
        public static string DeclarationType_Event {
            get {
                return ResourceManager.GetString("DeclarationType_Event", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die function ähnelt.
        /// </summary>
        public static string DeclarationType_Function {
            get {
                return ResourceManager.GetString("DeclarationType_Function", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die library function ähnelt.
        /// </summary>
        public static string DeclarationType_LibraryFunction {
            get {
                return ResourceManager.GetString("DeclarationType_LibraryFunction", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Library procedure ähnelt.
        /// </summary>
        public static string DeclarationType_LibraryProcedure {
            get {
                return ResourceManager.GetString("DeclarationType_LibraryProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die line label ähnelt.
        /// </summary>
        public static string DeclarationType_LineLabel {
            get {
                return ResourceManager.GetString("DeclarationType_LineLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die parameter ähnelt.
        /// </summary>
        public static string DeclarationType_Parameter {
            get {
                return ResourceManager.GetString("DeclarationType_Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die module ähnelt.
        /// </summary>
        public static string DeclarationType_ProceduralModule {
            get {
                return ResourceManager.GetString("DeclarationType_ProceduralModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die procedure ähnelt.
        /// </summary>
        public static string DeclarationType_Procedure {
            get {
                return ResourceManager.GetString("DeclarationType_Procedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die project ähnelt.
        /// </summary>
        public static string DeclarationType_Project {
            get {
                return ResourceManager.GetString("DeclarationType_Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die property get accessor ähnelt.
        /// </summary>
        public static string DeclarationType_PropertyGet {
            get {
                return ResourceManager.GetString("DeclarationType_PropertyGet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die property let accessor ähnelt.
        /// </summary>
        public static string DeclarationType_PropertyLet {
            get {
                return ResourceManager.GetString("DeclarationType_PropertyLet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die property set accessor ähnelt.
        /// </summary>
        public static string DeclarationType_PropertySet {
            get {
                return ResourceManager.GetString("DeclarationType_PropertySet", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die user-defined type ähnelt.
        /// </summary>
        public static string DeclarationType_UserDefinedType {
            get {
                return ResourceManager.GetString("DeclarationType_UserDefinedType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die user-defined type member ähnelt.
        /// </summary>
        public static string DeclarationType_UserDefinedTypeMember {
            get {
                return ResourceManager.GetString("DeclarationType_UserDefinedTypeMember", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die variable ähnelt.
        /// </summary>
        public static string DeclarationType_Variable {
            get {
                return ResourceManager.GetString("DeclarationType_Variable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deselect All ähnelt.
        /// </summary>
        public static string DeselectAll_Button {
            get {
                return ResourceManager.GetString("DeselectAll_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die You&apos;ve earned the &quot;Continuator&quot; badge! ähnelt.
        /// </summary>
        public static string EasterEgg_Continuator {
            get {
                return ResourceManager.GetString("EasterEgg_Continuator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Encapsulate Field ähnelt.
        /// </summary>
        public static string EncapsulateField_Caption {
            get {
                return ResourceManager.GetString("EncapsulateField_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please specify property name, parameter accessibility, and setter type. ähnelt.
        /// </summary>
        public static string EncapsulateField_InstructionText {
            get {
                return ResourceManager.GetString("EncapsulateField_InstructionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter Name: ähnelt.
        /// </summary>
        public static string EncapsulateField_ParameterName {
            get {
                return ResourceManager.GetString("EncapsulateField_ParameterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preview: ähnelt.
        /// </summary>
        public static string EncapsulateField_Preview {
            get {
                return ResourceManager.GetString("EncapsulateField_Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Property Name: ähnelt.
        /// </summary>
        public static string EncapsulateField_PropertyName {
            get {
                return ResourceManager.GetString("EncapsulateField_PropertyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Setter Type: ähnelt.
        /// </summary>
        public static string EncapsulateField_SetterType {
            get {
                return ResourceManager.GetString("EncapsulateField_SetterType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encapsulate Field ähnelt.
        /// </summary>
        public static string EncapsulateField_TitleText {
            get {
                return ResourceManager.GetString("EncapsulateField_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Absolute ähnelt.
        /// </summary>
        public static string EndOfLineCommentStyle_Absolute {
            get {
                return ResourceManager.GetString("EndOfLineCommentStyle_Absolute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Align In Column ähnelt.
        /// </summary>
        public static string EndOfLineCommentStyle_AlignInColumn {
            get {
                return ResourceManager.GetString("EndOfLineCommentStyle_AlignInColumn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Same Gap ähnelt.
        /// </summary>
        public static string EndOfLineCommentStyle_SameGap {
            get {
                return ResourceManager.GetString("EndOfLineCommentStyle_SameGap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Standard Gap ähnelt.
        /// </summary>
        public static string EndOfLineCommentStyle_StandardGap {
            get {
                return ResourceManager.GetString("EndOfLineCommentStyle_StandardGap", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Extract Interface ähnelt.
        /// </summary>
        public static string ExtractInterface_Caption {
            get {
                return ResourceManager.GetString("ExtractInterface_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please specify interface name and members. ähnelt.
        /// </summary>
        public static string ExtractInterface_InstructionLabel {
            get {
                return ResourceManager.GetString("ExtractInterface_InstructionLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Members ähnelt.
        /// </summary>
        public static string ExtractInterface_MembersGroupBox {
            get {
                return ResourceManager.GetString("ExtractInterface_MembersGroupBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extract Interface ähnelt.
        /// </summary>
        public static string ExtractInterface_TitleLabel {
            get {
                return ResourceManager.GetString("ExtractInterface_TitleLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Accessibility: ähnelt.
        /// </summary>
        public static string ExtractMethod_AccessibilityLabel {
            get {
                return ResourceManager.GetString("ExtractMethod_AccessibilityLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Extract Method ähnelt.
        /// </summary>
        public static string ExtractMethod_Caption {
            get {
                return ResourceManager.GetString("ExtractMethod_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please specify method name, return type and/or parameters (if applicable), and other options. ähnelt.
        /// </summary>
        public static string ExtractMethod_InstructionsText {
            get {
                return ResourceManager.GetString("ExtractMethod_InstructionsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The current selection is not valid. ähnelt.
        /// </summary>
        public static string ExtractMethod_InvalidSelectionMessage {
            get {
                return ResourceManager.GetString("ExtractMethod_InvalidSelectionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (none) ähnelt.
        /// </summary>
        public static string ExtractMethod_OutputNone {
            get {
                return ResourceManager.GetString("ExtractMethod_OutputNone", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameters: ähnelt.
        /// </summary>
        public static string ExtractMethod_ParametersLabel {
            get {
                return ResourceManager.GetString("ExtractMethod_ParametersLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Preview: ähnelt.
        /// </summary>
        public static string ExtractMethod_PreviewLabel {
            get {
                return ResourceManager.GetString("ExtractMethod_PreviewLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Return: ähnelt.
        /// </summary>
        public static string ExtractMethod_ReturnLabel {
            get {
                return ResourceManager.GetString("ExtractMethod_ReturnLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Set ähnelt.
        /// </summary>
        public static string ExtractMethod_SetBoxLabel {
            get {
                return ResourceManager.GetString("ExtractMethod_SetBoxLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extract method ähnelt.
        /// </summary>
        public static string ExtractMethod_TitleText {
            get {
                return ResourceManager.GetString("ExtractMethod_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find ähnelt.
        /// </summary>
        public static string Find {
            get {
                return ResourceManager.GetString("Find", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find symbol ähnelt.
        /// </summary>
        public static string FindSymbolDialog_Caption {
            get {
                return ResourceManager.GetString("FindSymbolDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fix ähnelt.
        /// </summary>
        public static string Fix {
            get {
                return ResourceManager.GetString("Fix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Re&amp;name ähnelt.
        /// </summary>
        public static string FormContextMenu_Rename {
            get {
                return ResourceManager.GetString("FormContextMenu_Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable Auto Save ähnelt.
        /// </summary>
        public static string GeneralSettings_AutoSaveEnabled {
            get {
                return ResourceManager.GetString("GeneralSettings_AutoSaveEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Auto Save: ähnelt.
        /// </summary>
        public static string GeneralSettings_AutoSaveLabel {
            get {
                return ResourceManager.GetString("GeneralSettings_AutoSaveLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Folder Delimiter: ähnelt.
        /// </summary>
        public static string GeneralSettings_FolderDelimiterLabel {
            get {
                return ResourceManager.GetString("GeneralSettings_FolderDelimiterLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alt ähnelt.
        /// </summary>
        public static string GeneralSettings_HotkeyAlt {
            get {
                return ResourceManager.GetString("GeneralSettings_HotkeyAlt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ctrl ähnelt.
        /// </summary>
        public static string GeneralSettings_HotkeyCtrl {
            get {
                return ResourceManager.GetString("GeneralSettings_HotkeyCtrl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description ähnelt.
        /// </summary>
        public static string GeneralSettings_HotkeyDescription {
            get {
                return ResourceManager.GetString("GeneralSettings_HotkeyDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enabled ähnelt.
        /// </summary>
        public static string GeneralSettings_HotkeyEnabled {
            get {
                return ResourceManager.GetString("GeneralSettings_HotkeyEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key1 ähnelt.
        /// </summary>
        public static string GeneralSettings_HotkeyKey1 {
            get {
                return ResourceManager.GetString("GeneralSettings_HotkeyKey1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Key2 ähnelt.
        /// </summary>
        public static string GeneralSettings_HotkeyKey2 {
            get {
                return ResourceManager.GetString("GeneralSettings_HotkeyKey2", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Shift ähnelt.
        /// </summary>
        public static string GeneralSettings_HotkeyShift {
            get {
                return ResourceManager.GetString("GeneralSettings_HotkeyShift", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hotkeys: ähnelt.
        /// </summary>
        public static string GeneralSettings_HotkeysLabel {
            get {
                return ResourceManager.GetString("GeneralSettings_HotkeysLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Display language: ähnelt.
        /// </summary>
        public static string GeneralSettings_LanguageLabel {
            get {
                return ResourceManager.GetString("GeneralSettings_LanguageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Period (.) ähnelt.
        /// </summary>
        public static string GeneralSettings_PeriodDelimiter {
            get {
                return ResourceManager.GetString("GeneralSettings_PeriodDelimiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Slash (/) ähnelt.
        /// </summary>
        public static string GeneralSettings_SlashDelimiter {
            get {
                return ResourceManager.GetString("GeneralSettings_SlashDelimiter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go ähnelt.
        /// </summary>
        public static string Go {
            get {
                return ResourceManager.GetString("Go", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Grouping ähnelt.
        /// </summary>
        public static string GroupingGrid_GroupingStyle {
            get {
                return ResourceManager.GetString("GroupingGrid_GroupingStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By inspection type ähnelt.
        /// </summary>
        public static string GroupingStyle_ByInspectionType {
            get {
                return ResourceManager.GetString("GroupingStyle_ByInspectionType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By location ähnelt.
        /// </summary>
        public static string GroupingStyle_ByLocation {
            get {
                return ResourceManager.GetString("GroupingStyle_ByLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By marker ähnelt.
        /// </summary>
        public static string GroupingStyle_ByMarker {
            get {
                return ResourceManager.GetString("GroupingStyle_ByMarker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By outcome ähnelt.
        /// </summary>
        public static string GroupingStyle_ByOutcome {
            get {
                return ResourceManager.GetString("GroupingStyle_ByOutcome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Home ähnelt.
        /// </summary>
        public static string Home {
            get {
                return ResourceManager.GetString("Home", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code Explorer ähnelt.
        /// </summary>
        public static string HotkeyDescription_CodeExplorer {
            get {
                return ResourceManager.GetString("HotkeyDescription_CodeExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Find symbol ähnelt.
        /// </summary>
        public static string HotkeyDescription_FindSymbol {
            get {
                return ResourceManager.GetString("HotkeyDescription_FindSymbol", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indent Module ähnelt.
        /// </summary>
        public static string HotkeyDescription_IndentModule {
            get {
                return ResourceManager.GetString("HotkeyDescription_IndentModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indent Procedure ähnelt.
        /// </summary>
        public static string HotkeyDescription_IndentProcedure {
            get {
                return ResourceManager.GetString("HotkeyDescription_IndentProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code Inspections ähnelt.
        /// </summary>
        public static string HotkeyDescription_InspectionResults {
            get {
                return ResourceManager.GetString("HotkeyDescription_InspectionResults", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh parser state ähnelt.
        /// </summary>
        public static string HotkeyDescription_ParseAll {
            get {
                return ResourceManager.GetString("HotkeyDescription_ParseAll", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refactor / Extract Method ähnelt.
        /// </summary>
        public static string HotkeyDescription_RefactorExtractMethod {
            get {
                return ResourceManager.GetString("HotkeyDescription_RefactorExtractMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move declaration closer to usage ähnelt.
        /// </summary>
        public static string HotkeyDescription_RefactorMoveCloserToUsage {
            get {
                return ResourceManager.GetString("HotkeyDescription_RefactorMoveCloserToUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refactor / Rename ähnelt.
        /// </summary>
        public static string HotkeyDescription_RefactorRename {
            get {
                return ResourceManager.GetString("HotkeyDescription_RefactorRename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test Explorer ähnelt.
        /// </summary>
        public static string HotkeyDescription_TestExplorer {
            get {
                return ResourceManager.GetString("HotkeyDescription_TestExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Implement Interface ähnelt.
        /// </summary>
        public static string ImplementInterface_Caption {
            get {
                return ResourceManager.GetString("ImplementInterface_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die The current selection is not valid. ähnelt.
        /// </summary>
        public static string ImplementInterface_InvalidSelectionMessage {
            get {
                return ResourceManager.GetString("ImplementInterface_InvalidSelectionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current module ähnelt.
        /// </summary>
        public static string IndentCurrentModule {
            get {
                return ResourceManager.GetString("IndentCurrentModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current procedure ähnelt.
        /// </summary>
        public static string IndentCurrentProcedure {
            get {
                return ResourceManager.GetString("IndentCurrentProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Entire project ähnelt.
        /// </summary>
        public static string IndentCurrentProject {
            get {
                return ResourceManager.GetString("IndentCurrentProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Align comments with code ähnelt.
        /// </summary>
        public static string IndenterSettings_AlignCommentsWithCode {
            get {
                return ResourceManager.GetString("IndenterSettings_AlignCommentsWithCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Align continuations ähnelt.
        /// </summary>
        public static string IndenterSettings_AlignContinuations {
            get {
                return ResourceManager.GetString("IndenterSettings_AlignContinuations", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Align dims ähnelt.
        /// </summary>
        public static string IndenterSettings_AlignDims {
            get {
                return ResourceManager.GetString("IndenterSettings_AlignDims", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Alignment Options ähnelt.
        /// </summary>
        public static string IndenterSettings_AlignmentOptionsLabel {
            get {
                return ResourceManager.GetString("IndenterSettings_AlignmentOptionsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable Options ähnelt.
        /// </summary>
        public static string IndenterSettings_EnableOptionsLabel {
            get {
                return ResourceManager.GetString("IndenterSettings_EnableOptionsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Enable undo ähnelt.
        /// </summary>
        public static string IndenterSettings_EnableUndo {
            get {
                return ResourceManager.GetString("IndenterSettings_EnableUndo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die End-of-line comment style: ähnelt.
        /// </summary>
        public static string IndenterSettings_EndOfLineCommentStyle {
            get {
                return ResourceManager.GetString("IndenterSettings_EndOfLineCommentStyle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Force compiler directives to column 1 ähnelt.
        /// </summary>
        public static string IndenterSettings_ForceCompilerDirectivesToColumn1 {
            get {
                return ResourceManager.GetString("IndenterSettings_ForceCompilerDirectivesToColumn1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Force debug directives to column 1 ähnelt.
        /// </summary>
        public static string IndenterSettings_ForceDebugDirectivesToColumn1 {
            get {
                return ResourceManager.GetString("IndenterSettings_ForceDebugDirectivesToColumn1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignore operators ähnelt.
        /// </summary>
        public static string IndenterSettings_IgnoreOperators {
            get {
                return ResourceManager.GetString("IndenterSettings_IgnoreOperators", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indent case ähnelt.
        /// </summary>
        public static string IndenterSettings_IndentCase {
            get {
                return ResourceManager.GetString("IndenterSettings_IndentCase", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indent compiler directives ähnelt.
        /// </summary>
        public static string IndenterSettings_IndentCompilerDirectives {
            get {
                return ResourceManager.GetString("IndenterSettings_IndentCompilerDirectives", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indent entire procedure body ähnelt.
        /// </summary>
        public static string IndenterSettings_IndentEntireProcedureBody {
            get {
                return ResourceManager.GetString("IndenterSettings_IndentEntireProcedureBody", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indent first comment block ähnelt.
        /// </summary>
        public static string IndenterSettings_IndentFirstCommentBlock {
            get {
                return ResourceManager.GetString("IndenterSettings_IndentFirstCommentBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indent first declaration block ähnelt.
        /// </summary>
        public static string IndenterSettings_IndentFirstDeclarationBlock {
            get {
                return ResourceManager.GetString("IndenterSettings_IndentFirstDeclarationBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indent Options ähnelt.
        /// </summary>
        public static string IndenterSettings_IndentOptionsLabel {
            get {
                return ResourceManager.GetString("IndenterSettings_IndentOptionsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indent spaces: ähnelt.
        /// </summary>
        public static string IndenterSettings_IndentSpaces {
            get {
                return ResourceManager.GetString("IndenterSettings_IndentSpaces", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Special Options ähnelt.
        /// </summary>
        public static string IndenterSettings_SpecialOptionsLabel {
            get {
                return ResourceManager.GetString("IndenterSettings_SpecialOptionsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Drawing.Bitmap.
        /// </summary>
        public static System.Drawing.Bitmap information {
            get {
                object obj = ResourceManager.GetObject("information", resourceCulture);
                return ((System.Drawing.Bitmap)(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Inspect ähnelt.
        /// </summary>
        public static string Inspect {
            get {
                return ResourceManager.GetString("Inspect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Introduce Field ähnelt.
        /// </summary>
        public static string IntroduceField_Caption {
            get {
                return ResourceManager.GetString("IntroduceField_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Introduce Parameter ähnelt.
        /// </summary>
        public static string IntroduceParameter_Caption {
            get {
                return ResourceManager.GetString("IntroduceParameter_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Method &apos;{0}&apos; implements &apos;{1}.{2}&apos;. Change interface signature? (Will propagate to all implementations.) ähnelt.
        /// </summary>
        public static string IntroduceParameter_PromptIfTargetIsInterface {
            get {
                return ResourceManager.GetString("IntroduceParameter_PromptIfTargetIsInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Issue ähnelt.
        /// </summary>
        public static string Issue {
            get {
                return ResourceManager.GetString("Issue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die German ähnelt.
        /// </summary>
        public static string Language_DE {
            get {
                return ResourceManager.GetString("Language_DE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die English ähnelt.
        /// </summary>
        public static string Language_EN {
            get {
                return ResourceManager.GetString("Language_EN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die French ähnelt.
        /// </summary>
        public static string Language_FR {
            get {
                return ResourceManager.GetString("Language_FR", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Japanese ähnelt.
        /// </summary>
        public static string Language_JA {
            get {
                return ResourceManager.GetString("Language_JA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Swedish ähnelt.
        /// </summary>
        public static string Language_SV {
            get {
                return ResourceManager.GetString("Language_SV", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Line ähnelt.
        /// </summary>
        public static string Line {
            get {
                return ResourceManager.GetString("Line", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error Loading Rubberduck Configuration ähnelt.
        /// </summary>
        public static string LoadConfigError {
            get {
                return ResourceManager.GetString("LoadConfigError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Make ActiveSheet reference explicit ähnelt.
        /// </summary>
        public static string MakeActiveSheetReferenceExplicit {
            get {
                return ResourceManager.GetString("MakeActiveSheetReferenceExplicit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Make ActiveWorkbook reference explicit ähnelt.
        /// </summary>
        public static string MakeActiveWorkbookReferenceExplicit {
            get {
                return ResourceManager.GetString("MakeActiveWorkbookReferenceExplicit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Module Name ähnelt.
        /// </summary>
        public static string ModuleName {
            get {
                return ResourceManager.GetString("ModuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Module options should be specified first ähnelt.
        /// </summary>
        public static string ModuleOptionsNotSpecifiedFirst {
            get {
                return ResourceManager.GetString("ModuleOptionsNotSpecifiedFirst", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Move Closer To Usage ähnelt.
        /// </summary>
        public static string MoveCloserToUsage_Caption {
            get {
                return ResourceManager.GetString("MoveCloserToUsage_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Invalid Selection. ähnelt.
        /// </summary>
        public static string MoveCloserToUsage_InvalidSelection {
            get {
                return ResourceManager.GetString("MoveCloserToUsage_InvalidSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; is not used anywhere. ähnelt.
        /// </summary>
        public static string MoveCloserToUsage_TargetHasNoReferences {
            get {
                return ResourceManager.GetString("MoveCloserToUsage_TargetHasNoReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;{0}&apos; has references in multiple methods. ähnelt.
        /// </summary>
        public static string MoveCloserToUsage_TargetIsUsedInMultipleMethods {
            get {
                return ResourceManager.GetString("MoveCloserToUsage_TargetIsUsedInMultipleMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name ähnelt.
        /// </summary>
        public static string Name {
            get {
                return ResourceManager.GetString("Name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Name: ähnelt.
        /// </summary>
        public static string NameLabelText {
            get {
                return ResourceManager.GetString("NameLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigate ähnelt.
        /// </summary>
        public static string Navigate {
            get {
                return ResourceManager.GetString("Navigate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigation ähnelt.
        /// </summary>
        public static string Navigation {
            get {
                return ResourceManager.GetString("Navigation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New ähnelt.
        /// </summary>
        public static string New {
            get {
                return ResourceManager.GetString("New", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Next ähnelt.
        /// </summary>
        public static string Next {
            get {
                return ResourceManager.GetString("Next", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add &apos;@NoIndent ähnelt.
        /// </summary>
        public static string NoIndentAnnotation {
            get {
                return ResourceManager.GetString("NoIndentAnnotation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Offline ähnelt.
        /// </summary>
        public static string Offline {
            get {
                return ResourceManager.GetString("Offline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ok ähnelt.
        /// </summary>
        public static string OK {
            get {
                return ResourceManager.GetString("OK", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die OK ähnelt.
        /// </summary>
        public static string OK_AllCaps {
            get {
                return ResourceManager.GetString("OK_AllCaps", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Online ähnelt.
        /// </summary>
        public static string Online {
            get {
                return ResourceManager.GetString("Online", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Outcome ähnelt.
        /// </summary>
        public static string Outcome {
            get {
                return ResourceManager.GetString("Outcome", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parameter ähnelt.
        /// </summary>
        public static string Parameter {
            get {
                return ResourceManager.GetString("Parameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Parser Errors ähnelt.
        /// </summary>
        public static string ParseErrors_Caption {
            get {
                return ResourceManager.GetString("ParseErrors_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parsing &apos;{0}&apos;... ähnelt.
        /// </summary>
        public static string ParseProgress {
            get {
                return ResourceManager.GetString("ParseProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parser Errors ähnelt.
        /// </summary>
        public static string Parser_ParserError {
            get {
                return ResourceManager.GetString("Parser_ParserError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Details ähnelt.
        /// </summary>
        public static string ParserProgress_ShowDetails {
            get {
                return ResourceManager.GetString("ParserProgress_ShowDetails", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parse Error ähnelt.
        /// </summary>
        public static string ParserState_Error {
            get {
                return ResourceManager.GetString("ParserState_Error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Loading references ähnelt.
        /// </summary>
        public static string ParserState_LoadingReference {
            get {
                return ResourceManager.GetString("ParserState_LoadingReference", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parsed ähnelt.
        /// </summary>
        public static string ParserState_Parsed {
            get {
                return ResourceManager.GetString("ParserState_Parsed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parsing... ähnelt.
        /// </summary>
        public static string ParserState_Parsing {
            get {
                return ResourceManager.GetString("ParserState_Parsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pending ähnelt.
        /// </summary>
        public static string ParserState_Pending {
            get {
                return ResourceManager.GetString("ParserState_Pending", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ready ähnelt.
        /// </summary>
        public static string ParserState_Ready {
            get {
                return ResourceManager.GetString("ParserState_Ready", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolver Error ähnelt.
        /// </summary>
        public static string ParserState_ResolverError {
            get {
                return ResourceManager.GetString("ParserState_ResolverError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolving... ähnelt.
        /// </summary>
        public static string ParserState_Resolving {
            get {
                return ResourceManager.GetString("ParserState_Resolving", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parsing project components... ähnelt.
        /// </summary>
        public static string ParseStarted {
            get {
                return ResourceManager.GetString("ParseStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die (parsing...) ähnelt.
        /// </summary>
        public static string Parsing {
            get {
                return ResourceManager.GetString("Parsing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Passed ähnelt.
        /// </summary>
        public static string Passed {
            get {
                return ResourceManager.GetString("Passed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Previous ähnelt.
        /// </summary>
        public static string Previous {
            get {
                return ResourceManager.GetString("Previous", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project ähnelt.
        /// </summary>
        public static string Project {
            get {
                return ResourceManager.GetString("Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Project Name ähnelt.
        /// </summary>
        public static string ProjectName {
            get {
                return ResourceManager.GetString("ProjectName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selection is not a variable. ähnelt.
        /// </summary>
        public static string PromoteVariable_InvalidSelection {
            get {
                return ResourceManager.GetString("PromoteVariable_InvalidSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0}
        ///{1}
        ///
        ///{2}
        ///
        ///Would you like to restore default configuration?
        ///Warning: All customized settings will be lost.  Your old file will be saved in &apos;{3}&apos;. ähnelt.
        /// </summary>
        public static string PromptLoadDefaultConfig {
            get {
                return ResourceManager.GetString("PromptLoadDefaultConfig", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Method &apos;{0}&apos; implements &apos;{1}.{2}&apos;. Change interface signature? (Will propagate to all implementations.) ähnelt.
        /// </summary>
        public static string Refactoring_TargetIsInterfaceMemberImplementation {
            get {
                return ResourceManager.GetString("Refactoring_TargetIsInterfaceMemberImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Encapsulate Field ähnelt.
        /// </summary>
        public static string RefactorMenu_EncapsulateField {
            get {
                return ResourceManager.GetString("RefactorMenu_EncapsulateField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die E&amp;xtract Interface ähnelt.
        /// </summary>
        public static string RefactorMenu_ExtractInterface {
            get {
                return ResourceManager.GetString("RefactorMenu_ExtractInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Extract &amp;Method ähnelt.
        /// </summary>
        public static string RefactorMenu_ExtractMethod {
            get {
                return ResourceManager.GetString("RefactorMenu_ExtractMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Implement Interface ähnelt.
        /// </summary>
        public static string RefactorMenu_ImplementInterface {
            get {
                return ResourceManager.GetString("RefactorMenu_ImplementInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Introduce &amp;Field ähnelt.
        /// </summary>
        public static string RefactorMenu_IntroduceField {
            get {
                return ResourceManager.GetString("RefactorMenu_IntroduceField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Introduce Parameter ähnelt.
        /// </summary>
        public static string RefactorMenu_IntroduceParameter {
            get {
                return ResourceManager.GetString("RefactorMenu_IntroduceParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move Closer To &amp;Usage ähnelt.
        /// </summary>
        public static string RefactorMenu_MoveCloserToUsage {
            get {
                return ResourceManager.GetString("RefactorMenu_MoveCloserToUsage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remo&amp;ve Parameters ähnelt.
        /// </summary>
        public static string RefactorMenu_RemoveParameter {
            get {
                return ResourceManager.GetString("RefactorMenu_RemoveParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Rename ähnelt.
        /// </summary>
        public static string RefactorMenu_Rename {
            get {
                return ResourceManager.GetString("RefactorMenu_Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Re&amp;order Parameters ähnelt.
        /// </summary>
        public static string RefactorMenu_ReorderParameters {
            get {
                return ResourceManager.GetString("RefactorMenu_ReorderParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refresh ähnelt.
        /// </summary>
        public static string Refresh {
            get {
                return ResourceManager.GetString("Refresh", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Regex Search &amp; Replace ähnelt.
        /// </summary>
        public static string RegexSearchReplace_Caption {
            get {
                return ResourceManager.GetString("RegexSearchReplace_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace All ähnelt.
        /// </summary>
        public static string RegexSearchReplace_ReplaceAllButtonLabel {
            get {
                return ResourceManager.GetString("RegexSearchReplace_ReplaceAllButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace ähnelt.
        /// </summary>
        public static string RegexSearchReplace_ReplaceButtonLabel {
            get {
                return ResourceManager.GetString("RegexSearchReplace_ReplaceButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace: ähnelt.
        /// </summary>
        public static string RegexSearchReplace_ReplaceLabel {
            get {
                return ResourceManager.GetString("RegexSearchReplace_ReplaceLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scope: ähnelt.
        /// </summary>
        public static string RegexSearchReplace_ScopeLabel {
            get {
                return ResourceManager.GetString("RegexSearchReplace_ScopeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search: ähnelt.
        /// </summary>
        public static string RegexSearchReplace_SearchLabel {
            get {
                return ResourceManager.GetString("RegexSearchReplace_SearchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Opened Files ähnelt.
        /// </summary>
        public static string RegexSearchReplaceScope_AllOpenedFiles {
            get {
                return ResourceManager.GetString("RegexSearchReplaceScope_AllOpenedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Open Projects ähnelt.
        /// </summary>
        public static string RegexSearchReplaceScope_AllOpenProjects {
            get {
                return ResourceManager.GetString("RegexSearchReplaceScope_AllOpenProjects", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current Block ähnelt.
        /// </summary>
        public static string RegexSearchReplaceScope_CurrentBlock {
            get {
                return ResourceManager.GetString("RegexSearchReplaceScope_CurrentBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current File ähnelt.
        /// </summary>
        public static string RegexSearchReplaceScope_CurrentFile {
            get {
                return ResourceManager.GetString("RegexSearchReplaceScope_CurrentFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Current Project ähnelt.
        /// </summary>
        public static string RegexSearchReplaceScope_CurrentProject {
            get {
                return ResourceManager.GetString("RegexSearchReplaceScope_CurrentProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selection ähnelt.
        /// </summary>
        public static string RegexSearchReplaceScope_Selection {
            get {
                return ResourceManager.GetString("RegexSearchReplaceScope_Selection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove ähnelt.
        /// </summary>
        public static string Remove {
            get {
                return ResourceManager.GetString("Remove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Remove Parameters ähnelt.
        /// </summary>
        public static string RemoveParamsDialog_Caption {
            get {
                return ResourceManager.GetString("RemoveParamsDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a parameter and double-click it or use buttons to remove or restore it. ähnelt.
        /// </summary>
        public static string RemoveParamsDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("RemoveParamsDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cannot remove last parameter from setter or letter. ähnelt.
        /// </summary>
        public static string RemoveParamsDialog_RemoveIllegalSetterLetterParameter {
            get {
                return ResourceManager.GetString("RemoveParamsDialog_RemoveIllegalSetterLetterParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove parameters ähnelt.
        /// </summary>
        public static string RemoveParamsDialog_TitleText {
            get {
                return ResourceManager.GetString("RemoveParamsDialog_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No parameters in method &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string RemovePresenter_NoParametersError {
            get {
                return ResourceManager.GetString("RemovePresenter_NoParametersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename ähnelt.
        /// </summary>
        public static string Rename {
            get {
                return ResourceManager.GetString("Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename {0} ähnelt.
        /// </summary>
        public static string Rename_DeclarationType {
            get {
                return ResourceManager.GetString("Rename_DeclarationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Rename ähnelt.
        /// </summary>
        public static string RenameDialog_Caption {
            get {
                return ResourceManager.GetString("RenameDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Renaming to &apos;{0}&apos; clashes with &apos;{1}&apos; in the same scope.
        ///Are you sure you want to proceed with this rename? ähnelt.
        /// </summary>
        public static string RenameDialog_ConflictingNames {
            get {
                return ResourceManager.GetString("RenameDialog_ConflictingNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please specify new name for {0} &apos;{1}&apos;. ähnelt.
        /// </summary>
        public static string RenameDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("RenameDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not rename module. ähnelt.
        /// </summary>
        public static string RenameDialog_ModuleRenameError {
            get {
                return ResourceManager.GetString("RenameDialog_ModuleRenameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Could not rename project. ähnelt.
        /// </summary>
        public static string RenameDialog_ProjectRenameError {
            get {
                return ResourceManager.GetString("RenameDialog_ProjectRenameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename identifier ähnelt.
        /// </summary>
        public static string RenameDialog_TitleText {
            get {
                return ResourceManager.GetString("RenameDialog_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Method &apos;{0}&apos; implements &apos;{1}.{2}&apos;. Rename the interface member? ähnelt.
        /// </summary>
        public static string RenamePresenter_TargetIsInterfaceMemberImplementation {
            get {
                return ResourceManager.GetString("RenamePresenter_TargetIsInterfaceMemberImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Reorder Parameters ähnelt.
        /// </summary>
        public static string ReorderParamsDialog_Caption {
            get {
                return ResourceManager.GetString("ReorderParamsDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select a parameter and drag it or use buttons to move it up or down. ähnelt.
        /// </summary>
        public static string ReorderParamsDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("ReorderParamsDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move down ähnelt.
        /// </summary>
        public static string ReorderParamsDialog_MoveDownButtonText {
            get {
                return ResourceManager.GetString("ReorderParamsDialog_MoveDownButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Move up ähnelt.
        /// </summary>
        public static string ReorderParamsDialog_MoveUpButtonText {
            get {
                return ResourceManager.GetString("ReorderParamsDialog_MoveUpButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reorder parameters ähnelt.
        /// </summary>
        public static string ReorderParamsDialog_TitleText {
            get {
                return ResourceManager.GetString("ReorderParamsDialog_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Less than two parameters in method &apos;{0}&apos;. ähnelt.
        /// </summary>
        public static string ReorderPresenter_LessThanTwoParametersError {
            get {
                return ResourceManager.GetString("ReorderPresenter_LessThanTwoParametersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Optional parameters must be specified at the end of the parameter list. ähnelt.
        /// </summary>
        public static string ReorderPresenter_OptionalParametersMustBeLastError {
            get {
                return ResourceManager.GetString("ReorderPresenter_OptionalParametersMustBeLastError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die ParamArray parameter must be specified last. ähnelt.
        /// </summary>
        public static string ReorderPresenter_ParamArrayError {
            get {
                return ResourceManager.GetString("ReorderPresenter_ParamArrayError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Resolving... ähnelt.
        /// </summary>
        public static string ResolutionProgress {
            get {
                return ResourceManager.GetString("ResolutionProgress", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Restore ähnelt.
        /// </summary>
        public static string Restore {
            get {
                return ResourceManager.GetString("Restore", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Result ähnelt.
        /// </summary>
        public static string Result {
            get {
                return ResourceManager.GetString("Result", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck ähnelt.
        /// </summary>
        public static string Rubberduck {
            get {
                return ResourceManager.GetString("Rubberduck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Build {0} ({1}) ähnelt.
        /// </summary>
        public static string Rubberduck_AboutBuild {
            get {
                return ResourceManager.GetString("Rubberduck_AboutBuild", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Parse all opened projects ähnelt.
        /// </summary>
        public static string RubberduckCommandbarRefreshButtonTooltip {
            get {
                return ResourceManager.GetString("RubberduckCommandbarRefreshButtonTooltip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck Add-In could not be loaded ähnelt.
        /// </summary>
        public static string RubberduckLoadFailure {
            get {
                return ResourceManager.GetString("RubberduckLoadFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ru&amp;bberduck ähnelt.
        /// </summary>
        public static string RubberduckMenu {
            get {
                return ResourceManager.GetString("RubberduckMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;About... ähnelt.
        /// </summary>
        public static string RubberduckMenu_About {
            get {
                return ResourceManager.GetString("RubberduckMenu_About", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Code Explorer ähnelt.
        /// </summary>
        public static string RubberduckMenu_CodeExplorer {
            get {
                return ResourceManager.GetString("RubberduckMenu_CodeExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code &amp;Inspections ähnelt.
        /// </summary>
        public static string RubberduckMenu_CodeInspections {
            get {
                return ResourceManager.GetString("RubberduckMenu_CodeInspections", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Na&amp;vigate ähnelt.
        /// </summary>
        public static string RubberduckMenu_Navigate {
            get {
                return ResourceManager.GetString("RubberduckMenu_Navigate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Refactor ähnelt.
        /// </summary>
        public static string RubberduckMenu_Refactor {
            get {
                return ResourceManager.GetString("RubberduckMenu_Refactor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rege&amp;x Search/Replace ähnelt.
        /// </summary>
        public static string RubberduckMenu_RegexSearchReplace {
            get {
                return ResourceManager.GetString("RubberduckMenu_RegexSearchReplace", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die S&amp;ettings ähnelt.
        /// </summary>
        public static string RubberduckMenu_Settings {
            get {
                return ResourceManager.GetString("RubberduckMenu_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Source Control ähnelt.
        /// </summary>
        public static string RubberduckMenu_SourceControl {
            get {
                return ResourceManager.GetString("RubberduckMenu_SourceControl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To&amp;Do Items ähnelt.
        /// </summary>
        public static string RubberduckMenu_TodoItems {
            get {
                return ResourceManager.GetString("RubberduckMenu_TodoItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unit &amp;Tests ähnelt.
        /// </summary>
        public static string RubberduckMenu_UnitTests {
            get {
                return ResourceManager.GetString("RubberduckMenu_UnitTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run ähnelt.
        /// </summary>
        public static string Run {
            get {
                return ResourceManager.GetString("Run", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All implementations: &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string SearchResults_AllImplementationsTabFormat {
            get {
                return ResourceManager.GetString("SearchResults_AllImplementationsTabFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All references: &apos;{0}&apos; ähnelt.
        /// </summary>
        public static string SearchResults_AllReferencesTabFormat {
            get {
                return ResourceManager.GetString("SearchResults_AllReferencesTabFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Search Results ähnelt.
        /// </summary>
        public static string SearchResults_Caption {
            get {
                return ResourceManager.GetString("SearchResults_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Context ähnelt.
        /// </summary>
        public static string SearchResults_Context {
            get {
                return ResourceManager.GetString("SearchResults_Context", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Location ähnelt.
        /// </summary>
        public static string SearchResults_Location {
            get {
                return ResourceManager.GetString("SearchResults_Location", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Member ähnelt.
        /// </summary>
        public static string SearchResults_MemberName {
            get {
                return ResourceManager.GetString("SearchResults_MemberName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type ähnelt.
        /// </summary>
        public static string SearchResults_MemberType {
            get {
                return ResourceManager.GetString("SearchResults_MemberType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Module ähnelt.
        /// </summary>
        public static string SearchResults_ModuleName {
            get {
                return ResourceManager.GetString("SearchResults_ModuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Select All ähnelt.
        /// </summary>
        public static string SelectAll_Button {
            get {
                return ResourceManager.GetString("SelectAll_Button", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string Settings {
            get {
                return ResourceManager.GetString("Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck Settings ähnelt.
        /// </summary>
        public static string Settings_Caption {
            get {
                return ResourceManager.GetString("Settings_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset ähnelt.
        /// </summary>
        public static string Settings_ResetSettings {
            get {
                return ResourceManager.GetString("Settings_ResetSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Reset settings to default configuration? ähnelt.
        /// </summary>
        public static string Settings_ResetSettingsConfirmation {
            get {
                return ResourceManager.GetString("Settings_ResetSettingsConfirmation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die General Settings ähnelt.
        /// </summary>
        public static string SettingsCaption_GeneralSettings {
            get {
                return ResourceManager.GetString("SettingsCaption_GeneralSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indenter Settings ähnelt.
        /// </summary>
        public static string SettingsCaption_IndenterSettings {
            get {
                return ResourceManager.GetString("SettingsCaption_IndenterSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Code Inspection Settings ähnelt.
        /// </summary>
        public static string SettingsCaption_InspectionSettings {
            get {
                return ResourceManager.GetString("SettingsCaption_InspectionSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Todo Settings ähnelt.
        /// </summary>
        public static string SettingsCaption_TodoSettings {
            get {
                return ResourceManager.GetString("SettingsCaption_TodoSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unit Test Settings ähnelt.
        /// </summary>
        public static string SettingsCaption_UnitTestSettings {
            get {
                return ResourceManager.GetString("SettingsCaption_UnitTestSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Click [Ok] to close the window and apply changes, or [Cancel] to discard them. ähnelt.
        /// </summary>
        public static string SettingsInstructions_GeneralSettings {
            get {
                return ResourceManager.GetString("SettingsInstructions_GeneralSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure indenter settings. ähnelt.
        /// </summary>
        public static string SettingsInstructions_IndenterSettings {
            get {
                return ResourceManager.GetString("SettingsInstructions_IndenterSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure inspection severity. Use &quot;DoNotShow&quot; to disable an inspection. ähnelt.
        /// </summary>
        public static string SettingsInstructions_InspectionSettings {
            get {
                return ResourceManager.GetString("SettingsInstructions_InspectionSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure markers to be recognized in comments. ähnelt.
        /// </summary>
        public static string SettingsInstructions_TodoSettings {
            get {
                return ResourceManager.GetString("SettingsInstructions_TodoSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Configure the settings for new unit test modules and methods. ähnelt.
        /// </summary>
        public static string SettingsInstructions_UnitTestSettings {
            get {
                return ResourceManager.GetString("SettingsInstructions_UnitTestSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Severity ähnelt.
        /// </summary>
        public static string Severity {
            get {
                return ResourceManager.GetString("Severity", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Severity: ähnelt.
        /// </summary>
        public static string SeverityLabelText {
            get {
                return ResourceManager.GetString("SeverityLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Indent ähnelt.
        /// </summary>
        public static string SmartIndenterMenu {
            get {
                return ResourceManager.GetString("SmartIndenterMenu", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By name ähnelt.
        /// </summary>
        public static string SortStyle_ByName {
            get {
                return ResourceManager.GetString("SortStyle_ByName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By selection ähnelt.
        /// </summary>
        public static string SortStyle_BySelection {
            get {
                return ResourceManager.GetString("SortStyle_BySelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die By type ähnelt.
        /// </summary>
        public static string SortStyle_ByType {
            get {
                return ResourceManager.GetString("SortStyle_ByType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;.gitattributes&apos; File ähnelt.
        /// </summary>
        public static string SourceControl_AttributesFile {
            get {
                return ResourceManager.GetString("SourceControl_AttributesFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Author ähnelt.
        /// </summary>
        public static string SourceControl_Author {
            get {
                return ResourceManager.GetString("SourceControl_Author", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Branches ähnelt.
        /// </summary>
        public static string SourceControl_Branches {
            get {
                return ResourceManager.GetString("SourceControl_Branches", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Branch Name: ähnelt.
        /// </summary>
        public static string SourceControl_BranchName {
            get {
                return ResourceManager.GetString("SourceControl_BranchName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Cancel ähnelt.
        /// </summary>
        public static string SourceControl_CancelGlobalSettings {
            get {
                return ResourceManager.GetString("SourceControl_CancelGlobalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Changes ähnelt.
        /// </summary>
        public static string SourceControl_Changes {
            get {
                return ResourceManager.GetString("SourceControl_Changes", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Clone Repository ähnelt.
        /// </summary>
        public static string SourceControl_CloneRepoButtonToolTip {
            get {
                return ResourceManager.GetString("SourceControl_CloneRepoButtonToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commit ähnelt.
        /// </summary>
        public static string SourceControl_Commit {
            get {
                return ResourceManager.GetString("SourceControl_Commit", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commit and Push ähnelt.
        /// </summary>
        public static string SourceControl_CommitAndPush {
            get {
                return ResourceManager.GetString("SourceControl_CommitAndPush", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commit and Sync ähnelt.
        /// </summary>
        public static string SourceControl_CommitAndSync {
            get {
                return ResourceManager.GetString("SourceControl_CommitAndSync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Go ähnelt.
        /// </summary>
        public static string SourceControl_CommitButtonLabel {
            get {
                return ResourceManager.GetString("SourceControl_CommitButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commit message: ähnelt.
        /// </summary>
        public static string SourceControl_CommitMessageLabel {
            get {
                return ResourceManager.GetString("SourceControl_CommitMessageLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commit status. ähnelt.
        /// </summary>
        public static string SourceControl_CommitStatus {
            get {
                return ResourceManager.GetString("SourceControl_CommitStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commit and push succeeded. ähnelt.
        /// </summary>
        public static string SourceControl_CommitStatus_CommitAndPushSuccess {
            get {
                return ResourceManager.GetString("SourceControl_CommitStatus_CommitAndPushSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commit and sync succeeded. ähnelt.
        /// </summary>
        public static string SourceControl_CommitStatus_CommitAndSyncSuccess {
            get {
                return ResourceManager.GetString("SourceControl_CommitStatus_CommitAndSyncSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Commit succeeded. ähnelt.
        /// </summary>
        public static string SourceControl_CommitStatus_CommitSuccess {
            get {
                return ResourceManager.GetString("SourceControl_CommitStatus_CommitSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Create Branch ähnelt.
        /// </summary>
        public static string SourceControl_CreateNewBranchCaption {
            get {
                return ResourceManager.GetString("SourceControl_CreateNewBranchCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please specify branch name. ähnelt.
        /// </summary>
        public static string SourceControl_CreateNewBranchInstructions {
            get {
                return ResourceManager.GetString("SourceControl_CreateNewBranchInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New branch ähnelt.
        /// </summary>
        public static string SourceControl_CreateNewBranchTitle {
            get {
                return ResourceManager.GetString("SourceControl_CreateNewBranchTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create New Repository ähnelt.
        /// </summary>
        public static string SourceControl_CreateNewRepo {
            get {
                return ResourceManager.GetString("SourceControl_CreateNewRepo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Branch: ähnelt.
        /// </summary>
        public static string SourceControl_CurrentBranchLabel {
            get {
                return ResourceManager.GetString("SourceControl_CurrentBranchLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Default Repository Location ähnelt.
        /// </summary>
        public static string SourceControl_DefaultRepoLocationLabel {
            get {
                return ResourceManager.GetString("SourceControl_DefaultRepoLocationLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete ähnelt.
        /// </summary>
        public static string SourceControl_Delete {
            get {
                return ResourceManager.GetString("SourceControl_Delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete branch ähnelt.
        /// </summary>
        public static string SourceControl_DeleteBranch {
            get {
                return ResourceManager.GetString("SourceControl_DeleteBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Delete Branch ähnelt.
        /// </summary>
        public static string SourceControl_DeleteBranchCaption {
            get {
                return ResourceManager.GetString("SourceControl_DeleteBranchCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please specify branch name. ähnelt.
        /// </summary>
        public static string SourceControl_DeleteBranchInstructionsLabel {
            get {
                return ResourceManager.GetString("SourceControl_DeleteBranchInstructionsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete branch ähnelt.
        /// </summary>
        public static string SourceControl_DeleteBranchTitleLable {
            get {
                return ResourceManager.GetString("SourceControl_DeleteBranchTitleLable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete ähnelt.
        /// </summary>
        public static string SourceControl_DeleteButton {
            get {
                return ResourceManager.GetString("SourceControl_DeleteButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Destination ähnelt.
        /// </summary>
        public static string SourceControl_DestinationLabel {
            get {
                return ResourceManager.GetString("SourceControl_DestinationLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Dismiss ähnelt.
        /// </summary>
        public static string SourceControl_Dismiss {
            get {
                return ResourceManager.GetString("SourceControl_Dismiss", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Email Address ähnelt.
        /// </summary>
        public static string SourceControl_EmailAddressLabel {
            get {
                return ResourceManager.GetString("SourceControl_EmailAddressLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Excluded changes ähnelt.
        /// </summary>
        public static string SourceControl_ExcludedChanges {
            get {
                return ResourceManager.GetString("SourceControl_ExcludedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Exclude ähnelt.
        /// </summary>
        public static string SourceControl_ExcludeFileButton {
            get {
                return ResourceManager.GetString("SourceControl_ExcludeFileButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Fetch ähnelt.
        /// </summary>
        public static string SourceControl_FetchCommitsLabel {
            get {
                return ResourceManager.GetString("SourceControl_FetchCommitsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File Path ähnelt.
        /// </summary>
        public static string SourceControl_FilePath {
            get {
                return ResourceManager.GetString("SourceControl_FilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die File Status ähnelt.
        /// </summary>
        public static string SourceControl_FileStatus {
            get {
                return ResourceManager.GetString("SourceControl_FileStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Global Settings ähnelt.
        /// </summary>
        public static string SourceControl_GlobalSettings {
            get {
                return ResourceManager.GetString("SourceControl_GlobalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Id ähnelt.
        /// </summary>
        public static string SourceControl_Id {
            get {
                return ResourceManager.GetString("SourceControl_Id", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &apos;.gitignore&apos; File ähnelt.
        /// </summary>
        public static string SourceControl_IgnoreFile {
            get {
                return ResourceManager.GetString("SourceControl_IgnoreFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Included changes ähnelt.
        /// </summary>
        public static string SourceControl_IncludedChanges {
            get {
                return ResourceManager.GetString("SourceControl_IncludedChanges", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Include ähnelt.
        /// </summary>
        public static string SourceControl_IncludeFileButton {
            get {
                return ResourceManager.GetString("SourceControl_IncludeFileButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Incoming commits ähnelt.
        /// </summary>
        public static string SourceControl_IncomingCommits {
            get {
                return ResourceManager.GetString("SourceControl_IncomingCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Init New Repo from this Project ähnelt.
        /// </summary>
        public static string SourceControl_InitRepoButtonToolTip {
            get {
                return ResourceManager.GetString("SourceControl_InitRepoButtonToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Local Directory: ähnelt.
        /// </summary>
        public static string SourceControl_LocalDirectoryLabel {
            get {
                return ResourceManager.GetString("SourceControl_LocalDirectoryLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your last action failed because Rubberduck did not have your authorization credentials.  Please login and try again. ähnelt.
        /// </summary>
        public static string SourceControl_LoginInstructions {
            get {
                return ResourceManager.GetString("SourceControl_LoginInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Merge ähnelt.
        /// </summary>
        public static string SourceControl_MergeBranch {
            get {
                return ResourceManager.GetString("SourceControl_MergeBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rubberduck - Merge ähnelt.
        /// </summary>
        public static string SourceControl_MergeFormCaption {
            get {
                return ResourceManager.GetString("SourceControl_MergeFormCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select source and destination branches. ähnelt.
        /// </summary>
        public static string SourceControl_MergeFormInstructions {
            get {
                return ResourceManager.GetString("SourceControl_MergeFormInstructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Merge branches ähnelt.
        /// </summary>
        public static string SourceControl_MergeFormTitle {
            get {
                return ResourceManager.GetString("SourceControl_MergeFormTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Merge status. ähnelt.
        /// </summary>
        public static string SourceControl_MergeStatus {
            get {
                return ResourceManager.GetString("SourceControl_MergeStatus", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message ähnelt.
        /// </summary>
        public static string SourceControl_Message {
            get {
                return ResourceManager.GetString("SourceControl_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Missing credentials. ähnelt.
        /// </summary>
        public static string SourceControl_MissingCredentials {
            get {
                return ResourceManager.GetString("SourceControl_MissingCredentials", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die New Branch ähnelt.
        /// </summary>
        public static string SourceControl_NewBranch {
            get {
                return ResourceManager.GetString("SourceControl_NewBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repository does not contain any branches. ähnelt.
        /// </summary>
        public static string SourceControl_NoBranchesMessage {
            get {
                return ResourceManager.GetString("SourceControl_NoBranchesMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No branches found ähnelt.
        /// </summary>
        public static string SourceControl_NoBranchesTitle {
            get {
                return ResourceManager.GetString("SourceControl_NoBranchesTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die No repository found. ähnelt.
        /// </summary>
        public static string SourceControl_NoRepoFound {
            get {
                return ResourceManager.GetString("SourceControl_NoRepoFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Open Working Directory ähnelt.
        /// </summary>
        public static string SourceControl_OpenWorkingDirectory {
            get {
                return ResourceManager.GetString("SourceControl_OpenWorkingDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Outgoing commits ähnelt.
        /// </summary>
        public static string SourceControl_OutgoingCommits {
            get {
                return ResourceManager.GetString("SourceControl_OutgoingCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Password: ähnelt.
        /// </summary>
        public static string SourceControl_PasswordLabel {
            get {
                return ResourceManager.GetString("SourceControl_PasswordLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Publish ähnelt.
        /// </summary>
        public static string SourceControl_PublishBranchButton {
            get {
                return ResourceManager.GetString("SourceControl_PublishBranchButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Published Branches ähnelt.
        /// </summary>
        public static string SourceControl_PublishedBranchesLabel {
            get {
                return ResourceManager.GetString("SourceControl_PublishedBranchesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pull ähnelt.
        /// </summary>
        public static string SourceControl_PullCommitsLabel {
            get {
                return ResourceManager.GetString("SourceControl_PullCommitsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Push ähnelt.
        /// </summary>
        public static string SourceControl_PushCommitsLabel {
            get {
                return ResourceManager.GetString("SourceControl_PushCommitsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refreshes pending changes ähnelt.
        /// </summary>
        public static string SourceControl_RefreshButtonToolTip {
            get {
                return ResourceManager.GetString("SourceControl_RefreshButtonToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remote Path: ähnelt.
        /// </summary>
        public static string SourceControl_RemotePathLabel {
            get {
                return ResourceManager.GetString("SourceControl_RemotePathLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repository Settings ähnelt.
        /// </summary>
        public static string SourceControl_RespositorySettings {
            get {
                return ResourceManager.GetString("SourceControl_RespositorySettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings ähnelt.
        /// </summary>
        public static string SourceControl_Settings {
            get {
                return ResourceManager.GetString("SourceControl_Settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source Branch: ähnelt.
        /// </summary>
        public static string SourceControl_SourceBranch {
            get {
                return ResourceManager.GetString("SourceControl_SourceBranch", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source ähnelt.
        /// </summary>
        public static string SourceControl_SourceLabel {
            get {
                return ResourceManager.GetString("SourceControl_SourceLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Successfully Merged {0} into {1} ähnelt.
        /// </summary>
        public static string SourceControl_SuccessfulMerge {
            get {
                return ResourceManager.GetString("SourceControl_SuccessfulMerge", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sync ähnelt.
        /// </summary>
        public static string SourceControl_SyncCommitsLabel {
            get {
                return ResourceManager.GetString("SourceControl_SyncCommitsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Undo ähnelt.
        /// </summary>
        public static string SourceControl_UndoChangesButton {
            get {
                return ResourceManager.GetString("SourceControl_UndoChangesButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Do you want to undo your changes to {0}? ähnelt.
        /// </summary>
        public static string SourceControl_UndoPrompt {
            get {
                return ResourceManager.GetString("SourceControl_UndoPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source Control - Undo ähnelt.
        /// </summary>
        public static string SourceControl_UndoTitle {
            get {
                return ResourceManager.GetString("SourceControl_UndoTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unpublish ähnelt.
        /// </summary>
        public static string SourceControl_UnpublishBranchButton {
            get {
                return ResourceManager.GetString("SourceControl_UnpublishBranchButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unpublished Branches ähnelt.
        /// </summary>
        public static string SourceControl_UnpublishedBranchesLabel {
            get {
                return ResourceManager.GetString("SourceControl_UnpublishedBranchesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unsynced commits ähnelt.
        /// </summary>
        public static string SourceControl_UnsyncedCommits {
            get {
                return ResourceManager.GetString("SourceControl_UnsyncedCommits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Untracked files ähnelt.
        /// </summary>
        public static string SourceControl_UntrackedFiles {
            get {
                return ResourceManager.GetString("SourceControl_UntrackedFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Update ähnelt.
        /// </summary>
        public static string SourceControl_UpdateGlobalSettings {
            get {
                return ResourceManager.GetString("SourceControl_UpdateGlobalSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Your user name, email address, and default repository location have been saved. ähnelt.
        /// </summary>
        public static string SourceControl_UpdateSettingsMessage {
            get {
                return ResourceManager.GetString("SourceControl_UpdateSettingsMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Settings updated ähnelt.
        /// </summary>
        public static string SourceControl_UpdateSettingsTitle {
            get {
                return ResourceManager.GetString("SourceControl_UpdateSettingsTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die User Name: ähnelt.
        /// </summary>
        public static string SourceControl_UserNameLabel {
            get {
                return ResourceManager.GetString("SourceControl_UserNameLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Source Control ähnelt.
        /// </summary>
        public static string SourceControlPanel_Caption {
            get {
                return ResourceManager.GetString("SourceControlPanel_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add ähnelt.
        /// </summary>
        public static string TestExplorer_AddButtonText {
            get {
                return ResourceManager.GetString("TestExplorer_AddButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test Method (Expected Error) ähnelt.
        /// </summary>
        public static string TestExplorer_AddExpectedErrorTestMethod {
            get {
                return ResourceManager.GetString("TestExplorer_AddExpectedErrorTestMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test Method ähnelt.
        /// </summary>
        public static string TestExplorer_AddTestMethod {
            get {
                return ResourceManager.GetString("TestExplorer_AddTestMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test Module ähnelt.
        /// </summary>
        public static string TestExplorer_AddTestModule {
            get {
                return ResourceManager.GetString("TestExplorer_AddTestModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Duration ähnelt.
        /// </summary>
        public static string TestExplorer_Duration {
            get {
                return ResourceManager.GetString("TestExplorer_Duration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Navigate to selected ähnelt.
        /// </summary>
        public static string TestExplorer_GotoSelectionToolTip {
            get {
                return ResourceManager.GetString("TestExplorer_GotoSelectionToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Message ähnelt.
        /// </summary>
        public static string TestExplorer_Message {
            get {
                return ResourceManager.GetString("TestExplorer_Message", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Method Name ähnelt.
        /// </summary>
        public static string TestExplorer_MethodName {
            get {
                return ResourceManager.GetString("TestExplorer_MethodName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Module ähnelt.
        /// </summary>
        public static string TestExplorer_QualifiedModuleName {
            get {
                return ResourceManager.GetString("TestExplorer_QualifiedModuleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die All Tests ähnelt.
        /// </summary>
        public static string TestExplorer_RunAllTests {
            get {
                return ResourceManager.GetString("TestExplorer_RunAllTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Run ähnelt.
        /// </summary>
        public static string TestExplorer_RunButtonText {
            get {
                return ResourceManager.GetString("TestExplorer_RunButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed Tests ähnelt.
        /// </summary>
        public static string TestExplorer_RunFailedTests {
            get {
                return ResourceManager.GetString("TestExplorer_RunFailedTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Repeat Last Run ähnelt.
        /// </summary>
        public static string TestExplorer_RunLastRunTests {
            get {
                return ResourceManager.GetString("TestExplorer_RunLastRunTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Not Run Tests ähnelt.
        /// </summary>
        public static string TestExplorer_RunNotRunTests {
            get {
                return ResourceManager.GetString("TestExplorer_RunNotRunTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Passed Tests ähnelt.
        /// </summary>
        public static string TestExplorer_RunPassedTests {
            get {
                return ResourceManager.GetString("TestExplorer_RunPassedTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Selected Tests ähnelt.
        /// </summary>
        public static string TestExplorer_RunSelectedTests {
            get {
                return ResourceManager.GetString("TestExplorer_RunSelectedTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Failed ähnelt.
        /// </summary>
        public static string TestExplorer_TestNumberFailed {
            get {
                return ResourceManager.GetString("TestExplorer_TestNumberFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Inconclusive ähnelt.
        /// </summary>
        public static string TestExplorer_TestNumberInconclusive {
            get {
                return ResourceManager.GetString("TestExplorer_TestNumberInconclusive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {0} Passed ähnelt.
        /// </summary>
        public static string TestExplorer_TestNumberPassed {
            get {
                return ResourceManager.GetString("TestExplorer_TestNumberPassed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Two or more projects containing test methods have the same name and identically named tests. Please rename one to continue. ähnelt.
        /// </summary>
        public static string TestExplorerDockablePresenter_MultipleTestsSameNameError {
            get {
                return ResourceManager.GetString("TestExplorerDockablePresenter_MultipleTestsSameNameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test Explorer ähnelt.
        /// </summary>
        public static string TestExplorerWindow_Caption {
            get {
                return ResourceManager.GetString("TestExplorerWindow_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Run All Tests ähnelt.
        /// </summary>
        public static string TestMenu_RunAllTests {
            get {
                return ResourceManager.GetString("TestMenu_RunAllTests", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die &amp;Test Explorer ähnelt.
        /// </summary>
        public static string TestMenu_TextExplorer {
            get {
                return ResourceManager.GetString("TestMenu_TextExplorer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed ähnelt.
        /// </summary>
        public static string TestOutcome_Failed {
            get {
                return ResourceManager.GetString("TestOutcome_Failed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignored ähnelt.
        /// </summary>
        public static string TestOutcome_Ignored {
            get {
                return ResourceManager.GetString("TestOutcome_Ignored", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Inconclusive ähnelt.
        /// </summary>
        public static string TestOutcome_Inconclusive {
            get {
                return ResourceManager.GetString("TestOutcome_Inconclusive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Succeeded ähnelt.
        /// </summary>
        public static string TestOutcome_Succeeded {
            get {
                return ResourceManager.GetString("TestOutcome_Succeeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Unknown ähnelt.
        /// </summary>
        public static string TestOutcome_Unknown {
            get {
                return ResourceManager.GetString("TestOutcome_Unknown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Todo Explorer ähnelt.
        /// </summary>
        public static string TodoExplorer_Caption {
            get {
                return ResourceManager.GetString("TodoExplorer_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Description ähnelt.
        /// </summary>
        public static string TodoExplorer_Description {
            get {
                return ResourceManager.GetString("TodoExplorer_Description", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Line Number ähnelt.
        /// </summary>
        public static string TodoExplorer_LineNumber {
            get {
                return ResourceManager.GetString("TodoExplorer_LineNumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die BUG  ähnelt.
        /// </summary>
        public static string TodoMarkerBug {
            get {
                return ResourceManager.GetString("TodoMarkerBug", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die NOTE  ähnelt.
        /// </summary>
        public static string TodoMarkerNote {
            get {
                return ResourceManager.GetString("TodoMarkerNote", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TODO  ähnelt.
        /// </summary>
        public static string TodoMarkerTodo {
            get {
                return ResourceManager.GetString("TodoMarkerTodo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die To-Do Explorer ähnelt.
        /// </summary>
        public static string TodoSettings_Caption {
            get {
                return ResourceManager.GetString("TodoSettings_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text ähnelt.
        /// </summary>
        public static string TodoSettings_Text {
            get {
                return ResourceManager.GetString("TodoSettings_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Text: ähnelt.
        /// </summary>
        public static string TodoSettings_TextLabel {
            get {
                return ResourceManager.GetString("TodoSettings_TextLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Token Text: ähnelt.
        /// </summary>
        public static string TodoSettings_TokenLabel {
            get {
                return ResourceManager.GetString("TodoSettings_TokenLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Token List: ähnelt.
        /// </summary>
        public static string TodoSettings_TokenListLabel {
            get {
                return ResourceManager.GetString("TodoSettings_TokenListLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type ähnelt.
        /// </summary>
        public static string Type {
            get {
                return ResourceManager.GetString("Type", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change to expected error number ähnelt.
        /// </summary>
        public static string UnitTest_NewMethod_ChangeErrorNo {
            get {
                return ResourceManager.GetString("UnitTest_NewMethod_ChangeErrorNo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Expected error was not raised ähnelt.
        /// </summary>
        public static string UnitTest_NewMethod_ErrorNotRaised {
            get {
                return ResourceManager.GetString("UnitTest_NewMethod_ErrorNotRaised", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test raised an error ähnelt.
        /// </summary>
        public static string UnitTest_NewMethod_RaisedTestError {
            get {
                return ResourceManager.GetString("UnitTest_NewMethod_RaisedTestError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Rename test ähnelt.
        /// </summary>
        public static string UnitTest_NewMethod_Rename {
            get {
                return ResourceManager.GetString("UnitTest_NewMethod_Rename", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die this method runs after every test in the module ähnelt.
        /// </summary>
        public static string UnitTest_NewModule_RunAfterTest {
            get {
                return ResourceManager.GetString("UnitTest_NewModule_RunAfterTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die this method runs before every test in the module ähnelt.
        /// </summary>
        public static string UnitTest_NewModule_RunBeforeTest {
            get {
                return ResourceManager.GetString("UnitTest_NewModule_RunBeforeTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die this method runs once per module ähnelt.
        /// </summary>
        public static string UnitTest_NewModule_RunOnce {
            get {
                return ResourceManager.GetString("UnitTest_NewModule_RunOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Total Duration ähnelt.
        /// </summary>
        public static string UnitTest_TotalDuration {
            get {
                return ResourceManager.GetString("UnitTest_TotalDuration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Type safety: ähnelt.
        /// </summary>
        public static string UnitTestSettings_AssertMode {
            get {
                return ResourceManager.GetString("UnitTestSettings_AssertMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Binding mode: ähnelt.
        /// </summary>
        public static string UnitTestSettings_BindingMode {
            get {
                return ResourceManager.GetString("UnitTestSettings_BindingMode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Early binding ähnelt.
        /// </summary>
        public static string UnitTestSettings_EarlyBinding {
            get {
                return ResourceManager.GetString("UnitTestSettings_EarlyBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test method initialization/cleanup ähnelt.
        /// </summary>
        public static string UnitTestSettings_IncludeTestMethodInitCleanupPrompt {
            get {
                return ResourceManager.GetString("UnitTestSettings_IncludeTestMethodInitCleanupPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Insert test method stub ähnelt.
        /// </summary>
        public static string UnitTestSettings_IncludeTestMethodStubWhenCreatingModulePrompt {
            get {
                return ResourceManager.GetString("UnitTestSettings_IncludeTestMethodStubWhenCreatingModulePrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test module initialization/cleanup ähnelt.
        /// </summary>
        public static string UnitTestSettings_IncludeTestModuleInitCleanupPrompt {
            get {
                return ResourceManager.GetString("UnitTestSettings_IncludeTestModuleInitCleanupPrompt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Late binding ähnelt.
        /// </summary>
        public static string UnitTestSettings_LateBinding {
            get {
                return ResourceManager.GetString("UnitTestSettings_LateBinding", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Permissive assert ähnelt.
        /// </summary>
        public static string UnitTestSettings_PermissiveAssert {
            get {
                return ResourceManager.GetString("UnitTestSettings_PermissiveAssert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Strict assert ähnelt.
        /// </summary>
        public static string UnitTestSettings_StrictAssert {
            get {
                return ResourceManager.GetString("UnitTestSettings_StrictAssert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Test Module Template ähnelt.
        /// </summary>
        public static string UnitTestSettings_TestModuleTemplateHeader {
            get {
                return ResourceManager.GetString("UnitTestSettings_TestModuleTemplateHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning ähnelt.
        /// </summary>
        public static string Warning {
            get {
                return ResourceManager.GetString("Warning", resourceCulture);
            }
        }
    }
}
