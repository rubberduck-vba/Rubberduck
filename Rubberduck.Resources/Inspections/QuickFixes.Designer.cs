//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rubberduck.Resources.Inspections {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class QuickFixes {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal QuickFixes() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Rubberduck.Resources.Inspections.QuickFixes", typeof(QuickFixes).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Refer to statically accessible sheet by its code name ähnelt.
        /// </summary>
        public static string AccessSheetUsingCodeNameQuickFix {
            get {
                return ResourceManager.GetString("AccessSheetUsingCodeNameQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add explicit &apos;Step&apos; clause ähnelt.
        /// </summary>
        public static string AddStepOneQuickFix {
            get {
                return ResourceManager.GetString("AddStepOneQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use early-bound Application.WorksheetFunction method. ähnelt.
        /// </summary>
        public static string ApplicationWorksheetFunctionQuickFix {
            get {
                return ResourceManager.GetString("ApplicationWorksheetFunctionQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Create and use a local copy of the parameter ähnelt.
        /// </summary>
        public static string AssignedByValParameterMakeLocalCopyQuickFix {
            get {
                return ResourceManager.GetString("AssignedByValParameterMakeLocalCopyQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace &apos;Dim&apos; with &apos;Private&apos; ähnelt.
        /// </summary>
        public static string ChangeDimToPrivateQuickFix {
            get {
                return ResourceManager.GetString("ChangeDimToPrivateQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Convert function to procedure ähnelt.
        /// </summary>
        public static string ConvertFunctionToProcedureQuickFix {
            get {
                return ResourceManager.GetString("ConvertFunctionToProcedureQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Declare as explicit Variant ähnelt.
        /// </summary>
        public static string DeclareAsExplicitVariantQuickFix {
            get {
                return ResourceManager.GetString("DeclareAsExplicitVariantQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace empty string literal with the &apos;vbNullString&apos; constant ähnelt.
        /// </summary>
        public static string EmptyStringLiteralInspectionQuickFix {
            get {
                return ResourceManager.GetString("EmptyStringLiteralInspectionQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Encapsulate field &apos;{0}&apos; with a property ähnelt.
        /// </summary>
        public static string EncapsulatePublicFieldInspectionQuickFix {
            get {
                return ResourceManager.GetString("EncapsulatePublicFieldInspectionQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignore once ähnelt.
        /// </summary>
        public static string IgnoreOnce {
            get {
                return ResourceManager.GetString("IgnoreOnce", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pass parameter by reference explicitly ähnelt.
        /// </summary>
        public static string ImplicitByRefModifierQuickFix {
            get {
                return ResourceManager.GetString("ImplicitByRefModifierQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change type to &apos;Long&apos; ähnelt.
        /// </summary>
        public static string IntegerDataTypeQuickFix {
            get {
                return ResourceManager.GetString("IntegerDataTypeQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Introduce local variable ähnelt.
        /// </summary>
        public static string IntroduceLocalVariableForRedimQuickFix {
            get {
                return ResourceManager.GetString("IntroduceLocalVariableForRedimQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Introduce local variable ähnelt.
        /// </summary>
        public static string IntroduceLocalVariableQuickFix {
            get {
                return ResourceManager.GetString("IntroduceLocalVariableQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Context type &apos;{0}&apos; is not valid for {1}. ähnelt.
        /// </summary>
        public static string InvalidContextTypeInspectionFix {
            get {
                return ResourceManager.GetString("InvalidContextTypeInspectionFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Write variable on one line ähnelt.
        /// </summary>
        public static string MakeSingleLineParameterQuickFix {
            get {
                return ResourceManager.GetString("MakeSingleLineParameterQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace &apos;Global&apos; access modifier with &apos;Public&apos; ähnelt.
        /// </summary>
        public static string ObsoleteGlobalInspectionQuickFix {
            get {
                return ResourceManager.GetString("ObsoleteGlobalInspectionQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specify &apos;Option Explicit&apos; ähnelt.
        /// </summary>
        public static string OptionExplicitQuickFix {
            get {
                return ResourceManager.GetString("OptionExplicitQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pass parameter by reference ähnelt.
        /// </summary>
        public static string PassParameterByReferenceQuickFix {
            get {
                return ResourceManager.GetString("PassParameterByReferenceQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Pass parameter by value ähnelt.
        /// </summary>
        public static string PassParameterByValueQuickFix {
            get {
                return ResourceManager.GetString("PassParameterByValueQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Implement as function and update usages. ähnelt.
        /// </summary>
        public static string ProcedureShouldBeFunctionInspectionQuickFix {
            get {
                return ResourceManager.GetString("ProcedureShouldBeFunctionInspectionQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove &apos;ByRef&apos; modifier ähnelt.
        /// </summary>
        public static string RedundantByRefModifierQuickFix {
            get {
                return ResourceManager.GetString("RedundantByRefModifierQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove comment ähnelt.
        /// </summary>
        public static string RemoveCommentQuickFix {
            get {
                return ResourceManager.GetString("RemoveCommentQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove empty &apos;Else&apos; block ähnelt.
        /// </summary>
        public static string RemoveEmptyElseBlockQuickFix {
            get {
                return ResourceManager.GetString("RemoveEmptyElseBlockQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove empty If block ähnelt.
        /// </summary>
        public static string RemoveEmptyIfBlockQuickFix {
            get {
                return ResourceManager.GetString("RemoveEmptyIfBlockQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove obsolete statement ähnelt.
        /// </summary>
        public static string RemoveObsoleteStatementQuickFix {
            get {
                return ResourceManager.GetString("RemoveObsoleteStatementQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove &apos;Option Base&apos; statement ähnelt.
        /// </summary>
        public static string RemoveOptionBaseStatementQuickFix {
            get {
                return ResourceManager.GetString("RemoveOptionBaseStatementQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove redundant &apos;Step&apos; clause ähnelt.
        /// </summary>
        public static string RemoveStepOneQuickFix {
            get {
                return ResourceManager.GetString("RemoveStepOneQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove usage of the &apos;Stop&apos; keyword ähnelt.
        /// </summary>
        public static string RemoveStopKeywordQuickFix {
            get {
                return ResourceManager.GetString("RemoveStopKeywordQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove type hints ähnelt.
        /// </summary>
        public static string RemoveTypeHintsQuickFix {
            get {
                return ResourceManager.GetString("RemoveTypeHintsQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove unassigned variable ähnelt.
        /// </summary>
        public static string RemoveUnassignedIdentifierQuickFix {
            get {
                return ResourceManager.GetString("RemoveUnassignedIdentifierQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove usage (breaks code) ähnelt.
        /// </summary>
        public static string RemoveUnassignedVariableUsageQuickFix {
            get {
                return ResourceManager.GetString("RemoveUnassignedVariableUsageQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove unused declaration ähnelt.
        /// </summary>
        public static string RemoveUnusedDeclarationQuickFix {
            get {
                return ResourceManager.GetString("RemoveUnusedDeclarationQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove unused parameter ähnelt.
        /// </summary>
        public static string RemoveUnusedParameterQuickFix {
            get {
                return ResourceManager.GetString("RemoveUnusedParameterQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace &apos;Rem&apos; usage with a single-quote comment marker ähnelt.
        /// </summary>
        public static string ReplaceCommentMarkerQuickFix {
            get {
                return ResourceManager.GetString("ReplaceCommentMarkerQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace If/Else with single assignment ähnelt.
        /// </summary>
        public static string ReplaceIfElseWithConditionalStatementQuickFix {
            get {
                return ResourceManager.GetString("ReplaceIfElseWithConditionalStatementQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Replace &apos;Error&apos; with &apos;Err.Raise&apos; ähnelt.
        /// </summary>
        public static string ReplaceObsoleteErrorStatementQuickFix {
            get {
                return ResourceManager.GetString("ReplaceObsoleteErrorStatementQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Return explicit Variant ähnelt.
        /// </summary>
        public static string SetExplicitVariantReturnTypeQuickFix {
            get {
                return ResourceManager.GetString("SetExplicitVariantReturnTypeQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Use &apos;Set&apos; keyword ähnelt.
        /// </summary>
        public static string SetObjectVariableQuickFix {
            get {
                return ResourceManager.GetString("SetObjectVariableQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Specify Public access modifier explicitly ähnelt.
        /// </summary>
        public static string SpecifyExplicitPublicModifierQuickFix {
            get {
                return ResourceManager.GetString("SpecifyExplicitPublicModifierQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Separate multiple declarations into multiple instructions ähnelt.
        /// </summary>
        public static string SplitMultipleDeclarationsQuickFix {
            get {
                return ResourceManager.GetString("SplitMultipleDeclarationsQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Synchronize attributes/annotations in module ähnelt.
        /// </summary>
        public static string SynchronizeAttributesQuickFix {
            get {
                return ResourceManager.GetString("SynchronizeAttributesQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Introduce error handling subroutine ähnelt.
        /// </summary>
        public static string UnhandledOnErrorResumeNextInspectionQuickFix {
            get {
                return ResourceManager.GetString("UnhandledOnErrorResumeNextInspectionQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Change &apos;{0}&apos; to &apos;{1}&apos; ähnelt.
        /// </summary>
        public static string UseTypedFunctionQuickFix {
            get {
                return ResourceManager.GetString("UseTypedFunctionQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add to whitelist ähnelt.
        /// </summary>
        public static string WhiteListIdentifierQuickFix {
            get {
                return ResourceManager.GetString("WhiteListIdentifierQuickFix", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Add property get accessor ähnelt.
        /// </summary>
        public static string WriteOnlyPropertyQuickFix {
            get {
                return ResourceManager.GetString("WriteOnlyPropertyQuickFix", resourceCulture);
            }
        }
    }
}
