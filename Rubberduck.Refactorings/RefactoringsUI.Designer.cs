//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rubberduck.Refactorings {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class RefactoringsUI {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal RefactoringsUI() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Rubberduck.Refactorings.RefactoringsUI", typeof(RefactoringsUI).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add.
        /// </summary>
        public static string AnnotateDeclarationDialog_AddArgumentButtonLabel {
            get {
                return ResourceManager.GetString("AnnotateDeclarationDialog_AddArgumentButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add/Adjust attribute.
        /// </summary>
        public static string AnnotateDeclarationDialog_AdjustAttributeLabel {
            get {
                return ResourceManager.GetString("AnnotateDeclarationDialog_AdjustAttributeLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annotation to Add:.
        /// </summary>
        public static string AnnotateDeclarationDialog_AnnotationLabel {
            get {
                return ResourceManager.GetString("AnnotateDeclarationDialog_AnnotationLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annotation Arguments:.
        /// </summary>
        public static string AnnotateDeclarationDialog_ArgumentsLabel {
            get {
                return ResourceManager.GetString("AnnotateDeclarationDialog_ArgumentsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type.
        /// </summary>
        public static string AnnotateDeclarationDialog_ArgumentTypeHeader {
            get {
                return ResourceManager.GetString("AnnotateDeclarationDialog_ArgumentTypeHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value.
        /// </summary>
        public static string AnnotateDeclarationDialog_ArgumentValueHeader {
            get {
                return ResourceManager.GetString("AnnotateDeclarationDialog_ArgumentValueHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rubberduck - Annotate Declaration.
        /// </summary>
        public static string AnnotateDeclarationDialog_Caption {
            get {
                return ResourceManager.GetString("AnnotateDeclarationDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declaration to Annotate:.
        /// </summary>
        public static string AnnotateDeclarationDialog_DeclarationLabel {
            get {
                return ResourceManager.GetString("AnnotateDeclarationDialog_DeclarationLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select an annotation (and values) to add to the declaration..
        /// </summary>
        public static string AnnotateDeclarationDialog_Instructions {
            get {
                return ResourceManager.GetString("AnnotateDeclarationDialog_Instructions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove.
        /// </summary>
        public static string AnnotateDeclarationDialog_RemoveArgumentButtonLabel {
            get {
                return ResourceManager.GetString("AnnotateDeclarationDialog_RemoveArgumentButtonLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annotate Declaration.
        /// </summary>
        public static string AnnotateDeclarationDialog_TitleText {
            get {
                return ResourceManager.GetString("AnnotateDeclarationDialog_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annotation arguments of type &apos;Attribute Name&apos; have to start with &apos;VB_&apos;..
        /// </summary>
        public static string AnnotationArgument_ValidationError_AttributeNameStart {
            get {
                return ResourceManager.GetString("AnnotationArgument_ValidationError_AttributeNameStart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annotation arguments cannot be empty..
        /// </summary>
        public static string AnnotationArgument_ValidationError_EmptyArgument {
            get {
                return ResourceManager.GetString("AnnotationArgument_ValidationError_EmptyArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annotation arguments of type &apos;Inspection Name&apos; have to be the name of an existing inspection..
        /// </summary>
        public static string AnnotationArgument_ValidationError_InspectionName {
            get {
                return ResourceManager.GetString("AnnotationArgument_ValidationError_InspectionName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annotation arguments can only contain a single line..
        /// </summary>
        public static string AnnotationArgument_ValidationError_Newline {
            get {
                return ResourceManager.GetString("AnnotationArgument_ValidationError_Newline", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annotation arguments of type &apos;Boolean&apos; have to either be &apos;True&apos; or &apos;False&apos;..
        /// </summary>
        public static string AnnotationArgument_ValidationError_NotABoolean {
            get {
                return ResourceManager.GetString("AnnotationArgument_ValidationError_NotABoolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annotation arguments of type &apos;Number&apos; have to be a valid number in integer or floating point format..
        /// </summary>
        public static string AnnotationArgument_ValidationError_NotANumber {
            get {
                return ResourceManager.GetString("AnnotationArgument_ValidationError_NotANumber", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annotation arguments must not contain control characters..
        /// </summary>
        public static string AnnotationArgument_ValidationError_SpecialCharacters {
            get {
                return ResourceManager.GetString("AnnotationArgument_ValidationError_SpecialCharacters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annotation arguments cannot be longer than {0} characters..
        /// </summary>
        public static string AnnotationArgument_ValidationError_TooLong {
            get {
                return ResourceManager.GetString("AnnotationArgument_ValidationError_TooLong", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Annotation arguments of type &apos;Attribute Name&apos; cannot contain whitespace..
        /// </summary>
        public static string AnnotationArgument_ValidationError_WhitespaceInAttribute {
            get {
                return ResourceManager.GetString("AnnotationArgument_ValidationError_WhitespaceInAttribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Attribute.
        /// </summary>
        public static string AnnotationArgumentType_Attribute {
            get {
                return ResourceManager.GetString("AnnotationArgumentType_Attribute", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Boolean.
        /// </summary>
        public static string AnnotationArgumentType_Boolean {
            get {
                return ResourceManager.GetString("AnnotationArgumentType_Boolean", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Inspection Name.
        /// </summary>
        public static string AnnotationArgumentType_Inspection {
            get {
                return ResourceManager.GetString("AnnotationArgumentType_Inspection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Number.
        /// </summary>
        public static string AnnotationArgumentType_Number {
            get {
                return ResourceManager.GetString("AnnotationArgumentType_Number", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Text.
        /// </summary>
        public static string AnnotationArgumentType_Text {
            get {
                return ResourceManager.GetString("AnnotationArgumentType_Text", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Consider choosing a different name..
        /// </summary>
        public static string AssignedByValDialog_MeaninglessNameFormat {
            get {
                return ResourceManager.GetString("AssignedByValDialog_MeaninglessNameFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is already accessible to this scope..
        /// </summary>
        public static string AssignedByValDialog_NewNameAlreadyUsedFormat {
            get {
                return ResourceManager.GetString("AssignedByValDialog_NewNameAlreadyUsedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Assigned ByVal parameter QuickFix - Make Local Copy.
        /// </summary>
        public static string AssignedByValParamQFixDialog_Caption {
            get {
                return ResourceManager.GetString("AssignedByValParamQFixDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify a name to use for the local copy of ByVal {0} &apos;{1}&apos;..
        /// </summary>
        public static string AssignedByValParamQFixDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("AssignedByValParamQFixDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specify Local Copy Variable Name.
        /// </summary>
        public static string AssignedByValParamQFixDialog_TitleText {
            get {
                return ResourceManager.GetString("AssignedByValParamQFixDialog_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to encapsulate &apos;{0}&apos;. ReDim({0}) statement(s) exist in other modules..
        /// </summary>
        public static string EncapsulateField_ArrayHasExternalRedimFormat {
            get {
                return ResourceManager.GetString("EncapsulateField_ArrayHasExternalRedimFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rubberduck - Encapsulate Field.
        /// </summary>
        public static string EncapsulateField_Caption {
            get {
                return ResourceManager.GetString("EncapsulateField_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select one or more fields to encapsulate.  Accept the default values or edit property names..
        /// </summary>
        public static string EncapsulateField_InstructionText {
            get {
                return ResourceManager.GetString("EncapsulateField_InstructionText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name conflict.
        /// </summary>
        public static string EncapsulateField_NameConflictDetected {
            get {
                return ResourceManager.GetString("EncapsulateField_NameConflictDetected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter Name:.
        /// </summary>
        public static string EncapsulateField_ParameterName {
            get {
                return ResourceManager.GetString("EncapsulateField_ParameterName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preview:.
        /// </summary>
        public static string EncapsulateField_Preview {
            get {
                return ResourceManager.GetString("EncapsulateField_Preview", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;&lt;===== Property and declaration changes above this line =====&gt;.
        /// </summary>
        public static string EncapsulateField_PreviewMarker {
            get {
                return ResourceManager.GetString("EncapsulateField_PreviewMarker", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Creates a property for each UDT Member.
        /// </summary>
        public static string EncapsulateField_PrivateUDTPropertyText {
            get {
                return ResourceManager.GetString("EncapsulateField_PrivateUDTPropertyText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Property Name:.
        /// </summary>
        public static string EncapsulateField_PropertyName {
            get {
                return ResourceManager.GetString("EncapsulateField_PropertyName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Read Only.
        /// </summary>
        public static string EncapsulateField_ReadOnlyCheckBoxContent {
            get {
                return ResourceManager.GetString("EncapsulateField_ReadOnlyCheckBoxContent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setter Type:.
        /// </summary>
        public static string EncapsulateField_SetterType {
            get {
                return ResourceManager.GetString("EncapsulateField_SetterType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encapsulate Field.
        /// </summary>
        public static string EncapsulateField_TitleText {
            get {
                return ResourceManager.GetString("EncapsulateField_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wrap Fields in Private Type.
        /// </summary>
        public static string EncapsulateField_WrapFieldsInPrivateType {
            get {
                return ResourceManager.GetString("EncapsulateField_WrapFieldsInPrivateType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rubberduck - Extract Interface.
        /// </summary>
        public static string ExtractInterface_Caption {
            get {
                return ResourceManager.GetString("ExtractInterface_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Implementation Options:.
        /// </summary>
        public static string ExtractInterface_ImplementationOptionsGroupBox {
            get {
                return ResourceManager.GetString("ExtractInterface_ImplementationOptionsGroupBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Instancing.
        /// </summary>
        public static string ExtractInterface_InstancingGroupBox {
            get {
                return ResourceManager.GetString("ExtractInterface_InstancingGroupBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify interface name and members..
        /// </summary>
        public static string ExtractInterface_InstructionLabel {
            get {
                return ResourceManager.GetString("ExtractInterface_InstructionLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Members.
        /// </summary>
        public static string ExtractInterface_MembersGroupBox {
            get {
                return ResourceManager.GetString("ExtractInterface_MembersGroupBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Empty Implementation.
        /// </summary>
        public static string ExtractInterface_OptionAddEmptyImplementation {
            get {
                return ResourceManager.GetString("ExtractInterface_OptionAddEmptyImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forward Object Member Calls to Interface Members.
        /// </summary>
        public static string ExtractInterface_OptionForwardToInterfaceMembers {
            get {
                return ResourceManager.GetString("ExtractInterface_OptionForwardToInterfaceMembers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forward Interface Member Calls to Object Members.
        /// </summary>
        public static string ExtractInterface_OptionForwardToObjectMembers {
            get {
                return ResourceManager.GetString("ExtractInterface_OptionForwardToObjectMembers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Replace Members with Interface Members.
        /// </summary>
        public static string ExtractInterface_OptionReplaceMembersWithInterfaceMembers {
            get {
                return ResourceManager.GetString("ExtractInterface_OptionReplaceMembersWithInterfaceMembers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Private.
        /// </summary>
        public static string ExtractInterface_Private {
            get {
                return ResourceManager.GetString("ExtractInterface_Private", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Public.
        /// </summary>
        public static string ExtractInterface_Public {
            get {
                return ResourceManager.GetString("ExtractInterface_Public", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The implementing class is &apos;Public&apos; mandating the interface be public as well.
        ///If you require a &apos;Private&apos; interface, change the classes instancing to private as well.
        ///A private class can still implement a public interface..
        /// </summary>
        public static string ExtractInterface_PublicInstancingMandatedByPublicClass {
            get {
                return ResourceManager.GetString("ExtractInterface_PublicInstancingMandatedByPublicClass", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract Interface.
        /// </summary>
        public static string ExtractInterface_TitleLabel {
            get {
                return ResourceManager.GetString("ExtractInterface_TitleLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Accessibility:.
        /// </summary>
        public static string ExtractMethod_AccessibilityLabel {
            get {
                return ResourceManager.GetString("ExtractMethod_AccessibilityLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rubberduck - Extract Method.
        /// </summary>
        public static string ExtractMethod_Caption {
            get {
                return ResourceManager.GetString("ExtractMethod_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preview of method extracted from &apos;{0}&apos;.
        /// </summary>
        public static string ExtractMethod_CodePreviewCaption {
            get {
                return ResourceManager.GetString("ExtractMethod_CodePreviewCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selected code contains compiler directives. Extracting this code may cause breaking changes..
        /// </summary>
        public static string ExtractMethod_CompilationDirectivesWarning {
            get {
                return ResourceManager.GetString("ExtractMethod_CompilationDirectivesWarning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NewMethod.
        /// </summary>
        public static string ExtractMethod_DefaultNewMethodName {
            get {
                return ResourceManager.GetString("ExtractMethod_DefaultNewMethodName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify method name, return type and/or parameters (if applicable), and other options..
        /// </summary>
        public static string ExtractMethod_InstructionsText {
            get {
                return ResourceManager.GetString("ExtractMethod_InstructionsText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selection does not end inside a recognised procedure.
        /// </summary>
        public static string ExtractMethod_InvalidMessageSelectionEndsOutsideProcedure {
            get {
                return ResourceManager.GetString("ExtractMethod_InvalidMessageSelectionEndsOutsideProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract method cannot extract code that contains &apos;{0}&apos; statements..
        /// </summary>
        public static string ExtractMethod_InvalidMessageSelectionHasUnsupportedStatement {
            get {
                return ResourceManager.GetString("ExtractMethod_InvalidMessageSelectionHasUnsupportedStatement", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected code modifies the return value of the function it is in.
        /// </summary>
        public static string ExtractMethod_InvalidMessageSelectionModifiesParentFunctionReturn {
            get {
                return ResourceManager.GetString("ExtractMethod_InvalidMessageSelectionModifiesParentFunctionReturn", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selection covers move than a single procedure.
        /// </summary>
        public static string ExtractMethod_InvalidMessageSelectionMoreThanSingleProcedure {
            get {
                return ResourceManager.GetString("ExtractMethod_InvalidMessageSelectionMoreThanSingleProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selection is not in a recognised procedure type.
        /// </summary>
        public static string ExtractMethod_InvalidMessageSelectionNotInRecognisedProcedure {
            get {
                return ResourceManager.GetString("ExtractMethod_InvalidMessageSelectionNotInRecognisedProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract method must contain selection that represents a set of complete statements. It cannot extract a part of a statement..
        /// </summary>
        public static string ExtractMethod_InvalidMessageSelectionNotSetOfCompleteStatements {
            get {
                return ResourceManager.GetString("ExtractMethod_InvalidMessageSelectionNotSetOfCompleteStatements", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Selection does not start inside a recognised procedure.
        /// </summary>
        public static string ExtractMethod_InvalidMessageSelectionStartsOutsideProcedure {
            get {
                return ResourceManager.GetString("ExtractMethod_InvalidMessageSelectionStartsOutsideProcedure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The current selection is not valid:
        ///{0}.
        /// </summary>
        public static string ExtractMethod_InvalidSelectionMessage {
            get {
                return ResourceManager.GetString("ExtractMethod_InvalidSelectionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to (none).
        /// </summary>
        public static string ExtractMethod_NoneSelected {
            get {
                return ResourceManager.GetString("ExtractMethod_NoneSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Pass by type.
        /// </summary>
        public static string ExtractMethod_ParameterAssignmentTypeColumnHeader {
            get {
                return ResourceManager.GetString("ExtractMethod_ParameterAssignmentTypeColumnHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Data type.
        /// </summary>
        public static string ExtractMethod_ParameterDataTypeColumnHeader {
            get {
                return ResourceManager.GetString("ExtractMethod_ParameterDataTypeColumnHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Name.
        /// </summary>
        public static string ExtractMethod_ParameterNameColumnHeader {
            get {
                return ResourceManager.GetString("ExtractMethod_ParameterNameColumnHeader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameters:.
        /// </summary>
        public static string ExtractMethod_ParametersLabel {
            get {
                return ResourceManager.GetString("ExtractMethod_ParametersLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Preview:.
        /// </summary>
        public static string ExtractMethod_PreviewLabel {
            get {
                return ResourceManager.GetString("ExtractMethod_PreviewLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Return:.
        /// </summary>
        public static string ExtractMethod_ReturnLabel {
            get {
                return ResourceManager.GetString("ExtractMethod_ReturnLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select variable to use as return value of new function. Select None to make a sub..
        /// </summary>
        public static string ExtractMethod_ReturnTypeSelection {
            get {
                return ResourceManager.GetString("ExtractMethod_ReturnTypeSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Set.
        /// </summary>
        public static string ExtractMethod_SetBoxLabel {
            get {
                return ResourceManager.GetString("ExtractMethod_SetBoxLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Extract method.
        /// </summary>
        public static string ExtractMethod_TitleText {
            get {
                return ResourceManager.GetString("ExtractMethod_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to move variable declaration.
        /// </summary>
        public static string ExtractMethod_UnableToMoveVariableDeclarationMessage {
            get {
                return ResourceManager.GetString("ExtractMethod_UnableToMoveVariableDeclarationMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter passed by reference.
        /// </summary>
        public static string ExtractParameterNewType_ByRefParameter {
            get {
                return ResourceManager.GetString("ExtractParameterNewType_ByRefParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter passed by value.
        /// </summary>
        public static string ExtractParameterNewType_ByValParameter {
            get {
                return ResourceManager.GetString("ExtractParameterNewType_ByValParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rubberduck - Implement Interface.
        /// </summary>
        public static string ImplementInterface_Caption {
            get {
                return ResourceManager.GetString("ImplementInterface_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No implements selected..
        /// </summary>
        public static string ImplementInterfaceFailed_NoImplementsStatementSelected {
            get {
                return ResourceManager.GetString("ImplementInterfaceFailed_NoImplementsStatementSelected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rubberduck - Introduce Field.
        /// </summary>
        public static string IntroduceField_Caption {
            get {
                return ResourceManager.GetString("IntroduceField_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target &apos;{0}&apos; is already a field..
        /// </summary>
        public static string IntroduceFieldFailed_TargetIsAlreadyAField {
            get {
                return ResourceManager.GetString("IntroduceFieldFailed_TargetIsAlreadyAField", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; does not start with a letter..
        /// </summary>
        public static string InvalidNameCriteria_DoesNotStartWithLetterFormat {
            get {
                return ResourceManager.GetString("InvalidNameCriteria_DoesNotStartWithLetterFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; exceeds the maximum allowed string length..
        /// </summary>
        public static string InvalidNameCriteria_ExceedsMaximumLengthFormat {
            get {
                return ResourceManager.GetString("InvalidNameCriteria_ExceedsMaximumLengthFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; contains special character(s) other than underscores..
        /// </summary>
        public static string InvalidNameCriteria_InvalidCharactersFormat {
            get {
                return ResourceManager.GetString("InvalidNameCriteria_InvalidCharactersFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to VBA Identifiers cannot be null or zero-length..
        /// </summary>
        public static string InvalidNameCriteria_IsNullOrEmpty {
            get {
                return ResourceManager.GetString("InvalidNameCriteria_IsNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is a reserved keyword..
        /// </summary>
        public static string InvalidNameCriteria_IsReservedKeywordFormat {
            get {
                return ResourceManager.GetString("InvalidNameCriteria_IsReservedKeywordFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rubberduck - Move Closer To Usage.
        /// </summary>
        public static string MoveCloserToUsage_Caption {
            get {
                return ResourceManager.GetString("MoveCloserToUsage_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select the new Type of Declaration Statement for &apos;{0}&apos;..
        /// </summary>
        public static string MoveCloserToUsageDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("MoveCloserToUsageDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Declaration Statement.
        /// </summary>
        public static string MoveCloserToUsageDialog_TitleText {
            get {
                return ResourceManager.GetString("MoveCloserToUsageDialog_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid Selection..
        /// </summary>
        public static string MoveCloserToUsageFailure_InvalidSelection {
            get {
                return ResourceManager.GetString("MoveCloserToUsageFailure_InvalidSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The method using &apos;{0}&apos; already has the declaration &apos;{1}&apos; of the same name in scope..
        /// </summary>
        public static string MoveCloserToUsageFailure_ReferencingMethodHasSameNameDeclarationInScope {
            get {
                return ResourceManager.GetString("MoveCloserToUsageFailure_ReferencingMethodHasSameNameDeclarationInScope", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not used anywhere..
        /// </summary>
        public static string MoveCloserToUsageFailure_TargetHasNoReferences {
            get {
                return ResourceManager.GetString("MoveCloserToUsageFailure_TargetHasNoReferences", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is not defined in the same project it is used..
        /// </summary>
        public static string MoveCloserToUsageFailure_TargetIsInDifferentProject {
            get {
                return ResourceManager.GetString("MoveCloserToUsageFailure_TargetIsInDifferentProject", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is defined neither in the component component it is used nor in a standard module..
        /// </summary>
        public static string MoveCloserToUsageFailure_TargetIsInOtherNonStandardModule {
            get {
                return ResourceManager.GetString("MoveCloserToUsageFailure_TargetIsInOtherNonStandardModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is a public member of of a class, form or document..
        /// </summary>
        public static string MoveCloserToUsageFailure_TargetIsNonPrivateInNonStandardModule {
            get {
                return ResourceManager.GetString("MoveCloserToUsageFailure_TargetIsNonPrivateInNonStandardModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; is built-in..
        /// </summary>
        public static string MoveCloserToUsageFailure_TargetIsNotUserDefined {
            get {
                return ResourceManager.GetString("MoveCloserToUsageFailure_TargetIsNotUserDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; has references in multiple methods..
        /// </summary>
        public static string MoveCloserToUsageFailure_TargetIsUsedInMultipleMethods {
            get {
                return ResourceManager.GetString("MoveCloserToUsageFailure_TargetIsUsedInMultipleMethods", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify a new parent folder for the subfolder &apos;{0}&apos; of &apos;{1}&apos;..
        /// </summary>
        public static string MoveFolderDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("MoveFolderDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder names cannot contain control characters like e.g. new lines..
        /// </summary>
        public static string MoveFolders_ControlCharacter {
            get {
                return ResourceManager.GetString("MoveFolders_ControlCharacter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A folder name cannot be empty..
        /// </summary>
        public static string MoveFolders_EmptyFolderName {
            get {
                return ResourceManager.GetString("MoveFolders_EmptyFolderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The names of individual subfolders cannot be empty..
        /// </summary>
        public static string MoveFolders_EmptySubfolderName {
            get {
                return ResourceManager.GetString("MoveFolders_EmptySubfolderName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Several folders with the same name are being moved. This will merge them.
        ///Do you want to proceed?.
        /// </summary>
        public static string MoveFolders_SameNameSourceFolders {
            get {
                return ResourceManager.GetString("MoveFolders_SameNameSourceFolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target folder &apos;{0}&apos; already contains a subfolder &apos;{1}&apos;. Moving the folder will merge it with the existing folder.
        ///Do you want to proceed?.
        /// </summary>
        public static string MoveFolders_SameNameSubfolder {
            get {
                return ResourceManager.GetString("MoveFolders_SameNameSubfolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target folder &apos;{0}&apos; already contains subfolders {1}. Moving the folders will merge them with the existing folders with corresponding names.
        ///Do you want to proceed?.
        /// </summary>
        public static string MoveFolders_SameNameSubfolders {
            get {
                return ResourceManager.GetString("MoveFolders_SameNameSubfolders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rubberduck - Move Folders.
        /// </summary>
        public static string MoveFoldersDialog_Caption {
            get {
                return ResourceManager.GetString("MoveFoldersDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify a new parent folder for the folders..
        /// </summary>
        public static string MoveFoldersDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("MoveFoldersDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move Folders.
        /// </summary>
        public static string MoveFoldersDialog_TitleText {
            get {
                return ResourceManager.GetString("MoveFoldersDialog_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify new folder for the components..
        /// </summary>
        public static string MoveMultipleToFolderDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("MoveMultipleToFolderDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify a new parent folder for the folder &apos;{0}&apos;..
        /// </summary>
        public static string MoveRootFolderDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("MoveRootFolderDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rubberduck - Move to Folder.
        /// </summary>
        public static string MoveToFolderDialog_Caption {
            get {
                return ResourceManager.GetString("MoveToFolderDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder:.
        /// </summary>
        public static string MoveToFolderDialog_FolderLabelText {
            get {
                return ResourceManager.GetString("MoveToFolderDialog_FolderLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify a new folder for {0} &apos;{1}&apos; in folder &apos;{2}&apos;..
        /// </summary>
        public static string MoveToFolderDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("MoveToFolderDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move to Folder.
        /// </summary>
        public static string MoveToFolderDialog_TitleText {
            get {
                return ResourceManager.GetString("MoveToFolderDialog_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rubberduck - Promote to Parameter.
        /// </summary>
        public static string PromoteToParameter_Caption {
            get {
                return ResourceManager.GetString("PromoteToParameter_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;{0}&apos; implements &apos;{1}.{2}&apos;. Change interface signature? (Will propagate to all implementations.).
        /// </summary>
        public static string PromoteToParameter_PromptIfTargetIsInterface {
            get {
                return ResourceManager.GetString("PromoteToParameter_PromptIfTargetIsInterface", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target &apos;{0}&apos; is not contained in a method..
        /// </summary>
        public static string PromoteToParameterFailed_TargetNotContainedInMethod {
            get {
                return ResourceManager.GetString("PromoteToParameterFailed_TargetNotContainedInMethod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;{0}&apos; implements &apos;{1}.{2}&apos;. Change interface signature? (Will propagate to all implementations.).
        /// </summary>
        public static string Refactoring_TargetIsInterfaceMemberImplementation {
            get {
                return ResourceManager.GetString("Refactoring_TargetIsInterfaceMemberImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The component &apos;{0}&apos; would have been affected by the refactoring, but its state in Rubberduck&apos;s memory is stale. Please refresh Rubberduck and try again..
        /// </summary>
        public static string RefactoringFailure_AffectedModuleIsStale {
            get {
                return ResourceManager.GetString("RefactoringFailure_AffectedModuleIsStale", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The refactoring can only annotate components, members and variables, but the target had type &apos;{0}&apos;..
        /// </summary>
        public static string RefactoringFailure_AnnotateDeclaration_InvalidType {
            get {
                return ResourceManager.GetString("RefactoringFailure_AnnotateDeclaration_InvalidType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Refactoring failed..
        /// </summary>
        public static string RefactoringFailure_BaseMessage {
            get {
                return ResourceManager.GetString("RefactoringFailure_BaseMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declaration type of target &apos;{0}&apos; is &apos;{1}&apos; instead of the expected &apos;{2}&apos;..
        /// </summary>
        public static string RefactoringFailure_InvalidDeclarationType {
            get {
                return ResourceManager.GetString("RefactoringFailure_InvalidDeclarationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Declaration type of target &apos;{0}&apos; is &apos;{1}&apos; instead of one of the expected &apos;{2}&apos;..
        /// </summary>
        public static string RefactoringFailure_InvalidDeclarationType_multipleValid {
            get {
                return ResourceManager.GetString("RefactoringFailure_InvalidDeclarationType_multipleValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no active selection..
        /// </summary>
        public static string RefactoringFailure_NoActiveSelection {
            get {
                return ResourceManager.GetString("RefactoringFailure_NoActiveSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No viable target selected..
        /// </summary>
        public static string RefactoringFailure_NoTargetDeclarationForSelection {
            get {
                return ResourceManager.GetString("RefactoringFailure_NoTargetDeclarationForSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No target has been specified..
        /// </summary>
        public static string RefactoringFailure_NoTargetFolder {
            get {
                return ResourceManager.GetString("RefactoringFailure_NoTargetFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to suspend the Parser to perform the refactoring operation..
        /// </summary>
        public static string RefactoringFailure_SuspendParserFailure {
            get {
                return ResourceManager.GetString("RefactoringFailure_SuspendParserFailure", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The target is not user-defined..
        /// </summary>
        public static string RefactoringFailure_TargetNotUserDefined {
            get {
                return ResourceManager.GetString("RefactoringFailure_TargetNotUserDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target declaration is null..
        /// </summary>
        public static string RefactoringFailure_TargetNull {
            get {
                return ResourceManager.GetString("RefactoringFailure_TargetNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rubberduck - Remove Parameters.
        /// </summary>
        public static string RemoveParamsDialog_Caption {
            get {
                return ResourceManager.GetString("RemoveParamsDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a parameter and double-click it or use buttons to remove or restore it..
        /// </summary>
        public static string RemoveParamsDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("RemoveParamsDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot remove last parameter from setter or letter..
        /// </summary>
        public static string RemoveParamsDialog_RemoveIllegalSetterLetterParameter {
            get {
                return ResourceManager.GetString("RemoveParamsDialog_RemoveIllegalSetterLetterParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove parameters.
        /// </summary>
        public static string RemoveParamsDialog_TitleText {
            get {
                return ResourceManager.GetString("RemoveParamsDialog_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No parameters in method &apos;{0}&apos;..
        /// </summary>
        public static string RemovePresenter_NoParametersError {
            get {
                return ResourceManager.GetString("RemovePresenter_NoParametersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename {0}.
        /// </summary>
        public static string Rename_DeclarationType {
            get {
                return ResourceManager.GetString("Rename_DeclarationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please ensure that exactly 1 control is selected before renaming..
        /// </summary>
        public static string RenameDialog_AmbiguousSelection {
            get {
                return ResourceManager.GetString("RenameDialog_AmbiguousSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} {1} cannot be changed..
        /// </summary>
        public static string RenameDialog_BuiltInNameError {
            get {
                return ResourceManager.GetString("RenameDialog_BuiltInNameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rubberduck - Rename.
        /// </summary>
        public static string RenameDialog_Caption {
            get {
                return ResourceManager.GetString("RenameDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; conflicts with the name of the existing declaration &apos;{1}&apos;. Renaming &apos;{2}&apos; to &apos;{0}&apos; may result in uncompilable  code or a change in logic.
        ///Do you want to proceed with this rename?.
        /// </summary>
        public static string RenameDialog_ConflictingNames {
            get {
                return ResourceManager.GetString("RenameDialog_ConflictingNames", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not rename {0}..
        /// </summary>
        public static string RenameDialog_DefaultRenameError {
            get {
                return ResourceManager.GetString("RenameDialog_DefaultRenameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to folder.
        /// </summary>
        public static string RenameDialog_Folder {
            get {
                return ResourceManager.GetString("RenameDialog_Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The folder &apos;{0}&apos; already exists. Renaming &apos;{1}&apos; to &apos;{2}&apos; will lead to a merge with the existing folder.
        ///Do you want to proceed?.
        /// </summary>
        public static string RenameDialog_FolderAlreadyExists {
            get {
                return ResourceManager.GetString("RenameDialog_FolderAlreadyExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder:.
        /// </summary>
        public static string RenameDialog_FolderLabel {
            get {
                return ResourceManager.GetString("RenameDialog_FolderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Full new folder:.
        /// </summary>
        public static string RenameDialog_FullNewFolderLabel {
            get {
                return ResourceManager.GetString("RenameDialog_FullNewFolderLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please specify new name for {0} &apos;{1}&apos;..
        /// </summary>
        public static string RenameDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("RenameDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not rename Interface Member {0}..
        /// </summary>
        public static string RenameDialog_InterfaceRenameError {
            get {
                return ResourceManager.GetString("RenameDialog_InterfaceRenameError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to It is not possible to change only the case of an identifier in VBA (language is case-insensitive)..
        /// </summary>
        public static string RenameDialog_OnlyCasingDifferent {
            get {
                return ResourceManager.GetString("RenameDialog_OnlyCasingDifferent", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename identifier.
        /// </summary>
        public static string RenameDialog_TitleText {
            get {
                return ResourceManager.GetString("RenameDialog_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rename folder.
        /// </summary>
        public static string RenameDialog_TitleText_Folder {
            get {
                return ResourceManager.GetString("RenameDialog_TitleText_Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target &apos;{0}&apos; is a standard event handler, which cannot be renamed..
        /// </summary>
        public static string RenameFailure_StandardEventHandler {
            get {
                return ResourceManager.GetString("RenameFailure_StandardEventHandler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Target control &apos;{0}&apos; not found..
        /// </summary>
        public static string RenameFailure_TargetControlNotFound {
            get {
                return ResourceManager.GetString("RenameFailure_TargetControlNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No code module found for the target module &apos;{0}&apos;..
        /// </summary>
        public static string RenameFailure_TargetModuleWithoutCodeModule {
            get {
                return ResourceManager.GetString("RenameFailure_TargetModuleWithoutCodeModule", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;{0}&apos; is an EventHandler for control &apos;{1}&apos;.  Only the control can be renamed.  Rename &apos;{1}&apos; instead?.
        /// </summary>
        public static string RenamePresenter_TargetIsControlEventHandler {
            get {
                return ResourceManager.GetString("RenamePresenter_TargetIsControlEventHandler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;{0}&apos; is an implementation of event &apos;{1}.{2}&apos;.  Rename event &apos;{2}&apos; instead?.
        /// </summary>
        public static string RenamePresenter_TargetIsEventHandlerImplementation {
            get {
                return ResourceManager.GetString("RenamePresenter_TargetIsEventHandlerImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Method &apos;{0}&apos; implements &apos;{1}.{2}&apos;. Rename the interface member?.
        /// </summary>
        public static string RenamePresenter_TargetIsInterfaceMemberImplementation {
            get {
                return ResourceManager.GetString("RenamePresenter_TargetIsInterfaceMemberImplementation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Rubberduck - Reorder Parameters.
        /// </summary>
        public static string ReorderParamsDialog_Caption {
            get {
                return ResourceManager.GetString("ReorderParamsDialog_Caption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select a parameter and drag it or use buttons to move it up or down..
        /// </summary>
        public static string ReorderParamsDialog_InstructionsLabelText {
            get {
                return ResourceManager.GetString("ReorderParamsDialog_InstructionsLabelText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move down.
        /// </summary>
        public static string ReorderParamsDialog_MoveDownButtonText {
            get {
                return ResourceManager.GetString("ReorderParamsDialog_MoveDownButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Move up.
        /// </summary>
        public static string ReorderParamsDialog_MoveUpButtonText {
            get {
                return ResourceManager.GetString("ReorderParamsDialog_MoveUpButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reorder parameters.
        /// </summary>
        public static string ReorderParamsDialog_TitleText {
            get {
                return ResourceManager.GetString("ReorderParamsDialog_TitleText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Less than two parameters in method &apos;{0}&apos;..
        /// </summary>
        public static string ReorderPresenter_LessThanTwoParametersError {
            get {
                return ResourceManager.GetString("ReorderPresenter_LessThanTwoParametersError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Optional parameters must be specified at the end of the parameter list..
        /// </summary>
        public static string ReorderPresenter_OptionalParametersMustBeLastError {
            get {
                return ResourceManager.GetString("ReorderPresenter_OptionalParametersMustBeLastError", resourceCulture);
            }
        }
    }
}
