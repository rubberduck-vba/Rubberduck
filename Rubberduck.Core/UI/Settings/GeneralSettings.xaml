<UserControl x:Class="Rubberduck.UI.Settings.GeneralSettings"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:settings="clr-namespace:Rubberduck.UI.Settings"
             xmlns:controls="clr-namespace:Rubberduck.UI.Controls"
             xmlns:converters="clr-namespace:Rubberduck.UI.Settings.Converters"
             xmlns:hiddenVisibility="clr-namespace:Rubberduck.UI.Converters"
             xmlns:core="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d" 
             d:DesignWidth="300"
             d:DataContext="{d:DesignInstance {x:Type settings:GeneralSettingsViewModel}, IsDesignTimeCreatable=False}">
    <UserControl.Resources>
        <converters:DelimiterValueToTextConverter x:Key="DelimiterValueToText" />
        <converters:DelimiterToTextConverter x:Key="DelimiterToText" />
        <converters:HotkeyDisplayConverter x:Key="HotkeyDisplay" />
        <hiddenVisibility:BoolToHiddenVisibilityConverter x:Key="BoolToHiddenVisibility" />
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />

        <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFD9F4FF" Offset="0"/>
            <GradientStop Color="#FF9BDDFB" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEEEDED" Offset="0"/>
            <GradientStop Color="#FFDDDDDD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />

        <ObjectDataProvider x:Key="Delimiters"
                            MethodName="GetValues"
                            ObjectType="{x:Type core:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type Type="settings:DelimiterOptions"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Style x:Key="PrettifyRow" TargetType="{x:Type DataGridRow}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="2"/>
                </Style>
            </Style.Resources>
            <Setter Property="BorderThickness" Value="0,.5,0,0" />
            <Setter Property="BorderBrush" Value="DarkGray" />
            <Setter Property="Height" Value="26" />
            <Setter Property="TextBlock.FontWeight" Value="Normal" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderThickness" Value="1.5" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="#adc6e5"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="LightGray"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ScrollViewer">
            <Style.Setters>
                <Setter Property="settings:ScrollViewerCorrector.FixScrolling" Value="True" />
            </Style.Setters>
        </Style>
    </UserControl.Resources>
    <Grid>
        <ScrollViewer x:Name="ScrollViewer">
            <Grid>
                <StackPanel Grid.Row="0" Margin="5,5,5,0">
                    <Label Background="DarkGray"
                       HorizontalContentAlignment="Stretch"
                       Margin="0,0,0,3">
                        <Label.Style>
                            <Style>
                                <Style.Resources>
                                    <Style TargetType="{x:Type Border}">
                                        <Setter Property="CornerRadius" Value="5"/>
                                    </Style>
                                </Style.Resources>
                            </Style>
                        </Label.Style>
                        <DockPanel Background="DarkGray" FlowDirection="LeftToRight">
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                                <Label Foreground="White"
                                   FontWeight="SemiBold" 
                                   Content="{Resx ResxName=Rubberduck.Resources.Settings.SettingsUI, Key=PageHeader_GeneralSettings}">
                                </Label>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition MaxWidth="75"/>
                                        <ColumnDefinition MaxWidth="75"/>
                                    </Grid.ColumnDefinitions>
                                    <controls:LinkButton Grid.Column="1" Margin="2"
                                                         Command="{Binding ImportButtonCommand}"
                                                         Content="{Resx ResxName=Rubberduck.Resources.Settings.SettingsUI, Key=ImportPageSettingsButton}"/>
                                    <controls:LinkButton Grid.Column="2" Margin="2"
                                                         Command="{Binding ExportButtonCommand}"
                                                         Content="{Resx ResxName=Rubberduck.Resources.Settings.SettingsUI, Key=ExportPageSettingsButton}"/>
                                </Grid>
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Right"/>
                        </DockPanel>
                    </Label>
                    <Label Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_LanguageLabel}" FontWeight="SemiBold" />
                    <ComboBox Width="210"
                              HorizontalAlignment="Left"
                              Margin="5"
                              SelectedItem="{Binding SelectedLanguage, Mode=TwoWay}"
                              ItemsSource="{Binding Languages, UpdateSourceTrigger=PropertyChanged}"
                              DisplayMemberPath="Name" />

                    <CheckBox Margin="5,0,0,5" Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_ShowSplash}"
                              IsChecked="{Binding ShowSplashAtStartup}" />

                    <CheckBox Margin="5,0,0,5" Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_CheckVersion}"
                              IsChecked="{Binding CheckVersionAtStartup}"
                              x:Name="IsVersionCheckEnabled"/>
                    <CheckBox Margin="15,0,0,5" Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_IncludePreRelease}"
                              IsChecked="{Binding IncludePreRelease}"
                              IsEnabled="{Binding IsChecked, ElementName=IsVersionCheckEnabled}"/>
                    
                    <CheckBox Margin="5,0,0,5" Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_CompileBeforeParse}"
                              IsChecked="{Binding CompileBeforeParse}" />
                    <CheckBox Margin="5,0,0,5" Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_SetDpiUnaware}"
                              IsEnabled="{Binding SetDpiUnawareEnabled}"  IsChecked="{Binding SetDpiUnaware}" />
                    <StackPanel Orientation="Horizontal"/>

                    <Label Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_MinimumLogLevelLabel}" FontWeight="SemiBold" />
                    <StackPanel Orientation="Horizontal">
                        <ComboBox Width="210"
                                  HorizontalAlignment="Left"
                                  Margin="5"
                                  SelectedItem="{Binding SelectedLogLevel, Mode=TwoWay}"
                                  ItemsSource="{Binding LogLevels, UpdateSourceTrigger=PropertyChanged}"
                                  DisplayMemberPath="Name"/>
                        <Button 
                            Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_ShowLogFolder}"
                            Padding="5"
                            Command="{Binding ShowLogFolderCommand}"/>
                    </StackPanel>

                    <DockPanel>
                        <Label DockPanel.Dock="Left" Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_HotkeysLabel}" FontWeight="SemiBold" />
                        <Label DockPanel.Dock="Right" Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_HotkeyRestrictionLabel}"
                               Visibility="{Binding ShouldDisplayHotkeyModificationLabel, Converter={StaticResource BoolToVisibility}}"
                               Foreground="Red"
                               FontWeight="Bold"/>
                    </DockPanel>

                    <DataGrid ItemsSource="{Binding Hotkeys}"
                              HorizontalAlignment="Stretch"
                              AutoGenerateColumns="False"
                              CanUserDeleteRows="False"
                              CanUserReorderColumns="False"
                              CanUserResizeColumns="True"
                              IsReadOnly="False"
                              SelectionMode="Single"
                              CanUserAddRows="False"
                              HorizontalGridLinesBrush="Transparent"
                              VerticalGridLinesBrush="Transparent"
                              HeadersVisibility="Column"
                              VerticalScrollBarVisibility="Auto"
                              HorizontalScrollBarVisibility="Hidden"
                              ItemContainerStyle="{StaticResource PrettifyRow}"
                              ColumnHeaderHeight="22"
                              BorderThickness="0">
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn
                        Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_HotkeyEnabled}"
                        Width="Auto"
                        Binding="{Binding IsEnabled}" />
                            <DataGridTextColumn
                        Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_HotkeyDescription}"
                        Binding="{Binding Prompt}"
                        Width="*"
                        IsReadOnly="True" />
                            <DataGridTemplateColumn
                                Width="Auto">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <Label Visibility="{Binding IsValid, Converter={StaticResource BoolToHiddenVisibility}}"
                                               HorizontalContentAlignment="Center">
                                            <Image Source="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=exclamation}"
                                                   ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_HotkeyRestrictionToolTip}"/>
                                        </Label>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                            <DataGridCheckBoxColumn
                        Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_HotkeyShift}"
                        Width="Auto"
                        Binding="{Binding HasShiftModifier}" />
                            <DataGridCheckBoxColumn
                        Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_HotkeyAlt}"
                        Width="Auto"
                        Binding="{Binding HasAltModifier}" />
                            <DataGridCheckBoxColumn
                        Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_HotkeyCtrl}"
                        Width="Auto"
                        Binding="{Binding HasCtrlModifier}" />
                            <DataGridTemplateColumn
                        Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_HotkeyKey1}"
                        Width="Auto"
                        SortMemberPath="KeyDisplaySymbol">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Key1, Converter={StaticResource HotkeyDisplay}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>

                            <DataGridTemplateColumn
                        Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_HotkeyKey2}"
                        Width="Auto"
                        SortMemberPath="KeyDisplaySymbol"
                        Visibility="Collapsed">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <TextBox Text="{Binding Key2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>
                    <Label Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_ExperimentalFeatures}" FontWeight="SemiBold" />
                    <Label Margin="5,0,0,5" FontWeight="Bold"
                           Foreground="{x:Static SystemColors.InfoTextBrush}" 
                           Background="{x:Static SystemColors.InfoBrush}">
                        <Label.Content>
                            <AccessText TextWrapping="Wrap" Text="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GeneralSettings_ExperimentalFeaturesWarning}"/>
                        </Label.Content>
                    </Label>
                    <ListView ItemsSource="{Binding ExperimentalFeatures}"
                          HorizontalAlignment="Stretch"
                          BorderThickness="0">
                        <ListView.ItemTemplate>
                            <DataTemplate>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox IsChecked="{Binding IsEnabled}" Content="{Binding DisplayValue}" />
                                </StackPanel>
                            </DataTemplate>
                        </ListView.ItemTemplate>
                    </ListView>
                </StackPanel>
            </Grid>
        </ScrollViewer>
    </Grid>
</UserControl>
