<UserControl x:Class="Rubberduck.UI.Refactorings.ExtractInterfaceView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converters="clr-namespace:Rubberduck.UI.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <UserControl.Resources>
        <converters:BoolToHiddenVisibilityConverter x:Key="BoolToHiddenVisibility" />

        <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFD9F4FF" Offset="0"/>
            <GradientStop Color="#FF9BDDFB" Offset="1"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#FFEEEDED" Offset="0"/>
            <GradientStop Color="#FFDDDDDD" Offset="1"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />

        <Style x:Key="PrettifyRow" TargetType="{x:Type DataGridRow}">
            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="2"/>
                </Style>
            </Style.Resources>
            <Setter Property="BorderThickness" Value="0,.5,0,0" />
            <Setter Property="BorderBrush" Value="DarkGray" />
            <Setter Property="Height" Value="26" />
            <Setter Property="TextBlock.FontWeight" Value="Normal" />
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="BorderThickness" Value="1.5" />
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="Selector.IsSelectionActive" Value="True" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="#adc6e5"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </MultiTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True" />
                        <Condition Property="Selector.IsSelectionActive" Value="False" />
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="LightGray"/>
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}" />
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50" />
            <RowDefinition Height="*" />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>
        <DockPanel Dock="Top" Background="White">
            <StackPanel>

            <Label Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=ExtractInterface_TitleLabel}" FontWeight="Bold" />
            <TextBlock Text="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=ExtractInterface_InstructionLabel}"
                       Margin="5,0" />
            </StackPanel>
        </DockPanel>
        <Grid Grid.Row="1" Margin="5">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0">
                <Label Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=NameLabelText}" />
                <TextBox Margin="5,-2,0,0"
                         Height="22"
                         VerticalAlignment="Top"
                         VerticalContentAlignment="Center"
                         Text="{Binding InterfaceName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                <Image Source="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/cross-circle.png"
                       Height="16"
                       Margin="0,-10,-8,0"
                       HorizontalAlignment="Right"
                       VerticalAlignment="Top"
                       Visibility="{Binding IsValidInterfaceName, Converter={StaticResource BoolToHiddenVisibility}}"/>
            </StackPanel>

            <GroupBox Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=ExtractInterface_MembersGroupBox}"
                      Grid.Row="1" Margin="5" Padding="5">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <DataGrid ItemsSource="{Binding Members}"
                              Grid.Column="0"
                              HorizontalAlignment="Stretch"
                              AutoGenerateColumns="False"
                              CanUserDeleteRows="False"
                              CanUserReorderColumns="False"
                              CanUserResizeColumns="True"
                              IsReadOnly="False"
                              SelectionMode="Single"
                              CanUserAddRows="False"
                              HorizontalGridLinesBrush="Transparent"
                              VerticalGridLinesBrush="Transparent"
                              HeadersVisibility="Column"
                              VerticalScrollBarVisibility="Auto"
                              HorizontalScrollBarVisibility="Hidden"
                              ItemContainerStyle="{StaticResource PrettifyRow}"
                              ColumnHeaderHeight="22"
                              BorderThickness="0">
                        <DataGrid.CellStyle>
                            <Style TargetType="{x:Type DataGridCell}">
                                <Setter Property="BorderThickness" Value="0" />
                                <Setter Property="VerticalAlignment" Value="Center" />
                                <Setter Property="Background" Value="Transparent" />
                            </Style>
                        </DataGrid.CellStyle>
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Width="Auto"
                                                    Binding="{Binding IsSelected}" />
                            <DataGridTextColumn Binding="{Binding FullMemberSignature}"
                                                Width="*"
                                                IsReadOnly="True"
                                                SortMemberPath="FullMemberSignature" />
                        </DataGrid.Columns>
                    </DataGrid>
                    <StackPanel Grid.Column="1"
                                HorizontalAlignment="Right"
                                Margin="5,0,0,0"
                                MinWidth="100">
                        <Button Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=SelectAll_Button}"
                                Height="20"
                                Margin="0,0,0,5"
                                Padding="10,0"
                                Command="{Binding SelectAllCommand}" />
                        <Button Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=DeselectAll_Button}"
                                Height="20"
                                Margin="0"
                                Padding="10,0"
                                Command="{Binding DeselectAllCommand}">
                        </Button>
                    </StackPanel>
                </Grid>
            </GroupBox>
        </Grid>

        <Grid Grid.Row="2" Background="{x:Static SystemColors.ControlDarkBrush}" Grid.IsSharedSizeScope="True">
            <Grid HorizontalAlignment="Right"
                  Margin="5,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="SettingsButtons" />
                    <ColumnDefinition SharedSizeGroup="SettingsButtons" />
                </Grid.ColumnDefinitions>
                <Button Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=OK}"
                        Grid.Column="0"
                        Height="20"
                        Margin="5,0"
                        Padding="10,0"
                        IsEnabled="{Binding IsValidInterfaceName}"
                        Command="{Binding OkButtonCommand}" />
                <Button Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=CancelButtonText}"
                        Grid.Column="1"
                        Height="20"
                        Margin="5,0"
                        Padding="10,0"
                        Command="{Binding CancelButtonCommand}">
                </Button>
            </Grid>
        </Grid>
    </Grid>
</UserControl>
