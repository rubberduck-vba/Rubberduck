<UserControl x:Class="Rubberduck.UI.UnitTesting.TestExplorerControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Rubberduck.UI.UnitTesting"
             xmlns:vm="clr-namespace:Rubberduck.UI.UnitTesting.ViewModels"
             xmlns:controls="clr-namespace:Rubberduck.UI.Controls"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converters="clr-namespace:Rubberduck.UI.Converters"
             Language="{UICulture}"
             mc:Ignorable="d" 
             d:DesignHeight="400" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance local:TestExplorerViewModel}">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Controls/ToolBar.xaml"/>
            </ResourceDictionary.MergedDictionaries>
            <BitmapImage x:Key="SettingsImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/gear.png" />

            <BitmapImage x:Key="RefreshImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/arrow-circle-double.png" />
            <BitmapImage x:Key="RunImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/control.png" />
            <BitmapImage x:Key="RunAllTestsImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/flask--arrow.png" />
            <BitmapImage x:Key="RunNotRunTestsImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/question-white.png" />
            <BitmapImage x:Key="RunSingleTestImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/flask.png" />
            <BitmapImage x:Key="RunSelectedTestImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/flask--arrow.png" />
            <BitmapImage x:Key="RunSelectedGroupImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/flask-tag.png" />
            <BitmapImage x:Key="RunInconclusiveTestsImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/flask--exclamation.png" />
            <BitmapImage x:Key="RunPassedTestsImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/tick-circle.png" />
            <BitmapImage x:Key="RunFailedTestsImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/cross-circle.png" />
            <BitmapImage x:Key="RepeatLastRunImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/arrow-repeat.png" />

            <BitmapImage x:Key="ResetResultsImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/flask-undo.png" />
            <BitmapImage x:Key="StopImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/control-stop-square.png" />

            <BitmapImage x:Key="AddIcon" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/flask--plus.png" />
            <BitmapImage x:Key="AddTestMethodIcon" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/flask.png" />
            <BitmapImage x:Key="AddErrorTestMethodIcon" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/flask--exclamation.png" />

            <BitmapImage x:Key="GroupByOutcomeImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/flask-question.png" />
            <BitmapImage x:Key="GroupByLocationImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Custom/PNG/ObjectClass.png" />
            <BitmapImage x:Key="GroupByCategoryImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/tag-label-gray.png" />

            <BitmapImage x:Key="ExpandAllImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/expand-all.png" />
            <BitmapImage x:Key="CollapseAllImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/collapse-all.png" />

            <BitmapImage x:Key="CopyResultsImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/document-copy.png" />

            <BitmapImage x:Key="FilterImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/Funnel.png" />
            <BitmapImage x:Key="OutcomeUnknown" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/question-white.png" />
            <BitmapImage x:Key="OutcomeFail" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/cross-circle.png" />
            <BitmapImage x:Key="OutcomeInconclusive" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/exclamation.png" />
            <BitmapImage x:Key="OutcomeSucceeded" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/tick-circle.png" />

            <BitmapImage x:Key="IgnoreTestImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/flask-empty.png" />
            <BitmapImage x:Key="UnignoreTestImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/flask-undo.png" />

            <local:TestOutcomeImageSourceConverter x:Key="OutcomeIconConverter" />
            <converters:MillisecondToTimeMagnitudeConverter x:Key="FormattedTime" />
            <converters:InvertBoolValueConverter x:Key="InvertBoolValue" />
            <BooleanToVisibilityConverter x:Key="BoolToVisibility" />            

            <Style x:Key="ToolbarImageOpacity" TargetType="Image" >
                <Setter Property="Height" Value="16" />
                <Setter Property="Width" Value="16" />
                <Setter Property="Margin" Value="2,0,2,0" />
                <Style.Triggers>
                    <Trigger Property="IsEnabled"  Value="False">
                        <Setter Property="Opacity" Value="0.3" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="10"/>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Border Grid.Row="0" Grid.RowSpan="3" Background="#FFEEF5FD" />

        <ToolBarTray Grid.Row="0" IsLocked="True">
            <ToolBar Style="{StaticResource ToolBarWithOverflowOnlyShowingWhenNeededStyle}">
                <ToolBar.Resources>
                    <local:TestExplorerGroupingBooleanConverter x:Key="OutcomeConverter" />
                    <local:TestExplorerGroupingBooleanConverter x:Key="LocationConverter" />
                    <local:TestExplorerGroupingBooleanConverter x:Key="CategoryConverter" />
                    <local:TestExplorerOutcomeFilterToBooleanConverter x:Key="OutcomeFilterConverter" />
                    <Style x:Key="ToolBarToggleStyle" TargetType="ToggleButton">
                        <Setter Property="Margin" Value="2" />
                        <Setter Property="BorderBrush" Value="{x:Static SystemColors.ActiveBorderBrush}" />
                    </Style>
                    <Style TargetType="Image">
                        <Setter Property="Height" Value="16" />
                    </Style>
                </ToolBar.Resources>

                <Button Command="{Binding RefreshCommand}" >
                    <Image Source="{StaticResource RefreshImage}" Style="{StaticResource ToolbarImageOpacity}" />
                </Button>

                <Separator />

                <Menu Background="Transparent">
                    <MenuItem VerticalAlignment="Center"
                              HeaderTemplate="{StaticResource MenuItemHeaderDropdownIndicatorTemplate}"
                              IsEnabled="{Binding Model.IsBusy, Converter={StaticResource InvertBoolValue}}">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource RunImage}" Style="{StaticResource ToolbarImageOpacity}" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <TextBlock Text="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_RunMenuButtonText}" />
                        </MenuItem.Header>
                        <MenuItem Command="{Binding RunAllTestsCommand}" Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_RunMenuAllTests}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource RunAllTestsImage}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Command="{Binding RunNotExecutedTestsCommand}" Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_RunMenuNotRunTests}" >
                            <MenuItem.Icon>
                                <Image Source="{StaticResource RunNotRunTestsImage}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding RunSelectedTestsCommand}" 
                                  CommandParameter="{Binding ElementName=TestGrid, Path=SelectedItems}"
                                  Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer ,Key=TestExplorer_RunMenuSelectedTests}" >
                            <MenuItem.Icon>
                                <Image Source="{StaticResource RunSelectedTestImage}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding RunInconclusiveTestsCommand}" Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_RunMenuInconclusiveTests}" >
                            <MenuItem.Icon>
                                <Image Source="{StaticResource RunInconclusiveTestsImage}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding RunPassedTestsCommand}" Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_RunMenuPassedTests}" >
                            <MenuItem.Icon>
                                <Image Source="{StaticResource RunPassedTestsImage}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding RunFailedTestsCommand}" Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_RunMenuFailedTests}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource RunFailedTestsImage}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator />
                        <MenuItem Command="{Binding RepeatLastRunCommand}" Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_RunMenuLastRunTests}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource RepeatLastRunImage}" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </Menu>

                <Separator />

                <Button Command="{Binding CancelTestRunCommand}" >
                    <Image Source="{StaticResource StopImage}" Style="{StaticResource ToolbarImageOpacity}" />
                </Button>

                <Separator />

                <Button Command="{Binding ResetResultsCommand}" >
                    <Image Source="{StaticResource ResetResultsImage}" Style="{StaticResource ToolbarImageOpacity}" />
                    <Button.ToolTip>
                        <TextBlock Text="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_ResetButtonTooltip}" />
                    </Button.ToolTip>
                </Button>

                <Separator />

                <Menu Background="Transparent">
                    <MenuItem VerticalAlignment="Center"
                              HeaderTemplate="{StaticResource MenuItemHeaderDropdownIndicatorTemplate}"
                              IsEnabled="{Binding Model.IsBusy, Converter={StaticResource InvertBoolValue}}">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource AddIcon}" Style="{StaticResource ToolbarImageOpacity}" />
                        </MenuItem.Icon>
                        <MenuItem.Header>
                            <TextBlock Text="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=Add}" />
                        </MenuItem.Header>
                        <MenuItem Command="{Binding AddTestModuleCommand}" Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_AddTestModule}">
                        </MenuItem>
                        <Separator />
                        <MenuItem Command="{Binding AddTestMethodCommand}" Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_AddTestMethod}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource AddTestMethodIcon}" />
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Command="{Binding AddErrorTestMethodCommand}" Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_AddExpectedErrorTestMethod}">
                            <MenuItem.Icon>
                                <Image Source="{StaticResource AddErrorTestMethodIcon}" />
                            </MenuItem.Icon>
                        </MenuItem>
                    </MenuItem>
                </Menu>

                <Separator />

                <Label Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GroupingGrid_GroupingStyle}" VerticalContentAlignment="Center" />

                <ToggleButton Style="{StaticResource ToolBarToggleStyle}"
                              ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GroupingStyle_ByOutcome}"
                              IsChecked="{Binding Path=TestGrouping, Converter={StaticResource OutcomeConverter}, ConverterParameter={x:Static local:TestExplorerGrouping.Outcome}}">
                    <Image Source="{StaticResource GroupByOutcomeImage}" />
                </ToggleButton>

                <ToggleButton Style="{StaticResource ToolBarToggleStyle}"
                              ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GroupingStyle_ByLocation}"
                              IsChecked="{Binding Path=TestGrouping, Converter={StaticResource LocationConverter}, ConverterParameter={x:Static local:TestExplorerGrouping.Location}}">
                    <Image Source="{StaticResource GroupByLocationImage}" />
                </ToggleButton>

                <ToggleButton Style="{StaticResource ToolBarToggleStyle}"
                              ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GroupingStyle_ByCategory}"
                              IsChecked="{Binding Path=TestGrouping, Converter={StaticResource CategoryConverter}, ConverterParameter={x:Static local:TestExplorerGrouping.Category}}">
                    <Image Source="{StaticResource GroupByCategoryImage}" />
                </ToggleButton>

                <Separator />

                <Image Source="{StaticResource FilterImage}" />

                <Label Content="{Resx Key=TestExplorer_Filter, ResxName=Rubberduck.Resources.UnitTesting.TestExplorer}" />
                <controls:SearchBox Width="100"
                                    Text="{Binding TestNameFilter, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}" />

                <Label Content="{Resx Key=TestExplorer_Outcome, ResxName=Rubberduck.Resources.UnitTesting.TestExplorer}" />
                <ToggleButton Style="{StaticResource ToolBarToggleStyle}"
                              ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=TestOutcome_Unknown}"
                              IsChecked="{Binding Path=OutcomeFilter, Converter={StaticResource OutcomeFilterConverter}, ConverterParameter={x:Static local:TestExplorerOutcomeFilter.Unknown}}" >
                    <Image Source="{StaticResource OutcomeUnknown}" />
                </ToggleButton>
                <ToggleButton Style="{StaticResource ToolBarToggleStyle}"
                              ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=TestOutcome_Fail}"
                              IsChecked="{Binding Path=OutcomeFilter, Converter={StaticResource OutcomeFilterConverter}, ConverterParameter={x:Static local:TestExplorerOutcomeFilter.Fail}}" >
                    <Image Source="{StaticResource OutcomeFail}" />
                </ToggleButton>
                <ToggleButton Style="{StaticResource ToolBarToggleStyle}"
                              ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=TestOutcome_Inconclusive}"
                              IsChecked="{Binding Path=OutcomeFilter, Converter={StaticResource OutcomeFilterConverter}, ConverterParameter={x:Static local:TestExplorerOutcomeFilter.Inconclusive}}" >
                    <Image Source="{StaticResource OutcomeInconclusive}" />
                </ToggleButton>
                <ToggleButton Style="{StaticResource ToolBarToggleStyle}"
                              ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=TestOutcome_Succeeded}"
                              IsChecked="{Binding Path=OutcomeFilter, Converter={StaticResource OutcomeFilterConverter}, ConverterParameter={x:Static local:TestExplorerOutcomeFilter.Succeeded}}" >
                    <Image Source="{StaticResource OutcomeSucceeded}" />
                </ToggleButton>

                <Separator />

                <Button Name="CollapseAll" Command="{Binding CollapseAllCommand}" Margin="2"
                        ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=InspectionResults_CollapseAll}">
                    <Image Source="{StaticResource CollapseAllImage}" Style="{StaticResource ToolbarImageOpacity}" />
                </Button>

                <Button Name="ExpandAll" Command="{Binding ExpandAllCommand}" Margin="2"
                        ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=InspectionResults_ExpandAll}">
                    <Image Source="{StaticResource ExpandAllImage}" Style="{StaticResource ToolbarImageOpacity}" />
                </Button>

                <Separator />

                <Button Command="{Binding CopyResultsCommand}">
                    <Image Source="{StaticResource CopyResultsImage}" Style="{StaticResource ToolbarImageOpacity}" />
                    <Button.ToolTip>
                        <TextBlock Text="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_CopyToolTip}" />
                    </Button.ToolTip>
                </Button>

                <Separator />

                <Button ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=Settings}" Command="{Binding OpenTestSettingsCommand}" BorderThickness="0" Background="Transparent">
                    <Image Source="{StaticResource SettingsImage}" />
                </Button>
            </ToolBar>
        </ToolBarTray>

        <ProgressBar Height="6"
                     Grid.Row="1"
                     Margin="2"
                     Background="DimGray" 
                     Maximum="{Binding Model.CurrentRunTestCount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" 
                     Value="{Binding Model.ExecutedCount, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
            <ProgressBar.Foreground>
                <SolidColorBrush Color="{Binding Model.ProgressBarColor, UpdateSourceTrigger=PropertyChanged}" />
            </ProgressBar.Foreground>
        </ProgressBar>

        <Border Grid.Row="2" Padding="2">
            <StackPanel Orientation="Horizontal">
                <StackPanel.Resources>
                    <converters:NonZeroToVisibilityConverter x:Key="NonZeroToVisibility"/>
                    <BitmapImage x:Key="IgnoredTestImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/minus-white.png" />
                    <BitmapImage x:Key="InconclusiveTestImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/exclamation.png" />
                    <BitmapImage x:Key="EasterEggTestImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/skull-mad.png" />
                    <Style x:Key="ResultsTestOutcomeStyle" TargetType="TextBlock" >
                        <Setter Property="Margin" Value="4,0,12,0"/>
                        <Setter Property="TextWrapping" Value="WrapWithOverflow"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                    <Style x:Key="TestOutcomeIconStyle" TargetType="Image">
                        <Setter Property="Height" Value="16"/>
                        <Setter Property="Width" Value="16" />
                        <Setter Property="VerticalAlignment" Value="Center"/>
                        <Setter Property="Margin" Value="3"/>
                    </Style>
                </StackPanel.Resources>
                <TextBlock Margin="2" Padding="4,2,4,2" FontWeight="Bold" VerticalAlignment="Center"
                           Text="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestOutcome_SummaryCaption}"/>
                <TextBlock Style="{StaticResource ResultsTestOutcomeStyle}" Text="{Binding Model.LastTestRunSummary, Mode=OneWay}"/>
                <StackPanel Orientation="Horizontal" Visibility="{Binding Model.LastTestFailedCount, Mode=OneWay, Converter={StaticResource NonZeroToVisibility}}" >
                    <Image Style="{StaticResource TestOutcomeIconStyle}" Source="{StaticResource RunFailedTestsImage}" Margin="4,0,4,0"/>
                    <TextBlock Style="{StaticResource ResultsTestOutcomeStyle}">
                        <Run Text="{Binding Model.LastTestFailedCount, Mode=OneWay}"/>
                        <Run Text="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestOutcome_Failed}"/>
                    </TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Visibility="{Binding Model.LastTestIgnoredCount, Mode=OneWay, Converter={StaticResource NonZeroToVisibility}}">
                    <Image Style="{StaticResource TestOutcomeIconStyle}" Source="{StaticResource IgnoredTestImage}" />
                    <TextBlock Style="{StaticResource ResultsTestOutcomeStyle}">
                        <Run Text="{Binding Model.LastTestIgnoredCount, Mode=OneWay}"/>
                        <Run Text="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestOutcome_Ignored}"/>
                    </TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Visibility="{Binding Model.LastTestInconclusiveCount, Mode=OneWay, Converter={StaticResource NonZeroToVisibility}}">
                    <Image Style="{StaticResource TestOutcomeIconStyle}" Source="{StaticResource InconclusiveTestImage}" />
                    <TextBlock Style="{StaticResource ResultsTestOutcomeStyle}">
                        <Run Text="{Binding Model.LastTestInconclusiveCount, Mode=OneWay}" />
                        <Run Text="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestOutcome_Inconclusive}"/>
                    </TextBlock>
                </StackPanel>
                <StackPanel Orientation="Horizontal" Visibility="{Binding Model.LastTestSucceededCount, Mode=OneWay, Converter={StaticResource NonZeroToVisibility}}">
                    <Image Style="{StaticResource TestOutcomeIconStyle}" Source="{StaticResource RunPassedTestsImage}" />
                    <TextBlock Style="{StaticResource ResultsTestOutcomeStyle}">
                        <Run Text="{Binding Model.LastTestSucceededCount, Mode=OneWay}"/>
                        <Run Text="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestOutcome_Succeeded}"/>
                    </TextBlock>
                </StackPanel>
            </StackPanel>
        </Border>

        <Border Grid.Row="3" Padding="2">
            <Grid>
                <controls:GroupingGrid x:Name="TestGrid"
                                       ItemsSource="{Binding Tests}"
                                       SelectionMode="Extended"
                                       ShowGroupingItemCount="True"
                                       InitialExpandedState="True">
                    <DataGrid.Columns>
                        <DataGridTemplateColumn Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_Outcome}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="vm:TestMethodViewModel">
                                    <Grid>
                                        <Image Height="16" Width="16">
                                            <Image.Source>
                                                <MultiBinding Converter="{StaticResource OutcomeIconConverter}">
                                                    <MultiBinding.Bindings>
                                                        <Binding RelativeSource="{RelativeSource Self}" Path="DataContext"/>
                                                        <Binding Path="Result.Outcome" />
                                                        <Binding Path="RunState" />
                                                    </MultiBinding.Bindings>
                                                </MultiBinding>
                                            </Image.Source>
                                        </Image>
                                    </Grid>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_QualifiedModuleName}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="vm:TestMethodViewModel">
                                    <TextBlock Text="{Binding Method.Declaration.QualifiedModuleName}" Margin="0,0,4,0"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_MethodName}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="vm:TestMethodViewModel">
                                    <TextBlock Text="{Binding Method.Declaration.IdentifierName}" Margin="0,0,4,0"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_CategoryName}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="vm:TestMethodViewModel">
                                    <TextBlock Text="{Binding Method.Category.Name}" Margin="0,0,4,0"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_Message}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="vm:TestMethodViewModel">
                                    <TextBlock Text="{Binding Result.Output}" Margin="0,0,4,0" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTemplateColumn Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_Duration}">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate DataType="vm:TestMethodViewModel">
                                    <TextBlock Text="{Binding Result.Duration, Converter={StaticResource FormattedTime}}" TextAlignment="Right" Margin="0,0,4,0" />
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                    <DataGrid.ContextMenu>
                        <ContextMenu>
                            <MenuItem Command="{Binding RunSingleTestCommand}" 
                                      Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_ContextMenuRunSingle}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource RunSingleTestImage}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItems}"
                                      Command="{Binding RunSelectedTestsCommand}" 
                                      Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_ContextMenuRunSelected}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource RunSelectedTestImage}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding RunSelectedGroupCommand}" 
                                      Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_ContextMenuRunGroup}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource RunSelectedGroupImage}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding RunAllTestsCommand}" 
                                      Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_ContextMenuRunAll}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource RunAllTestsImage}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding IgnoreTestCommand}"
                                      Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_TestToggle_Ignore}"
                                      Visibility="{Binding DisplayIgnoreTestLabel, Converter={StaticResource BoolToVisibility}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource IgnoreTestImage}" />
                                </MenuItem.Icon>
                            </MenuItem>
                            <MenuItem Command="{Binding UnignoreTestCommand}"
                                      Header="{Resx ResxName=Rubberduck.Resources.UnitTesting.TestExplorer, Key=TestExplorer_TestToggle_Unignore}"
                                      Visibility="{Binding DisplayUnignoreTestLabel, Converter={StaticResource BoolToVisibility}}">
                                <MenuItem.Icon>
                                    <Image Source="{StaticResource UnignoreTestImage}" />
                                </MenuItem.Icon>
                            </MenuItem>
                        </ContextMenu>
                    </DataGrid.ContextMenu>
                    <i:Interaction.Behaviors>
                        <local:TestExplorerRowMouseOverBehavior MouseOverTest="{Binding MouseOverTest, Mode=TwoWay}" MouseOverGroup="{Binding MouseOverGroup, Mode=TwoWay}" />
                        <controls:GroupItemExpandedBehavior ExpandedState="{Binding ExpandedState, Mode=TwoWay}" />
                    </i:Interaction.Behaviors>
                </controls:GroupingGrid>
            </Grid>
        </Border>
        <controls:BusyIndicator Grid.Row="3" Width="120" Height="120" Visibility="{Binding Model.IsRefreshing, Converter={StaticResource BoolToVisibility}}" />
    </Grid>
</UserControl>