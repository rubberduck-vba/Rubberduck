<UserControl x:Class="Rubberduck.UI.AddRemoveReferences.AddRemoveReferencesWindow"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:refs="clr-namespace:Rubberduck.AddRemoveReferences"
             xmlns:local="clr-namespace:Rubberduck.UI.AddRemoveReferences"
             xmlns:converters="clr-namespace:Rubberduck.UI.Converters"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:controls="clr-namespace:Rubberduck.UI.Controls"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             mc:Ignorable="d"
             d:DesignHeight="380" d:DesignWidth="600"
             d:DataContext="{d:DesignInstance local:AddRemoveReferencesViewModel}">
    <UserControl.Resources>
        <system:Int32 x:Key="ToolTipDelay">2000</system:Int32>

        <BitmapImage x:Key="BrowseIcon" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/folder-open.png" />
        <BitmapImage x:Key="LibraryIcon" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/node-select-all.png" />
        <BitmapImage x:Key="VbaProjectIcon" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Custom/PNG/ObjectClass.png" />
        <BitmapImage x:Key="PinnedIcon" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/pinned.png" />
        <BitmapImage x:Key="RecentIcon" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/clock-select.png" />
        <BitmapImage x:Key="AddIcon" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/arrow.png" />
        <BitmapImage x:Key="RemoveIcon" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/arrow-180.png" />

        <local:ReferenceStatusImageSourceConverter x:Key="StatusToIcon" />
        <local:PriorityButtonVisibilityConverter x:Key="PriorityButtonVisibility" />
        <local:PriorityButtonImageSourceConverter x:Key="PriorityButtonIcon" />
        <converters:BooleanToNonDimmedBrushConverter x:Key="BooleanToNonDimmed" />
        <converters:BoolToHiddenVisibilityConverter x:Key="ProjectVisibilityConverter" />

        <Style x:Key="DialogButtonStyle" TargetType="Button">
            <Setter Property="Margin" Value="5,0" />
            <Setter Property="Height" Value="24" />
            <Setter Property="Padding" Value="10,0" />
        </Style>
        <Style TargetType="{x:Type TabItem}">
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderThickness="0,0,0,2" BorderBrush="Transparent" Margin="2">
                            <ContentPresenter ContentSource="Header" Margin="2" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter TargetName="PART_Border" Property="BorderBrush" Value="Blue" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style  TargetType="{x:Type TabControl}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabControl}">
                        <Grid KeyboardNavigation.TabNavigation="Local">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>
                            <TabPanel 
                                Name="HeaderPanel"
                                Grid.Row="0"
                                Panel.ZIndex="1" 
                                Margin="0,0,4,-1" 
                                IsItemsHost="True"
                                KeyboardNavigation.TabIndex="1"
                                Background="Transparent" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False" />
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="SelectableText" TargetType="{x:Type TextBox}">
            <Setter Property="Margin" Value="2" />
            <Setter Property="Foreground" Value ="{x:Static SystemColors.GrayTextBrush}" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsReadOnly" Value="True" />
            <Setter Property="TextWrapping" Value="NoWrap" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style x:Key="BorderStyle" TargetType="{x:Type Border}">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{x:Static SystemColors.ActiveBorderBrush}" />
            <Setter Property="Background" Value="{x:Static SystemColors.ControlBrush}" />
            <Setter Property="Padding" Value="2" />
        </Style>
    </UserControl.Resources>
    <Grid Margin="0,0,0,0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="40" />
        </Grid.RowDefinitions>
        <DockPanel Grid.Row="0" Dock="Top" Background="{x:Static SystemColors.WindowBrush}">
            <Label DockPanel.Dock="Top" Content="{Binding ProjectCaption}" FontWeight="Bold" />
            <TextBlock DockPanel.Dock="Top" Text="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_SubCaption}" Margin="10,0,0,10" />
        </DockPanel>
        <Border Grid.Row="1" Background="{x:Static SystemColors.ControlLightBrush}">
            <Border BorderThickness="1" BorderBrush="{x:Static SystemColors.ControlLightBrush}" Margin="5">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TabControl Grid.Row="0" SelectedValue="{Binding SelectedFilter}" SelectedValuePath="Tag">
                        <TabItem IsSelected="True" Tag="ComTypes">
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{StaticResource LibraryIcon}" />
                                    <TextBlock Text="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_TypeLibs}" Margin="5,0,10,0" />
                                </StackPanel>
                            </TabItem.Header>
                        </TabItem>
                        <TabItem Tag="Projects" Visibility="{Binding ProjectsHidden, Converter={StaticResource ProjectVisibilityConverter}}">
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{StaticResource VbaProjectIcon}" />
                                    <TextBlock Text="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_Projects}" Margin="5,0,10,0" />
                                </StackPanel>
                            </TabItem.Header>
                        </TabItem>
                        <TabItem Tag="Pinned">
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{StaticResource PinnedIcon}" />
                                    <TextBlock Text="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_Pinned}" Margin="5,0,10,0" />
                                </StackPanel>
                            </TabItem.Header>
                        </TabItem>
                        <TabItem Tag="Recent">
                            <TabItem.Header>
                                <StackPanel Orientation="Horizontal">
                                    <Image Source="{StaticResource RecentIcon}" />
                                    <TextBlock Text="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_Recent}" Margin="5,0,10,0" />
                                </StackPanel>
                            </TabItem.Header>
                        </TabItem>
                    </TabControl>
                    <Button Grid.Row="0" Height="24" Background="{x:Static SystemColors.ControlBrush}" Margin="0,0,10,0"
                            BorderBrush="{x:Static SystemColors.ActiveBorderBrush}" Width="100" HorizontalAlignment="Right"
                            Command="{Binding BrowseCommand}">
                        <StackPanel Orientation="Horizontal">
                            <Image Margin="0,0,5,0" Height="16" Source="{StaticResource BrowseIcon}" />
                            <TextBlock Background="Transparent" Text="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_BrowseButtonText}" />
                        </StackPanel>
                    </Button>
                    <Grid Grid.Row="1" Margin="10,10,10,5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="50" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <Border Grid.Row="0" Grid.Column="0"
                                Background="{x:Static SystemColors.ControlBrush}"
                                BorderBrush="{x:Static SystemColors.ActiveBorderBrush}" 
                                BorderThickness="1" 
                                Margin="0,5" 
                                Padding="2">
                            <controls:SearchBox x:Name="SearchBox" Grid.Column="0"
                                                Background="{x:Static SystemColors.WindowBrush}"
                                                Width="Auto"
                                                Text="{Binding Search, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                Hint="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_SearchPlaceholder}" />
                        </Border>
                        <Border Grid.Row="1" Grid.Column="0">
                            <ListView Name="LibrarySelect" SelectedItem="{Binding SelectedLibrary, Mode=TwoWay}" 
                                      SelectionMode="Single"
                                      ItemsSource="{Binding AvailableReferences}" 
                                      HorizontalContentAlignment="Stretch"
                                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                      GotFocus="ListView_SynchronizeCurrentSelection_OnGotFocus">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="Height" Value="20" />
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate DataType="refs:ReferenceModel">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="50" />
                                            </Grid.ColumnDefinitions>
                                            <Button Grid.Column="0" 
                                                    Width="16" Height="16"
                                                    Background="Transparent"
                                                    BorderBrush="Transparent"
                                                    Command="{Binding DataContext.PinLibraryCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AddRemoveReferencesWindow}}}"
                                                    ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_PinToolTip}" ToolTipService.InitialShowDelay="{StaticResource ToolTipDelay}">
                                                <i:Interaction.Behaviors>
                                                    <controls:BindableListItemDrillThroughBehavior />
                                                </i:Interaction.Behaviors>
                                                <Image Source="{Binding Status, Converter={StaticResource StatusToIcon}}" />
                                            </Button>
                                            <TextBlock Grid.Column="1" Text="{Binding Description}" Margin="2,0" TextTrimming="CharacterEllipsis">
                                                <i:Interaction.Behaviors>
                                                    <controls:BindableListItemDrillThroughBehavior />
                                                </i:Interaction.Behaviors>
                                                <TextBlock.InputBindings>
                                                    <MouseBinding MouseAction="LeftDoubleClick"  
                                                                  Command="{Binding DataContext.AddCommand, UpdateSourceTrigger=PropertyChanged, ElementName=LibrarySelect}" />
                                                </TextBlock.InputBindings>
                                            </TextBlock>
                                            <TextBlock Grid.Column="2" Text="{Binding Version}" Margin="2,0" />
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Border>
                        <StackPanel Grid.Row="1" Grid.Column="1" VerticalAlignment="Center">
                            <Button Command="{Binding AddCommand}" Width="40" Height="20" Padding="0" Margin="0,1"
                                    ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_AddToolTip}"
                                    ToolTipService.InitialShowDelay="{StaticResource ToolTipDelay}">
                                <Image Margin="5,0" Source="{StaticResource AddIcon}" />
                            </Button>
                            <Button Command="{Binding RemoveCommand}" Width="40" Height="20" Padding="0" Margin="0,1"
                                    ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_RemoveToolTip}"
                                    ToolTipService.InitialShowDelay="{StaticResource ToolTipDelay}">
                                <Image Margin="5,0" Source="{StaticResource RemoveIcon}" />
                            </Button>
                        </StackPanel>
                        <Border Grid.Row="1" Grid.Column="2">
                            <ListView Name="ProjectSelect" 
                                      SelectedItem="{Binding SelectedReference, Mode=TwoWay}" 
                                      SelectionMode="Single"
                                      ItemsSource="{Binding ProjectReferences, NotifyOnTargetUpdated=True}" 
                                      ScrollViewer.HorizontalScrollBarVisibility="Auto"
                                      HorizontalContentAlignment="Stretch"
                                      GotFocus="ListView_SynchronizeCurrentSelection_OnGotFocus">
                                <ListView.ItemContainerStyle>
                                    <Style TargetType="ListViewItem">
                                        <Setter Property="Height" Value="20" />
                                    </Style>
                                </ListView.ItemContainerStyle>
                                <ListView.ItemTemplate>
                                    <DataTemplate DataType="refs:ReferenceModel">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="20" />
                                                <ColumnDefinition Width="20" />
                                                <ColumnDefinition Width="20" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="50" />
                                            </Grid.ColumnDefinitions>
                                            <Button Name="MoveUpButton" Grid.Column="0" Margin="1" Background="Transparent" BorderBrush="LightGray"
                                                    Command="{Binding DataContext.MoveUpCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AddRemoveReferencesWindow}}}"
                                                    ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_MoveUpToolTip}" ToolTipService.InitialShowDelay="{StaticResource ToolTipDelay}">
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}" >
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource PriorityButtonVisibility}" ConverterParameter="Up">
                                                                        <MultiBinding.Bindings>
                                                                            <Binding ElementName="ProjectSelect" Path="Items.Count"/>
                                                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}" Path="DataContext"/>
                                                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:AddRemoveReferencesWindow}}" Path="DataContext.BuiltInReferenceCount"/>
                                                                        </MultiBinding.Bindings>
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                                <Image>
                                                    <Image.Style>
                                                        <Style TargetType="{x:Type Image}">
                                                            <Setter Property="IsEnabled" Value="False" />
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}" Path="IsMouseOver"/>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="IsEnabled" Value="True" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                    <Image.Source>
                                                        <MultiBinding Converter="{StaticResource PriorityButtonIcon}" ConverterParameter="Up" NotifyOnSourceUpdated="True" Mode="OneWay">
                                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsEnabled" />
                                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}" Path="DataContext"/>
                                                        </MultiBinding>
                                                    </Image.Source>
                                                </Image>
                                                <i:Interaction.Behaviors>
                                                    <controls:BindableListItemDrillThroughBehavior />
                                                </i:Interaction.Behaviors>
                                            </Button>
                                            <Button Name="MoveDownButton" Grid.Column="1" Margin="1" Background="Transparent" BorderBrush="LightGray"
                                                Command="{Binding DataContext.MoveDownCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AddRemoveReferencesWindow}}}"
                                                ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_MoveDownToolTip}" ToolTipService.InitialShowDelay="{StaticResource ToolTipDelay}">
                                                <Button.Style>
                                                    <Style TargetType="{x:Type Button}">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                        <Style.Triggers>
                                                            <DataTrigger Value="True">
                                                                <DataTrigger.Binding>
                                                                    <MultiBinding Converter="{StaticResource PriorityButtonVisibility}" ConverterParameter="Down">
                                                                        <MultiBinding.Bindings>
                                                                            <Binding ElementName="ProjectSelect" Path="Items.Count"/>
                                                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}" Path="DataContext"/>
                                                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:AddRemoveReferencesWindow}}" Path="DataContext.BuiltInReferenceCount"/>
                                                                        </MultiBinding.Bindings>
                                                                    </MultiBinding>
                                                                </DataTrigger.Binding>
                                                                <Setter Property="Visibility" Value="Visible"/>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Button.Style>
                                                <Image>
                                                    <Image.Style>
                                                        <Style TargetType="{x:Type Image}">
                                                            <Setter Property="IsEnabled" Value="False" />
                                                            <Style.Triggers>
                                                                <DataTrigger Value="True">
                                                                    <DataTrigger.Binding>
                                                                        <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}" Path="IsMouseOver"/>
                                                                    </DataTrigger.Binding>
                                                                    <Setter Property="IsEnabled" Value="True" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Image.Style>
                                                    <Image.Source>
                                                        <MultiBinding Converter="{StaticResource PriorityButtonIcon}" ConverterParameter="Down" NotifyOnSourceUpdated="True" Mode="OneWay">
                                                            <Binding RelativeSource="{RelativeSource Self}" Path="IsEnabled" />
                                                            <Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type ListBoxItem}}" Path="DataContext"/>
                                                        </MultiBinding>
                                                    </Image.Source>
                                                </Image>
                                                <i:Interaction.Behaviors>
                                                    <controls:BindableListItemDrillThroughBehavior />
                                                </i:Interaction.Behaviors>
                                            </Button>
                                            <Button Grid.Column="2" Width="16" Height="16" Background="Transparent" BorderBrush="Transparent"
                                                    Command="{Binding DataContext.PinReferenceCommand, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:AddRemoveReferencesWindow}}}"
                                                    ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_PinToolTip}" ToolTipService.InitialShowDelay="{StaticResource ToolTipDelay}">
                                                <Image Source="{Binding Status, Converter={StaticResource StatusToIcon}}" />
                                                <i:Interaction.Behaviors>
                                                    <controls:BindableListItemDrillThroughBehavior />
                                                </i:Interaction.Behaviors>
                                            </Button>
                                            <TextBlock Grid.Column="3" Text="{Binding Description}" Margin="2,0" TextTrimming="CharacterEllipsis"
                                                       Foreground="{Binding IsUsed, Converter={StaticResource BooleanToNonDimmed}}">
                                                <i:Interaction.Behaviors>
                                                    <controls:BindableListItemDrillThroughBehavior />
                                                </i:Interaction.Behaviors>
                                                <TextBlock.InputBindings>
                                                    <MouseBinding MouseAction="LeftDoubleClick"  
                                                                  Command="{Binding DataContext.RemoveCommand, UpdateSourceTrigger=PropertyChanged, ElementName=ProjectSelect}" />
                                                </TextBlock.InputBindings>
                                            </TextBlock>
                                            <TextBlock Grid.Column="4" Text="{Binding Version}" Margin="2,0" Foreground="{Binding IsUsed, Converter={StaticResource BooleanToNonDimmed}}"/>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                        </Border>
                    </Grid>
                    <Border Style="{StaticResource BorderStyle}" Grid.Row="2" Margin="10,0,10,0">
                        <Border Style="{StaticResource BorderStyle}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="50" />
                                    <ColumnDefinition Width="100" />
                                </Grid.ColumnDefinitions>
                                <TextBox x:Name="Description"
                                         Grid.Row="0" Grid.Column="0" Style="{StaticResource SelectableText}" Text="{Binding CurrentSelection.Description, Mode=OneWay}" />
                                <Label Grid.Row="0" Grid.Column="1"  
                                       Foreground="{x:Static SystemColors.GrayTextBrush}" 
                                       VerticalAlignment="Center" 
                                       Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_Version}" />
                                <TextBox x:Name="Version"
                                         Grid.Row="0" Grid.Column="2" Style="{StaticResource SelectableText}" Text="{Binding CurrentSelection.Version, Mode=OneWay}" />
                                <Label Grid.Row="0" Grid.Column="3"  
                                       Foreground="{x:Static SystemColors.GrayTextBrush}" 
                                       VerticalAlignment="Center" 
                                       Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=References_Locale}" />
                                <TextBox x:Name="LocaleName"
                                         Grid.Row="0" Grid.Column="4" Style="{StaticResource SelectableText}" Text="{Binding CurrentSelection.LocaleName, Mode=OneWay}" />
                                <TextBox x:Name="FullPath"
                                         Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" Style="{StaticResource SelectableText}" Text="{Binding CurrentSelection.FullPath, Mode=OneWay}"  />
                            </Grid>
                        </Border>
                    </Border>
                </Grid>
            </Border>
        </Border>

        <Border Grid.Row="2" Background="{x:Static SystemColors.ControlDarkBrush}" Grid.IsSharedSizeScope="True">
            <Grid HorizontalAlignment="Right">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition SharedSizeGroup="DialogButtons" MinWidth="100" />
                    <ColumnDefinition SharedSizeGroup="DialogButtons" MinWidth="100" />
                    <ColumnDefinition SharedSizeGroup="DialogButtons" MinWidth="100" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Style="{StaticResource DialogButtonStyle}" 
                        Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=OK}" 
                        IsDefault="True"
                        Command="{Binding OkCommand}" />
                <Button Grid.Column="1" Style="{StaticResource DialogButtonStyle}" 
                        Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=CancelButtonText}" 
                        IsCancel="True"
                        Command="{Binding CancelCommand}" />
                <Button Grid.Column="2" Style="{StaticResource DialogButtonStyle}" 
                        Content="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=ApplyButtonText}" 
                        IsEnabled="{Binding IsProjectDirty}"
                        Command="{Binding ApplyCommand}"/>
            </Grid>
        </Border>
    </Grid>
</UserControl>
