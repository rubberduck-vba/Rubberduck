<UserControl x:Class="Rubberduck.UI.Inspections.InspectionResultsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:codeInspections="clr-namespace:Rubberduck.UI.Inspections"
             xmlns:controls="clr-namespace:Rubberduck.UI.Controls"
             xmlns:abstract1="clr-namespace:Rubberduck.Parsing.Inspections.Abstract;assembly=Rubberduck.Parsing"
             ResxExtension.DefaultResxName="Rubberduck.Resources.RubberduckUI" 
             Language="{UICulture}"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="500" 
             d:DataContext="{d:DesignInstance codeInspections:InspectionResultsViewModel}">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Controls/ToolBar.xaml"/>
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BoolToVisibility"/>

            <codeInspections:InspectionSeverityImageSourceConverter x:Key="SeverityIconConverter" />
            <codeInspections:InspectionImageSourceConverter x:Key="InspectionIconConverter" />
            <codeInspections:InspectionTypeConverter x:Key="InspectionTypeConverter" />

            <Style x:Key="IconMargin" TargetType="Image">
                <Setter Property="Margin" Value="4" />
            </Style>

            <CollectionViewSource x:Key="ResultsByInspectionType" Source="{Binding Results}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="Inspection" Converter="{StaticResource InspectionTypeConverter}" />
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>

            <CollectionViewSource x:Key="ResultsByModule" Source="{Binding Results}">
                <CollectionViewSource.GroupDescriptions>
                    <PropertyGroupDescription PropertyName="QualifiedSelection.QualifiedName" />
                </CollectionViewSource.GroupDescriptions>
            </CollectionViewSource>

            <BitmapImage x:Key="CopyResultsImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/document-copy.png" />
            <BitmapImage x:Key="SettingsImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/gear.png" />
            <BitmapImage x:Key="RefreshImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/arrow-circle-double.png" />
            <BitmapImage x:Key="FixImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/tick.png" />
            <BitmapImage x:Key="GroupByImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Custom/PNG/GroupBy.png" />
            <BitmapImage x:Key="FilterByHintImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/information-white.png" />
            <BitmapImage x:Key="FilterBySuggestionImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/information.png" />
            <BitmapImage x:Key="FilterByWarningImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/exclamation.png" />
            <BitmapImage x:Key="FilterByErrorImage" UriSource="pack://application:,,,/Rubberduck.Resources;component/Icons/Fugue/cross-circle.png" />
            
            <Style TargetType="Image">
                <Setter Property="Height" Value="16"/>
                <Setter Property="Width" Value="16" />
            </Style>


            <Style TargetType="MenuItem">
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid UseLayoutRounding="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*" MinHeight="64" />
            <RowDefinition Height="5"/>
            <RowDefinition Height="Auto" MinHeight="48"/>
        </Grid.RowDefinitions>

        <ToolBarTray Grid.Row="0" IsLocked="True">
            <ToolBar Style="{StaticResource ToolBarWithOverflowOnlyShowingWhenNeededStyle}">

                <Button Command="{Binding RefreshCommand}">
                    <Image Source="{StaticResource RefreshImage}" />
                </Button>

                <Separator />
                <Menu>
                    <MenuItem VerticalAlignment="Center" 
                          Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=Fix}"
                          ItemsSource="{Binding QuickFixes}">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource FixImage}" />
                        </MenuItem.Icon>
                        <MenuItem.ItemContainerStyle>
                            <Style TargetType="{x:Type MenuItem}">
                                <Setter Property="Command" Value="{Binding Path=DataContext.QuickFixCommand, RelativeSource={RelativeSource FindAncestor, AncestorType=Menu, AncestorLevel=1}}" />
                                <Setter Property="CommandParameter" Value="{Binding Fix}" />
                                <Setter Property="Header" Value="{Binding Description}" />
                            </Style>
                        </MenuItem.ItemContainerStyle>
                    </MenuItem>
                </Menu>

                <Menu>
                    <MenuItem Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GroupingGrid_GroupingStyle}">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource GroupByImage}" />
                        </MenuItem.Icon>
                        
                        <MenuItem x:Name="GroupByInspectionType"
                                  Style="{DynamicResource MenuItemStyle}"
                                  VerticalAlignment="Center" 
                                  Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GroupingStyle_ByInspectionType}"
                                  IsChecked="{Binding GroupByInspectionType, UpdateSourceTrigger=PropertyChanged}" 
                                  IsCheckable="True"
                                  Command="{Binding SetInspectionTypeGroupingCommand}"
                                  CommandParameter="{Binding ElementName=GroupByInspectionType, Path=IsChecked}"
                                  controls:MenuItemGroup.GroupName="InspectionsResults_GroupingStyle" />
                        <MenuItem x:Name="GroupByLocation"
                                  Style="{DynamicResource MenuItemStyle}"
                                  VerticalAlignment="Center" 
                                  Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=GroupingStyle_ByLocation}" 
                                  IsChecked="{Binding GroupByLocation, UpdateSourceTrigger=PropertyChanged}"
                                  Command="{Binding SetLocationGroupingCommand}"
                                  CommandParameter="{Binding ElementName=GroupByLocation, Path=IsChecked}"
                                  IsCheckable="True"
                                  controls:MenuItemGroup.GroupName="InspectionsResults_GroupingStyle" />
                    </MenuItem>
                </Menu>

                <Separator />

                <Menu>
                    <MenuItem x:Name="FilterInspectionByError"
                              Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=InspectionResults_FilterByError}"
                              IsChecked="{Binding FilterInspectionsByError, UpdateSourceTrigger=PropertyChanged}"
                              IsCheckable="True"
                              controls:MenuItemGroup.GroupName="InspectionResults_FilterBy">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource FilterByErrorImage}" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem x:Name="FilterInspectionByWarning"
                              Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=InspectionResults_FilterByWarning}"
                              IsChecked="{Binding FilterInspectionsByWarning, UpdateSourceTrigger=PropertyChanged}"
                              IsCheckable="True"
                              controls:MenuItemGroup.GroupName="InspectionResults_FilterBy">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource FilterByWarningImage}" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem x:Name="FilterInspectionBySuggestion"
                              Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=InspectionResults_FilterBySuggestion}"
                              IsChecked="{Binding FilterInspectionsBySuggestion, UpdateSourceTrigger=PropertyChanged}"
                              IsCheckable="True"
                              controls:MenuItemGroup.GroupName="InspectionResults_FilterBy">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource FilterBySuggestionImage}" />
                        </MenuItem.Icon>
                    </MenuItem>

                    <MenuItem x:Name="FilterInspectionByHint"
                              Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=InspectionResults_FilterByHint}"
                              IsChecked="{Binding FilterInspectionsByHint, UpdateSourceTrigger=PropertyChanged}"
                              IsCheckable="True"
                              controls:MenuItemGroup.GroupName="InspectionResults_FilterBy">
                        <MenuItem.Icon>
                            <Image Source="{StaticResource FilterByHintImage}" />
                        </MenuItem.Icon>
                    </MenuItem>
                </Menu>

                <Separator />

                <Button Command="{Binding CopyResultsCommand}">
                    <Image Source="{StaticResource CopyResultsImage}" />
                    <Button.ToolTip>
                        <TextBlock Text="{Resx ResxName=Rubberduck.Resources.CodeExplorer.CodeExplorerUI, Key=CodeExplorer_CopyToolTip}" />
                    </Button.ToolTip>
                </Button>
                <Button ToolTip="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=Settings}" Command="{Binding OpenInspectionSettings}" BorderThickness="0" Background="Transparent">
                    <Image Source="{StaticResource SettingsImage}" />
                </Button>
            </ToolBar>
        </ToolBarTray>

        <controls:GroupingGrid x:Name="InspectionResultsGrid"
                               Grid.Row="1"
                               ShowGroupingItemCount="True"
                               SelectedItem="{Binding SelectedItem}"
                               ItemsSource="{Binding Source={StaticResource ResultsByInspectionType}, IsAsync=True}"
                               Visibility="{Binding IsChecked, ElementName=GroupByInspectionType, Converter={StaticResource BoolToVisibility}}"
                               VirtualizingPanel.IsVirtualizingWhenGrouping="True">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=CodeInspectionResults_Type}" SortDirection="{Binding}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="abstract1:IInspectionResult">
                            <Image Source="{Binding Inspection, Converter={StaticResource InspectionIconConverter}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=CodeInspectionResults_Issue}" Binding="{Binding Description}" />
                <DataGridTextColumn Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=CodeInspectionResults_Location}" Binding="{Binding QualifiedSelection.QualifiedName}" />
            </DataGrid.Columns>
        </controls:GroupingGrid>

        <controls:GroupingGrid Grid.Row="1"
                               ShowGroupingItemCount="True"
                               SelectedItem="{Binding SelectedItem}"
                               ItemsSource="{Binding Source={StaticResource ResultsByModule}, IsAsync=True}"
                               Visibility="{Binding IsChecked, ElementName=GroupByLocation, Converter={StaticResource BoolToVisibility}}"
                               VirtualizingPanel.IsVirtualizingWhenGrouping="True">
            <DataGrid.Columns>
                <DataGridTemplateColumn Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=CodeInspectionResults_Type}">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="abstract1:IInspectionResult">
                            <Image Source="{Binding Inspection, Converter={StaticResource InspectionIconConverter}}" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=CodeInspectionResults_Issue}" Binding="{Binding Description}" />
                <DataGridTextColumn Header="{Resx ResxName=Rubberduck.Resources.RubberduckUI, Key=CodeInspectionResults_Location}" Binding="{Binding QualifiedSelection.QualifiedName}" />
            </DataGrid.Columns>
        </controls:GroupingGrid>

        <controls:EmptyUIRefresh Grid.Row="1" Visibility="{Binding EmptyUIRefreshVisibility}"/>

        <controls:BusyIndicator Grid.Row="1" Width="120" Height="120" Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibility}}" />

        <GridSplitter Grid.Row="2" Height="5" ShowsPreview="True" Cursor="SizeNS" HorizontalAlignment="Stretch"/>

        <Border Grid.Row="3" BorderThickness="0,1,0,0" BorderBrush="DimGray">

            <StackPanel Orientation="Vertical" MinHeight="48" Background="WhiteSmoke">
                
                <Grid Margin="4" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="25" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <Image Style="{StaticResource IconMargin}" VerticalAlignment="Top" Grid.Column="0"
                           Source="{Binding SelectedItem.Inspection.Severity, Converter={StaticResource SeverityIconConverter}}"/>
                    <TextBlock Grid.Column="1" Margin="4" Text="{Binding SelectedItem.Inspection.Description}" FontWeight="Bold" TextWrapping="WrapWithOverflow"/>
                </Grid>

                <TextBlock Margin="4" Text="{Binding SelectedItem.Inspection.Meta}" FontSize="10" TextWrapping="WrapWithOverflow"/>
                <TextBlock Margin="8" Text="{Binding SelectedItem.QualifiedSelection}" FontSize="10" TextWrapping="WrapWithOverflow" />

                <WrapPanel>
                    <controls:LinkButton Margin="4"
                                         Visibility="{Binding CanExecuteQuickFixInProcedure, Converter={StaticResource BoolToVisibility}}"
                                         Command="{Binding QuickFixInProcedureCommand}"
                                         Content="{Resx ResxName=Rubberduck.Resources.Inspections.InspectionsUI, Key=QuickFix_ThisProcedure}" />
                    <controls:LinkButton Margin="4"
                                         Visibility="{Binding CanExecuteQuickFixInModule, Converter={StaticResource BoolToVisibility}}"
                                         Command="{Binding QuickFixInModuleCommand}"
                                         Content="{Resx ResxName=Rubberduck.Resources.Inspections.InspectionsUI, Key=QuickFix_ThisModule}" />
                    <controls:LinkButton Margin="4"
                                         Visibility="{Binding CanExecuteQuickFixInProject, Converter={StaticResource BoolToVisibility}}"
                                         Command="{Binding QuickFixInProjectCommand}"
                                         Content="{Resx ResxName=Rubberduck.Resources.Inspections.InspectionsUI, Key=QuickFix_ThisProject}" />
                    <controls:LinkButton Margin="4"
                                         Visibility="{Binding CanExecuteQuickFixInProject, Converter={StaticResource BoolToVisibility}}"
                                         Command="{Binding QuickFixInAllProjectsCommand}"
                                         Content="{Resx ResxName=Rubberduck.Resources.Inspections.InspectionsUI, Key=QuickFix_All}" />
                    <controls:LinkButton Margin="4"
                            Visibility="{Binding CanDisableInspection, Converter={StaticResource BoolToVisibility}}"
                            Command="{Binding DisableInspectionCommand}"
                            Content="{Resx ResxName=Rubberduck.Resources.Inspections.InspectionsUI, Key=DisableThisInspection}" />
                </WrapPanel>
            </StackPanel>
        </Border>
        
    </Grid>
</UserControl>
