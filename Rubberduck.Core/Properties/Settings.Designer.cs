//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Rubberduck.Properties {
    
    
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.Editors.SettingsDesigner.SettingsSingleFileGenerator", "15.8.0.0")]
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        private static Settings defaultInstance = ((Settings)(global::System.Configuration.ApplicationSettingsBase.Synchronized(new Settings())));
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>R</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>CodePaneRefactorRenameCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_CodePaneRefactorRenameCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_CodePaneRefactorRenameCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>F</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>RefactorEncapsulateFieldCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_RefactorEncapsulateFieldCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_RefactorEncapsulateFieldCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>M</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>RefactorExtractMethodCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_RefactorExtractMethodCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_RefactorExtractMethodCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>C</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>RefactorMoveCloserToUsageCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_RefactorMoveCloserToUsageCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_RefactorMoveCloserToUsageCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>R</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>CodeExplorerCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_CodeExplorerCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_CodeExplorerCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>E</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>ExportAllCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_ExportAllCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_ExportAllCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>T</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>FindSymbolCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_FindSymbolCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_FindSymbolCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>M</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>IndentCurrentModuleCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_IndentCurrentModuleCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_IndentCurrentModuleCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>P</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>IndentCurrentProcedureCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_IndentCurrentProcedureCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_IndentCurrentProcedureCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>I</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>InspectionResultsCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_InspectionResultsCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_InspectionResultsCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>`</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>false</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>ReparseCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_ReparseCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_ReparseCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<HotkeySetting xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Key1>T</Key1>
  <IsEnabled>true</IsEnabled>
  <HasShiftModifier>true</HasShiftModifier>
  <HasAltModifier>false</HasAltModifier>
  <HasCtrlModifier>true</HasCtrlModifier>
  <CommandTypeName>TestExplorerCommand</CommandTypeName>
</HotkeySetting>")]
        public global::Rubberduck.Settings.HotkeySetting DefaultHotkey_TestExplorerCommand {
            get {
                return ((global::Rubberduck.Settings.HotkeySetting)(this["DefaultHotkey_TestExplorerCommand"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ToDoMarker xmlns:xsi=\"http://www.w3.org" +
            "/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" Text=\"TOD" +
            "O\" />")]
        public global::Rubberduck.Settings.ToDoMarker ToDoMarker_ToDo {
            get {
                return ((global::Rubberduck.Settings.ToDoMarker)(this["ToDoMarker_ToDo"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ToDoMarker xmlns:xsi=\"http://www.w3.org" +
            "/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" Text=\"NOT" +
            "E\" />")]
        public global::Rubberduck.Settings.ToDoMarker ToDoMarker_Note {
            get {
                return ((global::Rubberduck.Settings.ToDoMarker)(this["ToDoMarker_Note"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<ToDoMarker xmlns:xsi=\"http://www.w3.org" +
            "/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" Text=\"BUG" +
            "\" />")]
        public global::Rubberduck.Settings.ToDoMarker ToDoMarker_Bug {
            get {
                return ((global::Rubberduck.Settings.ToDoMarker)(this["ToDoMarker_Bug"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<WindowSettings xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <CodeExplorerVisibleOnStartup>false</CodeExplorerVisibleOnStartup>
  <CodeInspectionsVisibleOnStartup>false</CodeInspectionsVisibleOnStartup>
  <TestExplorerVisibleOnStartup>false</TestExplorerVisibleOnStartup>
  <TodoExplorerVisibleOnStartup>false</TodoExplorerVisibleOnStartup>
  <CodeExplorer_SortByName>true</CodeExplorer_SortByName>
  <CodeExplorer_SortByCodeOrder>false</CodeExplorer_SortByCodeOrder>
  <CodeExplorer_GroupByType>false</CodeExplorer_GroupByType>
</WindowSettings>")]
        public global::Rubberduck.Settings.WindowSettings WindowSettings {
            get {
                return ((global::Rubberduck.Settings.WindowSettings)(this["WindowSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<UnitTestSettings xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <BindingMode>LateBinding</BindingMode>
  <AssertMode>StrictAssert</AssertMode>
  <ModuleInit>true</ModuleInit>
  <MethodInit>true</MethodInit>
  <DefaultTestStubInNewModule>false</DefaultTestStubInNewModule>
</UnitTestSettings>")]
        public global::Rubberduck.Settings.UnitTestSettings UnitTestSettings {
            get {
                return ((global::Rubberduck.Settings.UnitTestSettings)(this["UnitTestSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute(@"<?xml version=""1.0"" encoding=""utf-16""?>
<GeneralSettings xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xmlns:xsd=""http://www.w3.org/2001/XMLSchema"">
  <Language Code=""en-US"" />
  <CanShowSplash>true</CanShowSplash>
  <CanCheckVersion>true</CanCheckVersion>
  <CompileBeforeParse>true</CompileBeforeParse>
  <IsSmartIndenterPrompted>false</IsSmartIndenterPrompted>
  <IsAutoSaveEnabled>false</IsAutoSaveEnabled>
  <AutoSavePeriod>10</AutoSavePeriod>
  <UserEditedLogLevel>false</UserEditedLogLevel>
  <MinimumLogLevel>0</MinimumLogLevel>
  <EnableExperimentalFeatures />
</GeneralSettings>")]
        public global::Rubberduck.Settings.GeneralSettings GeneralSettings {
            get {
                return ((global::Rubberduck.Settings.GeneralSettings)(this["GeneralSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<CodeInspectionSettings xmlns:xsi=\"http:" +
            "//www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchem" +
            "a\">\r\n  <CodeInspections>\r\n    <CodeInspection Name=\"BooleanAssignedInIfElseInspe" +
            "ction\" Severity=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" /" +
            ">\r\n    <CodeInspection Name=\"ObsoleteErrorSyntaxInspection\" Severity=\"Suggestion" +
            "\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"StopKeywo" +
            "rdInspection\" Severity=\"Suggestion\" InspectionType=\"CodeQualityIssues\" />\r\n    <" +
            "CodeInspection Name=\"UnhandledOnErrorResumeNextInspection\" Severity=\"Warning\" In" +
            "spectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"EmptyStringLitera" +
            "lInspection\" Severity=\"Warning\" InspectionType=\"LanguageOpportunities\" />\r\n    <" +
            "CodeInspection Name=\"ImplicitByRefModifierInspection\" Severity=\"Hint\" Inspection" +
            "Type=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"MissingAttributeInspectio" +
            "n\" Severity=\"Warning\" InspectionType=\"RubberduckOpportunities\" />\r\n    <CodeInsp" +
            "ection Name=\"FunctionReturnValueNotUsedInspection\" Severity=\"Warning\" Inspection" +
            "Type=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"IllegalAnnotationInspecti" +
            "on\" Severity=\"Error\" InspectionType=\"RubberduckOpportunities\" />\r\n    <CodeInspe" +
            "ction Name=\"RedundantByRefModifierInspection\" Severity=\"DoNotShow\" InspectionTyp" +
            "e=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"MissingAnnotationArgumentIns" +
            "pection\" Severity=\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspec" +
            "tion Name=\"ModuleScopeDimKeywordInspection\" Severity=\"Suggestion\" InspectionType" +
            "=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"MultilineParameterInspect" +
            "ion\" Severity=\"Suggestion\" InspectionType=\"MaintainabilityAndReadabilityIssues\" " +
            "/>\r\n    <CodeInspection Name=\"MultipleDeclarationsInspection\" Severity=\"Warning\"" +
            " InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Na" +
            "me=\"ObsoleteCallStatementInspection\" Severity=\"Suggestion\" InspectionType=\"Langu" +
            "ageOpportunities\" />\r\n    <CodeInspection Name=\"ObsoleteCommentSyntaxInspection\"" +
            " Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspe" +
            "ction Name=\"ObsoleteLetStatementInspection\" Severity=\"Suggestion\" InspectionType" +
            "=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"OptionBaseInspection\" Sev" +
            "erity=\"Hint\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeI" +
            "nspection Name=\"RedundantOptionInspection\" Severity=\"Hint\" InspectionType=\"Langu" +
            "ageOpportunities\" />\r\n    <CodeInspection Name=\"OptionExplicitInspection\" Severi" +
            "ty=\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"Proc" +
            "edureCanBeWrittenAsFunctionInspection\" Severity=\"Suggestion\" InspectionType=\"Lan" +
            "guageOpportunities\" />\r\n    <CodeInspection Name=\"ApplicationWorksheetFunctionIn" +
            "spection\" Severity=\"Suggestion\" InspectionType=\"CodeQualityIssues\" />\r\n    <Code" +
            "Inspection Name=\"AssignedByValParameterInspection\" Severity=\"Warning\" Inspection" +
            "Type=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"EmptyModuleInspection\" Se" +
            "verity=\"Hint\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <Code" +
            "Inspection Name=\"LineLabelNotUsedInspection\" Severity=\"Warning\" InspectionType=\"" +
            "CodeQualityIssues\" />\r\n    <CodeInspection Name=\"IntegerDataTypeInspection\" Seve" +
            "rity=\"Hint\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"Sha" +
            "dowedDeclarationInspection\" Severity=\"DoNotShow\" InspectionType=\"CodeQualityIssu" +
            "es\" />\r\n    <CodeInspection Name=\"ConstantNotUsedInspection\" Severity=\"Warning\" " +
            "InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"DefaultProjectN" +
            "ameInspection\" Severity=\"Suggestion\" InspectionType=\"MaintainabilityAndReadabili" +
            "tyIssues\" />\r\n    <CodeInspection Name=\"EmptyCaseBlockInspection\" Severity=\"Warn" +
            "ing\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspectio" +
            "n Name=\"EmptyDoWhileBlockInspection\" Severity=\"Suggestion\" InspectionType=\"Maint" +
            "ainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"EmptyElseBlockInsp" +
            "ection\" Severity=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" " +
            "/>\r\n    <CodeInspection Name=\"EmptyForEachBlockInspection\" Severity=\"Warning\" In" +
            "spectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=" +
            "\"EmptyForLoopBlockInspection\" Severity=\"Warning\" InspectionType=\"Maintainability" +
            "AndReadabilityIssues\" />\r\n    <CodeInspection Name=\"EmptyIfBlockInspection\" Seve" +
            "rity=\"Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <Cod" +
            "eInspection Name=\"EmptyWhileWendBlockInspection\" Severity=\"Warning\" InspectionTy" +
            "pe=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"Encapsula" +
            "tePublicFieldInspection\" Severity=\"Suggestion\" InspectionType=\"MaintainabilityAn" +
            "dReadabilityIssues\" />\r\n    <CodeInspection Name=\"HostSpecificExpressionInspecti" +
            "on\" Severity=\"Warning\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspe" +
            "ction Name=\"HungarianNotationInspection\" Severity=\"Suggestion\" InspectionType=\"M" +
            "aintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"ImplicitActive" +
            "SheetReferenceInspection\" Severity=\"Warning\" InspectionType=\"LanguageOpportuniti" +
            "es\" />\r\n    <CodeInspection Name=\"ImplicitActiveWorkbookReferenceInspection\" Sev" +
            "erity=\"Warning\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection N" +
            "ame=\"ImplicitDefaultMemberAssignmentInspection\" Severity=\"Suggestion\" Inspection" +
            "Type=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"ImplicitPublicMemberI" +
            "nspection\" Severity=\"Hint\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeI" +
            "nspection Name=\"ImplicitVariantReturnTypeInspection\" Severity=\"Hint\" InspectionT" +
            "ype=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"MemberNotOnInterfaceIn" +
            "spection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeIns" +
            "pection Name=\"MoveFieldCloserToUsageInspection\" Severity=\"Hint\" InspectionType=\"" +
            "MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"NonReturningF" +
            "unctionInspection\" Severity=\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n    <" +
            "CodeInspection Name=\"ObjectVariableNotSetInspection\" Severity=\"Error\" Inspection" +
            "Type=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"ObsoleteGlobalInspection\"" +
            " Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspe" +
            "ction Name=\"ObsoleteTypeHintInspection\" Severity=\"Suggestion\" InspectionType=\"La" +
            "nguageOpportunities\" />\r\n    <CodeInspection Name=\"ParameterCanBeByValInspection" +
            "\" Severity=\"Suggestion\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r" +
            "\n    <CodeInspection Name=\"ParameterNotUsedInspection\" Severity=\"Warning\" Inspec" +
            "tionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"ProcedureNotUsedInspe" +
            "ction\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspec" +
            "tion Name=\"SelfAssignedDeclarationInspection\" Severity=\"Suggestion\" InspectionTy" +
            "pe=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"UnassignedVariableUsageInsp" +
            "ection\" Severity=\"Error\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspect" +
            "ion Name=\"UndeclaredVariableInspection\" Severity=\"Error\" InspectionType=\"CodeQua" +
            "lityIssues\" />\r\n    <CodeInspection Name=\"UntypedFunctionUsageInspection\" Severi" +
            "ty=\"Hint\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"U" +
            "seMeaningfulNameInspection\" Severity=\"Suggestion\" InspectionType=\"Maintainabilit" +
            "yAndReadabilityIssues\" />\r\n    <CodeInspection Name=\"VariableNotAssignedInspecti" +
            "on\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspectio" +
            "n Name=\"VariableNotUsedInspection\" Severity=\"Warning\" InspectionType=\"CodeQualit" +
            "yIssues\" />\r\n    <CodeInspection Name=\"VariableTypeNotDeclaredInspection\" Severi" +
            "ty=\"Warning\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name" +
            "=\"WriteOnlyPropertyInspection\" Severity=\"Suggestion\" InspectionType=\"CodeQuality" +
            "Issues\" />\r\n    <CodeInspection Name=\"DefTypeStatementInspection\" Severity=\"Sugg" +
            "estion\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"Ste" +
            "pIsNotSpecifiedInspection\" Severity=\"DoNotShow\" InspectionType=\"LanguageOpportun" +
            "ities\" />\r\n    <CodeInspection Name=\"StepOneIsRedundantInspection\" Severity=\"Hin" +
            "t\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspection Name=\"SheetAcc" +
            "essedUsingStringInspection\" Severity=\"Suggestion\" InspectionType=\"LanguageOpport" +
            "unities\" />\r\n    <CodeInspection Name=\"ObsoleteMemberUsageInspection\" Severity=\"" +
            "Warning\" InspectionType=\"MaintainabilityAndReadabilityIssues\" />\r\n    <CodeInspe" +
            "ction Name=\"ObsoleteCallingConventionInspection\" Severity=\"Warning\" InspectionTy" +
            "pe=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"DuplicatedAnnotationInspect" +
            "ion\" Severity=\"Error\" InspectionType=\"RubberduckOpportunities\" />\r\n    <CodeInsp" +
            "ection Name=\"ModuleWithoutFolderInspection\" Severity=\"Suggestion\" InspectionType" +
            "=\"RubberduckOpportunities\" />\r\n    <CodeInspection Name=\"OnLocalErrorInspection\"" +
            " Severity=\"Suggestion\" InspectionType=\"LanguageOpportunities\" />\r\n    <CodeInspe" +
            "ction Name=\"IsMissingOnInappropriateArgumentInspection\" Severity=\"Warning\" Inspe" +
            "ctionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"UnderscoreInPublicClassModuleMem" +
            "berInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" />\r\n    <CodeInspection Name=\"IsMissingWithNonArgu" +
            "mentParameterInspection\" Severity=\"Warning\" InspectionType=\"CodeQualityIssues\" /" +
            ">\r\n    <CodeInspection Name=\"AssignmentNotUsedInspection\" Severity=\"Suggestion\" " +
            "InspectionType=\"CodeQualityIssues\" />\r\n  </CodeInspections>\r\n  <WhitelistedIdent" +
            "ifiers />\r\n  <RunInspectionsOnSuccessfulParse>true</RunInspectionsOnSuccessfulPa" +
            "rse>\r\n</CodeInspectionSettings>")]
        public global::Rubberduck.Settings.CodeInspectionSettings CodeInspectionSettings {
            get {
                return ((global::Rubberduck.Settings.CodeInspectionSettings)(this["CodeInspectionSettings"]));
            }
        }
        
        [global::System.Configuration.ApplicationScopedSettingAttribute()]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.Configuration.DefaultSettingValueAttribute("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<AutoCompleteSettings xmlns:xsi=\"http://" +
            "www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\"" +
            " IsEnabled=\"false\" CompleteBlockOnTab=\"true\" CompleteBlockOnEnter=\"true\" EnableS" +
            "martConcat=\"true\">\r\n  <AutoCompletes>\r\n    <AutoComplete Key=\"AutoCompleteClosin" +
            "gBrace\" IsEnabled=\"true\" />\r\n    <AutoComplete Key=\"AutoCompleteClosingBracket\" " +
            "IsEnabled=\"true\" />\r\n    <AutoComplete Key=\"AutoCompleteClosingParenthese\" IsEna" +
            "bled=\"true\" />\r\n    <AutoComplete Key=\"AutoCompleteClosingString\" IsEnabled=\"tru" +
            "e\" />\r\n    <AutoComplete Key=\"AutoCompleteDoBlock\" IsEnabled=\"true\" />\r\n    <Aut" +
            "oComplete Key=\"AutoCompleteEnumBlock\" IsEnabled=\"true\" />\r\n    <AutoComplete Key" +
            "=\"AutoCompleteForBlock\" IsEnabled=\"true\" />\r\n    <AutoComplete Key=\"AutoComplete" +
            "FunctionBlock\" IsEnabled=\"true\" />\r\n    <AutoComplete Key=\"AutoCompleteIfBlock\" " +
            "IsEnabled=\"true\" />\r\n    <AutoComplete Key=\"AutoCompleteOnErrorResumeNextBlock\" " +
            "IsEnabled=\"true\" />\r\n    <AutoComplete Key=\"AutoCompletePrecompilerIfBlock\" IsEn" +
            "abled=\"true\" />\r\n    <AutoComplete Key=\"AutoCompletePropertyBlock\" IsEnabled=\"tr" +
            "ue\" />\r\n    <AutoComplete Key=\"AutoCompleteSelectBlock\" IsEnabled=\"true\" />\r\n   " +
            " <AutoComplete Key=\"AutoCompleteSubBlock\" IsEnabled=\"true\" />\r\n    <AutoComplete" +
            " Key=\"AutoCompleteTypeBlock\" IsEnabled=\"true\" />\r\n    <AutoComplete Key=\"AutoCom" +
            "pleteWhileBlock\" IsEnabled=\"true\" />\r\n    <AutoComplete Key=\"AutoCompleteWithBlo" +
            "ck\" IsEnabled=\"true\" />\r\n  </AutoCompletes>\r\n</AutoCompleteSettings>")]
        public global::Rubberduck.Settings.AutoCompleteSettings AutoCompleteSettings {
            get {
                return ((global::Rubberduck.Settings.AutoCompleteSettings)(this["AutoCompleteSettings"]));
            }
        }
    }
}
