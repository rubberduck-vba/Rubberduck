//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\hosch\Documents\Visual Studio 2015\Projects\Rubberduck\Rubberduck.Parsing\Preprocessing\VBADate.g4 by ANTLR 4.3

// Unreachable code detected

using Antlr4.Runtime.Misc;

#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Rubberduck.Parsing.Preprocessing {
    using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;

    /// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="VBADateParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public interface IVBADateListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBADateParser.dateValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateValue([NotNull] VBADateParser.DateValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBADateParser.dateValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateValue([NotNull] VBADateParser.DateValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBADateParser.dateSeparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateSeparator([NotNull] VBADateParser.DateSeparatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBADateParser.dateSeparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateSeparator([NotNull] VBADateParser.DateSeparatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBADateParser.englishMonthAbbreviation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnglishMonthAbbreviation([NotNull] VBADateParser.EnglishMonthAbbreviationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBADateParser.englishMonthAbbreviation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnglishMonthAbbreviation([NotNull] VBADateParser.EnglishMonthAbbreviationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBADateParser.dateOrTime"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateOrTime([NotNull] VBADateParser.DateOrTimeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBADateParser.dateOrTime"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateOrTime([NotNull] VBADateParser.DateOrTimeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBADateParser.englishMonthName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnglishMonthName([NotNull] VBADateParser.EnglishMonthNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBADateParser.englishMonthName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnglishMonthName([NotNull] VBADateParser.EnglishMonthNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBADateParser.monthName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMonthName([NotNull] VBADateParser.MonthNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBADateParser.monthName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMonthName([NotNull] VBADateParser.MonthNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBADateParser.timeSeparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeSeparator([NotNull] VBADateParser.TimeSeparatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBADateParser.timeSeparator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeSeparator([NotNull] VBADateParser.TimeSeparatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBADateParser.timeValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeValue([NotNull] VBADateParser.TimeValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBADateParser.timeValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeValue([NotNull] VBADateParser.TimeValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBADateParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompilationUnit([NotNull] VBADateParser.CompilationUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBADateParser.compilationUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompilationUnit([NotNull] VBADateParser.CompilationUnitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBADateParser.dateValuePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateValuePart([NotNull] VBADateParser.DateValuePartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBADateParser.dateValuePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateValuePart([NotNull] VBADateParser.DateValuePartContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBADateParser.timeValuePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTimeValuePart([NotNull] VBADateParser.TimeValuePartContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBADateParser.timeValuePart"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTimeValuePart([NotNull] VBADateParser.TimeValuePartContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBADateParser.dateLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateLiteral([NotNull] VBADateParser.DateLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBADateParser.dateLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateLiteral([NotNull] VBADateParser.DateLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBADateParser.dateValueNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDateValueNumber([NotNull] VBADateParser.DateValueNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBADateParser.dateValueNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDateValueNumber([NotNull] VBADateParser.DateValueNumberContext context);
}
} // namespace Rubberduck.Parsing
