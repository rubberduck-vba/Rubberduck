//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Dev\Rubberduck\Rubberduck.Parsing\Grammar\VBAParser.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Rubberduck.Parsing.Grammar {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IVBAParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public partial class VBAParserBaseListener : IVBAParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.identifierValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierValue([NotNull] VBAParser.IdentifierValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.identifierValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierValue([NotNull] VBAParser.IdentifierValueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.powOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPowOp([NotNull] VBAParser.PowOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.powOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPowOp([NotNull] VBAParser.PowOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.udtMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUdtMember([NotNull] VBAParser.UdtMemberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.udtMember"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUdtMember([NotNull] VBAParser.UdtMemberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.tabNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTabNumber([NotNull] VBAParser.TabNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.tabNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTabNumber([NotNull] VBAParser.TabNumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.spcClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSpcClause([NotNull] VBAParser.SpcClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.spcClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSpcClause([NotNull] VBAParser.SpcClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.rsetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRsetStmt([NotNull] VBAParser.RsetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.rsetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRsetStmt([NotNull] VBAParser.RsetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.eventArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEventArgument([NotNull] VBAParser.EventArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.eventArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEventArgument([NotNull] VBAParser.EventArgumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.argumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgumentList([NotNull] VBAParser.ArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.argumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgumentList([NotNull] VBAParser.ArgumentListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lsetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLsetStmt([NotNull] VBAParser.LsetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lsetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLsetStmt([NotNull] VBAParser.LsetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.remComment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRemComment([NotNull] VBAParser.RemCommentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.remComment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRemComment([NotNull] VBAParser.RemCommentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.letterSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetterSpec([NotNull] VBAParser.LetterSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.letterSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetterSpec([NotNull] VBAParser.LetterSpecContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.fieldLength"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldLength([NotNull] VBAParser.FieldLengthContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.fieldLength"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldLength([NotNull] VBAParser.FieldLengthContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.debugModule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDebugModule([NotNull] VBAParser.DebugModuleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.debugModule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDebugModule([NotNull] VBAParser.DebugModuleContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.goSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGoSubStmt([NotNull] VBAParser.GoSubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.goSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGoSubStmt([NotNull] VBAParser.GoSubStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.module"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModule([NotNull] VBAParser.ModuleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.module"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModule([NotNull] VBAParser.ModuleContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleHeader([NotNull] VBAParser.ModuleHeaderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleHeader([NotNull] VBAParser.ModuleHeaderContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.typeofexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeofexpr([NotNull] VBAParser.TypeofexprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.typeofexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeofexpr([NotNull] VBAParser.TypeofexprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.instanceExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInstanceExpr([NotNull] VBAParser.InstanceExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.instanceExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInstanceExpr([NotNull] VBAParser.InstanceExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleDeclarations([NotNull] VBAParser.ModuleDeclarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleDeclarations([NotNull] VBAParser.ModuleDeclarationsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.indexExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIndexExpr([NotNull] VBAParser.IndexExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.indexExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIndexExpr([NotNull] VBAParser.IndexExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.untypedNameMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUntypedNameMemberDeclaration([NotNull] VBAParser.UntypedNameMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.untypedNameMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUntypedNameMemberDeclaration([NotNull] VBAParser.UntypedNameMemberDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.inputList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInputList([NotNull] VBAParser.InputListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.inputList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInputList([NotNull] VBAParser.InputListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.selectCaseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectCaseStmt([NotNull] VBAParser.SelectCaseStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.selectCaseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectCaseStmt([NotNull] VBAParser.SelectCaseStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleBody([NotNull] VBAParser.ModuleBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleBody([NotNull] VBAParser.ModuleBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ctLiteralExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCtLiteralExpr([NotNull] VBAParser.CtLiteralExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ctLiteralExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCtLiteralExpr([NotNull] VBAParser.CtLiteralExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.udtMemberList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUdtMemberList([NotNull] VBAParser.UdtMemberListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.udtMemberList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUdtMemberList([NotNull] VBAParser.UdtMemberListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.letterRange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetterRange([NotNull] VBAParser.LetterRangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.letterRange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetterRange([NotNull] VBAParser.LetterRangeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.newExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNewExpr([NotNull] VBAParser.NewExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.newExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNewExpr([NotNull] VBAParser.NewExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.access"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccess([NotNull] VBAParser.AccessContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.access"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccess([NotNull] VBAParser.AccessContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.widthStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWidthStmt([NotNull] VBAParser.WidthStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.widthStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWidthStmt([NotNull] VBAParser.WidthStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.withStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithStmt([NotNull] VBAParser.WithStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.withStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithStmt([NotNull] VBAParser.WithStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.addressOfExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddressOfExpression([NotNull] VBAParser.AddressOfExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.addressOfExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddressOfExpression([NotNull] VBAParser.AddressOfExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.endRecordNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEndRecordNumber([NotNull] VBAParser.EndRecordNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.endRecordNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEndRecordNumber([NotNull] VBAParser.EndRecordNumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.annotationName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotationName([NotNull] VBAParser.AnnotationNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.annotationName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotationName([NotNull] VBAParser.AnnotationNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.constSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstSubStmt([NotNull] VBAParser.ConstSubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.constSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstSubStmt([NotNull] VBAParser.ConstSubStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.endOfStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEndOfStatement([NotNull] VBAParser.EndOfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.endOfStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEndOfStatement([NotNull] VBAParser.EndOfStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.midStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMidStatement([NotNull] VBAParser.MidStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.midStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMidStatement([NotNull] VBAParser.MidStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.optionCompareStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionCompareStmt([NotNull] VBAParser.OptionCompareStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.optionCompareStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionCompareStmt([NotNull] VBAParser.OptionCompareStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lineWidth"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLineWidth([NotNull] VBAParser.LineWidthContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lineWidth"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLineWidth([NotNull] VBAParser.LineWidthContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.publicTypeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPublicTypeDeclaration([NotNull] VBAParser.PublicTypeDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.publicTypeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPublicTypeDeclaration([NotNull] VBAParser.PublicTypeDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.asTypeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsTypeClause([NotNull] VBAParser.AsTypeClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.asTypeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsTypeClause([NotNull] VBAParser.AsTypeClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.errorStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterErrorStmt([NotNull] VBAParser.ErrorStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.errorStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitErrorStmt([NotNull] VBAParser.ErrorStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.arg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArg([NotNull] VBAParser.ArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.arg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArg([NotNull] VBAParser.ArgContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.scaleSpecialForm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterScaleSpecialForm([NotNull] VBAParser.ScaleSpecialFormContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.scaleSpecialForm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitScaleSpecialForm([NotNull] VBAParser.ScaleSpecialFormContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.memberAccessExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMemberAccessExpr([NotNull] VBAParser.MemberAccessExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.memberAccessExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMemberAccessExpr([NotNull] VBAParser.MemberAccessExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.eventStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEventStmt([NotNull] VBAParser.EventStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.eventStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEventStmt([NotNull] VBAParser.EventStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLockStmt([NotNull] VBAParser.LockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLockStmt([NotNull] VBAParser.LockStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.logicalNotOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalNotOp([NotNull] VBAParser.LogicalNotOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.logicalNotOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalNotOp([NotNull] VBAParser.LogicalNotOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.optionExplicitStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionExplicitStmt([NotNull] VBAParser.OptionExplicitStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.optionExplicitStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionExplicitStmt([NotNull] VBAParser.OptionExplicitStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.annotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotation([NotNull] VBAParser.AnnotationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.annotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotation([NotNull] VBAParser.AnnotationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.reservedNameMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReservedNameMemberDeclaration([NotNull] VBAParser.ReservedNameMemberDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.reservedNameMemberDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReservedNameMemberDeclaration([NotNull] VBAParser.ReservedNameMemberDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.mandatoryLineContinuation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMandatoryLineContinuation([NotNull] VBAParser.MandatoryLineContinuationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.mandatoryLineContinuation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMandatoryLineContinuation([NotNull] VBAParser.MandatoryLineContinuationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.foreignIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeignIdentifier([NotNull] VBAParser.ForeignIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.foreignIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeignIdentifier([NotNull] VBAParser.ForeignIdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.simpleNameExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSimpleNameExpr([NotNull] VBAParser.SimpleNameExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.simpleNameExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSimpleNameExpr([NotNull] VBAParser.SimpleNameExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ctParenthesizedExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCtParenthesizedExpr([NotNull] VBAParser.CtParenthesizedExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ctParenthesizedExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCtParenthesizedExpr([NotNull] VBAParser.CtParenthesizedExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.writeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWriteStmt([NotNull] VBAParser.WriteStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.writeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWriteStmt([NotNull] VBAParser.WriteStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.markedFileNumberExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMarkedFileNumberExpr([NotNull] VBAParser.MarkedFileNumberExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.markedFileNumberExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMarkedFileNumberExpr([NotNull] VBAParser.MarkedFileNumberExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.annotationList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotationList([NotNull] VBAParser.AnnotationListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.annotationList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotationList([NotNull] VBAParser.AnnotationListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.singleLetter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingleLetter([NotNull] VBAParser.SingleLetterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.singleLetter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingleLetter([NotNull] VBAParser.SingleLetterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.withDictionaryAccessExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithDictionaryAccessExpr([NotNull] VBAParser.WithDictionaryAccessExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.withDictionaryAccessExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithDictionaryAccessExpr([NotNull] VBAParser.WithDictionaryAccessExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfStmt([NotNull] VBAParser.IfStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ifStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfStmt([NotNull] VBAParser.IfStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.subroutineName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubroutineName([NotNull] VBAParser.SubroutineNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.subroutineName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubroutineName([NotNull] VBAParser.SubroutineNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.inputVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInputVariable([NotNull] VBAParser.InputVariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.inputVariable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInputVariable([NotNull] VBAParser.InputVariableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lowerBoundArgumentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLowerBoundArgumentExpression([NotNull] VBAParser.LowerBoundArgumentExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lowerBoundArgumentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLowerBoundArgumentExpression([NotNull] VBAParser.LowerBoundArgumentExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.forEachStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForEachStmt([NotNull] VBAParser.ForEachStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.forEachStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForEachStmt([NotNull] VBAParser.ForEachStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.numberLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberLiteral([NotNull] VBAParser.NumberLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.numberLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberLiteral([NotNull] VBAParser.NumberLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.singleLineIfStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingleLineIfStmt([NotNull] VBAParser.SingleLineIfStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.singleLineIfStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingleLineIfStmt([NotNull] VBAParser.SingleLineIfStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lastLetter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLastLetter([NotNull] VBAParser.LastLetterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lastLetter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLastLetter([NotNull] VBAParser.LastLetterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.spcNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSpcNumber([NotNull] VBAParser.SpcNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.spcNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSpcNumber([NotNull] VBAParser.SpcNumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.letStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetStmt([NotNull] VBAParser.LetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.letStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetStmt([NotNull] VBAParser.LetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.subStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubStmt([NotNull] VBAParser.SubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.subStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubStmt([NotNull] VBAParser.SubStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.optionBaseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionBaseStmt([NotNull] VBAParser.OptionBaseStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.optionBaseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionBaseStmt([NotNull] VBAParser.OptionBaseStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lineInputStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLineInputStmt([NotNull] VBAParser.LineInputStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lineInputStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLineInputStmt([NotNull] VBAParser.LineInputStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.outputExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputExpression([NotNull] VBAParser.OutputExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.outputExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputExpression([NotNull] VBAParser.OutputExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.tabClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTabClause([NotNull] VBAParser.TabClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.tabClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTabClause([NotNull] VBAParser.TabClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.circleSpecialForm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCircleSpecialForm([NotNull] VBAParser.CircleSpecialFormContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.circleSpecialForm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCircleSpecialForm([NotNull] VBAParser.CircleSpecialFormContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLExpr([NotNull] VBAParser.LExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLExpr([NotNull] VBAParser.LExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.statementKeyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementKeyword([NotNull] VBAParser.StatementKeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.statementKeyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementKeyword([NotNull] VBAParser.StatementKeywordContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.logicalAndOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalAndOp([NotNull] VBAParser.LogicalAndOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.logicalAndOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalAndOp([NotNull] VBAParser.LogicalAndOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.fileNumberList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFileNumberList([NotNull] VBAParser.FileNumberListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.fileNumberList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFileNumberList([NotNull] VBAParser.FileNumberListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.parenthesizedExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesizedExpr([NotNull] VBAParser.ParenthesizedExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.parenthesizedExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesizedExpr([NotNull] VBAParser.ParenthesizedExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.optionPrivateModuleStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionPrivateModuleStmt([NotNull] VBAParser.OptionPrivateModuleStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.optionPrivateModuleStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionPrivateModuleStmt([NotNull] VBAParser.OptionPrivateModuleStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKeyword([NotNull] VBAParser.KeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.keyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKeyword([NotNull] VBAParser.KeywordContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.unaryMinusOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryMinusOp([NotNull] VBAParser.UnaryMinusOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.unaryMinusOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryMinusOp([NotNull] VBAParser.UnaryMinusOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.elseIfBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseIfBlock([NotNull] VBAParser.ElseIfBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.elseIfBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseIfBlock([NotNull] VBAParser.ElseIfBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.visibility"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVisibility([NotNull] VBAParser.VisibilityContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.visibility"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVisibility([NotNull] VBAParser.VisibilityContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.attributeValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributeValue([NotNull] VBAParser.AttributeValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.attributeValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributeValue([NotNull] VBAParser.AttributeValueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.positionalArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPositionalArgument([NotNull] VBAParser.PositionalArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.positionalArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPositionalArgument([NotNull] VBAParser.PositionalArgumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.functionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionStmt([NotNull] VBAParser.FunctionStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.functionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionStmt([NotNull] VBAParser.FunctionStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.recordRange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecordRange([NotNull] VBAParser.RecordRangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.recordRange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecordRange([NotNull] VBAParser.RecordRangeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStmt([NotNull] VBAParser.ReturnStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStmt([NotNull] VBAParser.ReturnStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lineNumberLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLineNumberLabel([NotNull] VBAParser.LineNumberLabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lineNumberLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLineNumberLabel([NotNull] VBAParser.LineNumberLabelContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.universalLetterRange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUniversalLetterRange([NotNull] VBAParser.UniversalLetterRangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.universalLetterRange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUniversalLetterRange([NotNull] VBAParser.UniversalLetterRangeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.variantLiteralIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariantLiteralIdentifier([NotNull] VBAParser.VariantLiteralIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.variantLiteralIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariantLiteralIdentifier([NotNull] VBAParser.VariantLiteralIdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.modOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModOp([NotNull] VBAParser.ModOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.modOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModOp([NotNull] VBAParser.ModOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.namedArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamedArgumentList([NotNull] VBAParser.NamedArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.namedArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamedArgumentList([NotNull] VBAParser.NamedArgumentListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ifWithEmptyThen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfWithEmptyThen([NotNull] VBAParser.IfWithEmptyThenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ifWithEmptyThen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfWithEmptyThen([NotNull] VBAParser.IfWithEmptyThenContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.modeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModeClause([NotNull] VBAParser.ModeClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.modeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModeClause([NotNull] VBAParser.ModeClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.annotationArgList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotationArgList([NotNull] VBAParser.AnnotationArgListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.annotationArgList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotationArgList([NotNull] VBAParser.AnnotationArgListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.upperBound"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUpperBound([NotNull] VBAParser.UpperBoundContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.upperBound"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUpperBound([NotNull] VBAParser.UpperBoundContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.specifiedPositionalArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSpecifiedPositionalArgument([NotNull] VBAParser.SpecifiedPositionalArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.specifiedPositionalArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSpecifiedPositionalArgument([NotNull] VBAParser.SpecifiedPositionalArgumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.onGoToStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOnGoToStmt([NotNull] VBAParser.OnGoToStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.onGoToStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOnGoToStmt([NotNull] VBAParser.OnGoToStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.upperCaseA"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUpperCaseA([NotNull] VBAParser.UpperCaseAContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.upperCaseA"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUpperCaseA([NotNull] VBAParser.UpperCaseAContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.selectExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectExpression([NotNull] VBAParser.SelectExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.selectExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectExpression([NotNull] VBAParser.SelectExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.baseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBaseType([NotNull] VBAParser.BaseTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.baseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBaseType([NotNull] VBAParser.BaseTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.defType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefType([NotNull] VBAParser.DefTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.defType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefType([NotNull] VBAParser.DefTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.redimDeclarationList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRedimDeclarationList([NotNull] VBAParser.RedimDeclarationListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.redimDeclarationList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRedimDeclarationList([NotNull] VBAParser.RedimDeclarationListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.foreignName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForeignName([NotNull] VBAParser.ForeignNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.foreignName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForeignName([NotNull] VBAParser.ForeignNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.caseElseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseElseClause([NotNull] VBAParser.CaseElseClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.caseElseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseElseClause([NotNull] VBAParser.CaseElseClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.literalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralExpr([NotNull] VBAParser.LiteralExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.literalExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralExpr([NotNull] VBAParser.LiteralExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.openStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpenStmt([NotNull] VBAParser.OpenStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.openStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpenStmt([NotNull] VBAParser.OpenStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.markerKeyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMarkerKeyword([NotNull] VBAParser.MarkerKeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.markerKeyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMarkerKeyword([NotNull] VBAParser.MarkerKeywordContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.attributeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributeName([NotNull] VBAParser.AttributeNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.attributeName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributeName([NotNull] VBAParser.AttributeNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.implementsStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplementsStmt([NotNull] VBAParser.ImplementsStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.implementsStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplementsStmt([NotNull] VBAParser.ImplementsStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.closeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCloseStmt([NotNull] VBAParser.CloseStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.closeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCloseStmt([NotNull] VBAParser.CloseStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.stopStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStopStmt([NotNull] VBAParser.StopStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.stopStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStopStmt([NotNull] VBAParser.StopStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.variableName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableName([NotNull] VBAParser.VariableNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.variableName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableName([NotNull] VBAParser.VariableNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.whiteSpace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhiteSpace([NotNull] VBAParser.WhiteSpaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.whiteSpace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhiteSpace([NotNull] VBAParser.WhiteSpaceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.upperCaseZ"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUpperCaseZ([NotNull] VBAParser.UpperCaseZContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.upperCaseZ"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUpperCaseZ([NotNull] VBAParser.UpperCaseZContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.commentOrAnnotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommentOrAnnotation([NotNull] VBAParser.CommentOrAnnotationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.commentOrAnnotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommentOrAnnotation([NotNull] VBAParser.CommentOrAnnotationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.goToStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGoToStmt([NotNull] VBAParser.GoToStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.goToStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGoToStmt([NotNull] VBAParser.GoToStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.printStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintStmt([NotNull] VBAParser.PrintStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.printStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintStmt([NotNull] VBAParser.PrintStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleConfig"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleConfig([NotNull] VBAParser.ModuleConfigContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleConfig"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleConfig([NotNull] VBAParser.ModuleConfigContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.doLoopStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoLoopStmt([NotNull] VBAParser.DoLoopStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.doLoopStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoLoopStmt([NotNull] VBAParser.DoLoopStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.callStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCallStmt([NotNull] VBAParser.CallStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.callStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCallStmt([NotNull] VBAParser.CallStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.optionalArrayClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionalArrayClause([NotNull] VBAParser.OptionalArrayClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.optionalArrayClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionalArrayClause([NotNull] VBAParser.OptionalArrayClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.debugPrintSub"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDebugPrintSub([NotNull] VBAParser.DebugPrintSubContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.debugPrintSub"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDebugPrintSub([NotNull] VBAParser.DebugPrintSubContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.enumerationStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumerationStmt([NotNull] VBAParser.EnumerationStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.enumerationStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumerationStmt([NotNull] VBAParser.EnumerationStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.rangeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRangeClause([NotNull] VBAParser.RangeClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.rangeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRangeClause([NotNull] VBAParser.RangeClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComment([NotNull] VBAParser.CommentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComment([NotNull] VBAParser.CommentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleBodyElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleBodyElement([NotNull] VBAParser.ModuleBodyElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleBodyElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleBodyElement([NotNull] VBAParser.ModuleBodyElementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.udtDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUdtDeclaration([NotNull] VBAParser.UdtDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.udtDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUdtDeclaration([NotNull] VBAParser.UdtDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.seekStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSeekStmt([NotNull] VBAParser.SeekStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.seekStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSeekStmt([NotNull] VBAParser.SeekStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.listOrLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterListOrLabel([NotNull] VBAParser.ListOrLabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.listOrLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitListOrLabel([NotNull] VBAParser.ListOrLabelContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ctTypeofexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCtTypeofexpr([NotNull] VBAParser.CtTypeofexprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ctTypeofexpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCtTypeofexpr([NotNull] VBAParser.CtTypeofexprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.fileNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFileNumber([NotNull] VBAParser.FileNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.fileNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFileNumber([NotNull] VBAParser.FileNumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.constStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstStmt([NotNull] VBAParser.ConstStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.constStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstStmt([NotNull] VBAParser.ConstStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.argDefaultValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgDefaultValue([NotNull] VBAParser.ArgDefaultValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.argDefaultValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgDefaultValue([NotNull] VBAParser.ArgDefaultValueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.propertyLetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyLetStmt([NotNull] VBAParser.PropertyLetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.propertyLetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyLetStmt([NotNull] VBAParser.PropertyLetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleAttributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleAttributes([NotNull] VBAParser.ModuleAttributesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleAttributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleAttributes([NotNull] VBAParser.ModuleAttributesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] VBAParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] VBAParser.TypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.inputStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInputStmt([NotNull] VBAParser.InputStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.inputStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInputStmt([NotNull] VBAParser.InputStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.declareStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclareStmt([NotNull] VBAParser.DeclareStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.declareStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclareStmt([NotNull] VBAParser.DeclareStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.booleanLiteralIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanLiteralIdentifier([NotNull] VBAParser.BooleanLiteralIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.booleanLiteralIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanLiteralIdentifier([NotNull] VBAParser.BooleanLiteralIdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.logicalOrOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalOrOp([NotNull] VBAParser.LogicalOrOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.logicalOrOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalOrOp([NotNull] VBAParser.LogicalOrOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.logicalEqvOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalEqvOp([NotNull] VBAParser.LogicalEqvOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.logicalEqvOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalEqvOp([NotNull] VBAParser.LogicalEqvOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.resetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResetStmt([NotNull] VBAParser.ResetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.resetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResetStmt([NotNull] VBAParser.ResetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.@lock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLock([NotNull] VBAParser.LockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.@lock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLock([NotNull] VBAParser.LockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] VBAParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] VBAParser.BlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.fileMode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFileMode([NotNull] VBAParser.FileModeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.fileMode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFileMode([NotNull] VBAParser.FileModeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.setStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetStmt([NotNull] VBAParser.SetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.setStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetStmt([NotNull] VBAParser.SetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.onErrorStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOnErrorStmt([NotNull] VBAParser.OnErrorStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.onErrorStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOnErrorStmt([NotNull] VBAParser.OnErrorStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.dimSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDimSpec([NotNull] VBAParser.DimSpecContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.dimSpec"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDimSpec([NotNull] VBAParser.DimSpecContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifier([NotNull] VBAParser.IdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.identifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifier([NotNull] VBAParser.IdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.attributeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributeStmt([NotNull] VBAParser.AttributeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.attributeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributeStmt([NotNull] VBAParser.AttributeStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.enumerationStmt_Constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumerationStmt_Constant([NotNull] VBAParser.EnumerationStmt_ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.enumerationStmt_Constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumerationStmt_Constant([NotNull] VBAParser.EnumerationStmt_ConstantContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.concatOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConcatOp([NotNull] VBAParser.ConcatOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.concatOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConcatOp([NotNull] VBAParser.ConcatOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.onGoSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOnGoSubStmt([NotNull] VBAParser.OnGoSubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.onGoSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOnGoSubStmt([NotNull] VBAParser.OnGoSubStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.outputList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputList([NotNull] VBAParser.OutputListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.outputList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputList([NotNull] VBAParser.OutputListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.relationalOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalOp([NotNull] VBAParser.RelationalOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.relationalOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalOp([NotNull] VBAParser.RelationalOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.builtInTypeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBuiltInTypeExpr([NotNull] VBAParser.BuiltInTypeExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.builtInTypeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBuiltInTypeExpr([NotNull] VBAParser.BuiltInTypeExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.positionalOrNamedArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPositionalOrNamedArgumentList([NotNull] VBAParser.PositionalOrNamedArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.positionalOrNamedArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPositionalOrNamedArgumentList([NotNull] VBAParser.PositionalOrNamedArgumentListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.defDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefDirective([NotNull] VBAParser.DefDirectiveContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.defDirective"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefDirective([NotNull] VBAParser.DefDirectiveContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.nameStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNameStmt([NotNull] VBAParser.NameStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.nameStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNameStmt([NotNull] VBAParser.NameStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.typeHint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeHint([NotNull] VBAParser.TypeHintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.typeHint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeHint([NotNull] VBAParser.TypeHintContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.fileStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFileStmt([NotNull] VBAParser.FileStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.fileStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFileStmt([NotNull] VBAParser.FileStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.elseBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElseBlock([NotNull] VBAParser.ElseBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.elseBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElseBlock([NotNull] VBAParser.ElseBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.redimStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRedimStmt([NotNull] VBAParser.RedimStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.redimStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRedimStmt([NotNull] VBAParser.RedimStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.boundsList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBoundsList([NotNull] VBAParser.BoundsListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.boundsList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBoundsList([NotNull] VBAParser.BoundsListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.literalIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralIdentifier([NotNull] VBAParser.LiteralIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.literalIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralIdentifier([NotNull] VBAParser.LiteralIdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.tuple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTuple([NotNull] VBAParser.TupleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.tuple"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTuple([NotNull] VBAParser.TupleContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.untypedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUntypedIdentifier([NotNull] VBAParser.UntypedIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.untypedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUntypedIdentifier([NotNull] VBAParser.UntypedIdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.builtInType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBuiltInType([NotNull] VBAParser.BuiltInTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.builtInType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBuiltInType([NotNull] VBAParser.BuiltInTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.requiredPositionalArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRequiredPositionalArgument([NotNull] VBAParser.RequiredPositionalArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.requiredPositionalArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRequiredPositionalArgument([NotNull] VBAParser.RequiredPositionalArgumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.recLength"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecLength([NotNull] VBAParser.RecLengthContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.recLength"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecLength([NotNull] VBAParser.RecLengthContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.unmarkedFileNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnmarkedFileNumber([NotNull] VBAParser.UnmarkedFileNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.unmarkedFileNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnmarkedFileNumber([NotNull] VBAParser.UnmarkedFileNumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.firstLetter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFirstLetter([NotNull] VBAParser.FirstLetterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.firstLetter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFirstLetter([NotNull] VBAParser.FirstLetterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.resumeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResumeStmt([NotNull] VBAParser.ResumeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.resumeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResumeStmt([NotNull] VBAParser.ResumeStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.constantExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstantExpression([NotNull] VBAParser.ConstantExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.constantExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstantExpression([NotNull] VBAParser.ConstantExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.debugPrint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDebugPrint([NotNull] VBAParser.DebugPrintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.debugPrint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDebugPrint([NotNull] VBAParser.DebugPrintContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.endOfLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEndOfLine([NotNull] VBAParser.EndOfLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.endOfLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEndOfLine([NotNull] VBAParser.EndOfLineContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.selectEndValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectEndValue([NotNull] VBAParser.SelectEndValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.selectEndValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectEndValue([NotNull] VBAParser.SelectEndValueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.startRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStartRule([NotNull] VBAParser.StartRuleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.startRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStartRule([NotNull] VBAParser.StartRuleContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.endStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEndStmt([NotNull] VBAParser.EndStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.endStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEndStmt([NotNull] VBAParser.EndStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.withMemberAccessExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithMemberAccessExpr([NotNull] VBAParser.WithMemberAccessExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.withMemberAccessExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithMemberAccessExpr([NotNull] VBAParser.WithMemberAccessExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.logicalXorOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalXorOp([NotNull] VBAParser.LogicalXorOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.logicalXorOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalXorOp([NotNull] VBAParser.LogicalXorOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.singleLineElseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSingleLineElseClause([NotNull] VBAParser.SingleLineElseClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.singleLineElseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSingleLineElseClause([NotNull] VBAParser.SingleLineElseClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.upperBoundArgumentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUpperBoundArgumentExpression([NotNull] VBAParser.UpperBoundArgumentExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.upperBoundArgumentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUpperBoundArgumentExpression([NotNull] VBAParser.UpperBoundArgumentExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.forNextStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForNextStmt([NotNull] VBAParser.ForNextStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.forNextStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForNextStmt([NotNull] VBAParser.ForNextStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.caseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseClause([NotNull] VBAParser.CaseClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.caseClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseClause([NotNull] VBAParser.CaseClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lowerBound"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLowerBound([NotNull] VBAParser.LowerBoundContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lowerBound"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLowerBound([NotNull] VBAParser.LowerBoundContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.exitStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExitStmt([NotNull] VBAParser.ExitStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.exitStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExitStmt([NotNull] VBAParser.ExitStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.selectStartValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectStartValue([NotNull] VBAParser.SelectStartValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.selectStartValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectStartValue([NotNull] VBAParser.SelectStartValueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgList([NotNull] VBAParser.ArgListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgList([NotNull] VBAParser.ArgListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.arrayDim"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArrayDim([NotNull] VBAParser.ArrayDimContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.arrayDim"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArrayDim([NotNull] VBAParser.ArrayDimContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.eventArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEventArgumentList([NotNull] VBAParser.EventArgumentListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.eventArgumentList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEventArgumentList([NotNull] VBAParser.EventArgumentListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.data"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterData([NotNull] VBAParser.DataContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.data"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitData([NotNull] VBAParser.DataContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.subscripts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubscripts([NotNull] VBAParser.SubscriptsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.subscripts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubscripts([NotNull] VBAParser.SubscriptsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.propertySetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertySetStmt([NotNull] VBAParser.PropertySetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.propertySetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertySetStmt([NotNull] VBAParser.PropertySetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.intDivOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntDivOp([NotNull] VBAParser.IntDivOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.intDivOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntDivOp([NotNull] VBAParser.IntDivOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.statementLabelDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatementLabelDefinition([NotNull] VBAParser.StatementLabelDefinitionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.statementLabelDefinition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatementLabelDefinition([NotNull] VBAParser.StatementLabelDefinitionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.missingPositionalArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMissingPositionalArgument([NotNull] VBAParser.MissingPositionalArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.missingPositionalArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMissingPositionalArgument([NotNull] VBAParser.MissingPositionalArgumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.multOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultOp([NotNull] VBAParser.MultOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.multOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultOp([NotNull] VBAParser.MultOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ifWithNonEmptyThen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfWithNonEmptyThen([NotNull] VBAParser.IfWithNonEmptyThenContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ifWithNonEmptyThen"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfWithNonEmptyThen([NotNull] VBAParser.IfWithNonEmptyThenContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.putStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPutStmt([NotNull] VBAParser.PutStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.putStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPutStmt([NotNull] VBAParser.PutStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.annotationArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotationArg([NotNull] VBAParser.AnnotationArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.annotationArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotationArg([NotNull] VBAParser.AnnotationArgContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.redimVariableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRedimVariableDeclaration([NotNull] VBAParser.RedimVariableDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.redimVariableDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRedimVariableDeclaration([NotNull] VBAParser.RedimVariableDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.recordNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRecordNumber([NotNull] VBAParser.RecordNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.recordNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRecordNumber([NotNull] VBAParser.RecordNumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.variableStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableStmt([NotNull] VBAParser.VariableStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.variableStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableStmt([NotNull] VBAParser.VariableStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ctMarkedFileNumberExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCtMarkedFileNumberExpr([NotNull] VBAParser.CtMarkedFileNumberExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ctMarkedFileNumberExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCtMarkedFileNumberExpr([NotNull] VBAParser.CtMarkedFileNumberExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubscript([NotNull] VBAParser.SubscriptContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubscript([NotNull] VBAParser.SubscriptContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.outputClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputClause([NotNull] VBAParser.OutputClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.outputClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputClause([NotNull] VBAParser.OutputClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.comparisonOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonOperator([NotNull] VBAParser.ComparisonOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.comparisonOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonOperator([NotNull] VBAParser.ComparisonOperatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.startRecordNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStartRecordNumber([NotNull] VBAParser.StartRecordNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.startRecordNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStartRecordNumber([NotNull] VBAParser.StartRecordNumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.whileWendStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileWendStmt([NotNull] VBAParser.WhileWendStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.whileWendStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileWendStmt([NotNull] VBAParser.WhileWendStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ctNewExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCtNewExpr([NotNull] VBAParser.CtNewExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ctNewExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCtNewExpr([NotNull] VBAParser.CtNewExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.objectLiteralIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectLiteralIdentifier([NotNull] VBAParser.ObjectLiteralIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.objectLiteralIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectLiteralIdentifier([NotNull] VBAParser.ObjectLiteralIdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.outputItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputItem([NotNull] VBAParser.OutputItemContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.outputItem"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputItem([NotNull] VBAParser.OutputItemContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.variableSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableSubStmt([NotNull] VBAParser.VariableSubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.variableSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableSubStmt([NotNull] VBAParser.VariableSubStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.position"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPosition([NotNull] VBAParser.PositionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.position"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPosition([NotNull] VBAParser.PositionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.getStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGetStmt([NotNull] VBAParser.GetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.getStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGetStmt([NotNull] VBAParser.GetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.raiseEventStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRaiseEventStmt([NotNull] VBAParser.RaiseEventStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.raiseEventStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRaiseEventStmt([NotNull] VBAParser.RaiseEventStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.debugPrintStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDebugPrintStmt([NotNull] VBAParser.DebugPrintStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.debugPrintStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDebugPrintStmt([NotNull] VBAParser.DebugPrintStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.sameLineStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSameLineStatement([NotNull] VBAParser.SameLineStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.sameLineStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSameLineStatement([NotNull] VBAParser.SameLineStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.pathName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPathName([NotNull] VBAParser.PathNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.pathName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPathName([NotNull] VBAParser.PathNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.tabNumberClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTabNumberClause([NotNull] VBAParser.TabNumberClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.tabNumberClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTabNumberClause([NotNull] VBAParser.TabNumberClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lineSpecialForm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLineSpecialForm([NotNull] VBAParser.LineSpecialFormContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lineSpecialForm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLineSpecialForm([NotNull] VBAParser.LineSpecialFormContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.logicalImpOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLogicalImpOp([NotNull] VBAParser.LogicalImpOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.logicalImpOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLogicalImpOp([NotNull] VBAParser.LogicalImpOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.charPosition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCharPosition([NotNull] VBAParser.CharPositionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.charPosition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCharPosition([NotNull] VBAParser.CharPositionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.modeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModeSpecifier([NotNull] VBAParser.ModeSpecifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.modeSpecifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModeSpecifier([NotNull] VBAParser.ModeSpecifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleConfigElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleConfigElement([NotNull] VBAParser.ModuleConfigElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleConfigElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleConfigElement([NotNull] VBAParser.ModuleConfigElementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.propertyGetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyGetStmt([NotNull] VBAParser.PropertyGetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.propertyGetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyGetStmt([NotNull] VBAParser.PropertyGetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.integerExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIntegerExpression([NotNull] VBAParser.IntegerExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.integerExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIntegerExpression([NotNull] VBAParser.IntegerExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.privateTypeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrivateTypeDeclaration([NotNull] VBAParser.PrivateTypeDeclarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.privateTypeDeclaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrivateTypeDeclaration([NotNull] VBAParser.PrivateTypeDeclarationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.markedFileNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMarkedFileNumber([NotNull] VBAParser.MarkedFileNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.markedFileNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMarkedFileNumber([NotNull] VBAParser.MarkedFileNumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ctLExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCtLExpr([NotNull] VBAParser.CtLExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ctLExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCtLExpr([NotNull] VBAParser.CtLExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.accessClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAccessClause([NotNull] VBAParser.AccessClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.accessClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAccessClause([NotNull] VBAParser.AccessClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.namedArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamedArgument([NotNull] VBAParser.NamedArgumentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.namedArgument"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamedArgument([NotNull] VBAParser.NamedArgumentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.identifierStatementLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIdentifierStatementLabel([NotNull] VBAParser.IdentifierStatementLabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.identifierStatementLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIdentifierStatementLabel([NotNull] VBAParser.IdentifierStatementLabelContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ctBuiltInTypeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCtBuiltInTypeExpr([NotNull] VBAParser.CtBuiltInTypeExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ctBuiltInTypeExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCtBuiltInTypeExpr([NotNull] VBAParser.CtBuiltInTypeExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.functionName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionName([NotNull] VBAParser.FunctionNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.functionName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionName([NotNull] VBAParser.FunctionNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.variableListStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableListStmt([NotNull] VBAParser.VariableListStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.variableListStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableListStmt([NotNull] VBAParser.VariableListStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAddOp([NotNull] VBAParser.AddOpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.addOp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAddOp([NotNull] VBAParser.AddOpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.unlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnlockStmt([NotNull] VBAParser.UnlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.unlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnlockStmt([NotNull] VBAParser.UnlockStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.typedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypedIdentifier([NotNull] VBAParser.TypedIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.typedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypedIdentifier([NotNull] VBAParser.TypedIdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.booleanExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBooleanExpression([NotNull] VBAParser.BooleanExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.booleanExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBooleanExpression([NotNull] VBAParser.BooleanExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.argumentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgumentExpression([NotNull] VBAParser.ArgumentExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.argumentExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgumentExpression([NotNull] VBAParser.ArgumentExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lenClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLenClause([NotNull] VBAParser.LenClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lenClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLenClause([NotNull] VBAParser.LenClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lineSpecialFormOption"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLineSpecialFormOption([NotNull] VBAParser.LineSpecialFormOptionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lineSpecialFormOption"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLineSpecialFormOption([NotNull] VBAParser.LineSpecialFormOptionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleDeclarationsElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleDeclarationsElement([NotNull] VBAParser.ModuleDeclarationsElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleDeclarationsElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleDeclarationsElement([NotNull] VBAParser.ModuleDeclarationsElementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.blockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockStmt([NotNull] VBAParser.BlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.blockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockStmt([NotNull] VBAParser.BlockStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable([NotNull] VBAParser.VariableContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.variable"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable([NotNull] VBAParser.VariableContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.eraseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEraseStmt([NotNull] VBAParser.EraseStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.eraseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEraseStmt([NotNull] VBAParser.EraseStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.commentBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCommentBody([NotNull] VBAParser.CommentBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.commentBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCommentBody([NotNull] VBAParser.CommentBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.literalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteralExpression([NotNull] VBAParser.LiteralExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.literalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteralExpression([NotNull] VBAParser.LiteralExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.dictionaryAccessExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDictionaryAccessExpr([NotNull] VBAParser.DictionaryAccessExprContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.dictionaryAccessExpr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDictionaryAccessExpr([NotNull] VBAParser.DictionaryAccessExprContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.unrestrictedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnrestrictedIdentifier([NotNull] VBAParser.UnrestrictedIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.unrestrictedIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnrestrictedIdentifier([NotNull] VBAParser.UnrestrictedIdentifierContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Rubberduck.Parsing.Grammar
