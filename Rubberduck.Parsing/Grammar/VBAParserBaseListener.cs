//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\Splinter\Documents\Visual Studio 2015\Projects\TestProj\TestProj\Grammar\VBAParser.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Rubberduck.Parsing.Grammar {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IVBAParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public partial class VBAParserBaseListener : IVBAParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.seekStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSeekStmt([NotNull] VBAParser.SeekStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.seekStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSeekStmt([NotNull] VBAParser.SeekStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.deleteSettingStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeleteSettingStmt([NotNull] VBAParser.DeleteSettingStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.deleteSettingStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeleteSettingStmt([NotNull] VBAParser.DeleteSettingStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.fileNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFileNumber([NotNull] VBAParser.FileNumberContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.fileNumber"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFileNumber([NotNull] VBAParser.FileNumberContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.constStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstStmt([NotNull] VBAParser.ConstStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.constStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstStmt([NotNull] VBAParser.ConstStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.eCS_MemberProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterECS_MemberProcedureCall([NotNull] VBAParser.ECS_MemberProcedureCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.eCS_MemberProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitECS_MemberProcedureCall([NotNull] VBAParser.ECS_MemberProcedureCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.setattrStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetattrStmt([NotNull] VBAParser.SetattrStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.setattrStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetattrStmt([NotNull] VBAParser.SetattrStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.argDefaultValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgDefaultValue([NotNull] VBAParser.ArgDefaultValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.argDefaultValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgDefaultValue([NotNull] VBAParser.ArgDefaultValueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.propertyLetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyLetStmt([NotNull] VBAParser.PropertyLetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.propertyLetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyLetStmt([NotNull] VBAParser.PropertyLetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleAttributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleAttributes([NotNull] VBAParser.ModuleAttributesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleAttributes"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleAttributes([NotNull] VBAParser.ModuleAttributesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.typeStmt_Element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeStmt_Element([NotNull] VBAParser.TypeStmt_ElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.typeStmt_Element"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeStmt_Element([NotNull] VBAParser.TypeStmt_ElementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] VBAParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] VBAParser.TypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.rsetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRsetStmt([NotNull] VBAParser.RsetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.rsetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRsetStmt([NotNull] VBAParser.RsetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.inputStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInputStmt([NotNull] VBAParser.InputStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.inputStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInputStmt([NotNull] VBAParser.InputStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsAdd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsAdd([NotNull] VBAParser.VsAddContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsAdd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsAdd([NotNull] VBAParser.VsAddContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lsetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLsetStmt([NotNull] VBAParser.LsetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lsetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLsetStmt([NotNull] VBAParser.LsetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.declareStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeclareStmt([NotNull] VBAParser.DeclareStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.declareStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeclareStmt([NotNull] VBAParser.DeclareStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.implicitCallStmt_InBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplicitCallStmt_InBlock([NotNull] VBAParser.ImplicitCallStmt_InBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.implicitCallStmt_InBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplicitCallStmt_InBlock([NotNull] VBAParser.ImplicitCallStmt_InBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.resetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResetStmt([NotNull] VBAParser.ResetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.resetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResetStmt([NotNull] VBAParser.ResetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsNew"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsNew([NotNull] VBAParser.VsNewContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsNew"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsNew([NotNull] VBAParser.VsNewContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.remComment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRemComment([NotNull] VBAParser.RemCommentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.remComment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRemComment([NotNull] VBAParser.RemCommentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.timeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTimeStmt([NotNull] VBAParser.TimeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.timeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTimeStmt([NotNull] VBAParser.TimeStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlock([NotNull] VBAParser.BlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.block"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlock([NotNull] VBAParser.BlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.setStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSetStmt([NotNull] VBAParser.SetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.setStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSetStmt([NotNull] VBAParser.SetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsNegation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsNegation([NotNull] VBAParser.VsNegationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsNegation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsNegation([NotNull] VBAParser.VsNegationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.onErrorStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOnErrorStmt([NotNull] VBAParser.OnErrorStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.onErrorStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOnErrorStmt([NotNull] VBAParser.OnErrorStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.fieldLength"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFieldLength([NotNull] VBAParser.FieldLengthContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.fieldLength"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFieldLength([NotNull] VBAParser.FieldLengthContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.eCS_ProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterECS_ProcedureCall([NotNull] VBAParser.ECS_ProcedureCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.eCS_ProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitECS_ProcedureCall([NotNull] VBAParser.ECS_ProcedureCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.dictionaryCallStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDictionaryCallStmt([NotNull] VBAParser.DictionaryCallStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.dictionaryCallStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDictionaryCallStmt([NotNull] VBAParser.DictionaryCallStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.goSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGoSubStmt([NotNull] VBAParser.GoSubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.goSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGoSubStmt([NotNull] VBAParser.GoSubStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.redimSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRedimSubStmt([NotNull] VBAParser.RedimSubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.redimSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRedimSubStmt([NotNull] VBAParser.RedimSubStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.attributeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttributeStmt([NotNull] VBAParser.AttributeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.attributeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttributeStmt([NotNull] VBAParser.AttributeStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.enumerationStmt_Constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumerationStmt_Constant([NotNull] VBAParser.EnumerationStmt_ConstantContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.enumerationStmt_Constant"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumerationStmt_Constant([NotNull] VBAParser.EnumerationStmt_ConstantContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.module"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModule([NotNull] VBAParser.ModuleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.module"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModule([NotNull] VBAParser.ModuleContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.complexType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComplexType([NotNull] VBAParser.ComplexTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.complexType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComplexType([NotNull] VBAParser.ComplexTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleHeader([NotNull] VBAParser.ModuleHeaderContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleHeader"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleHeader([NotNull] VBAParser.ModuleHeaderContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsICS"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsICS([NotNull] VBAParser.VsICSContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsICS"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsICS([NotNull] VBAParser.VsICSContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.implicitCallStmt_InStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplicitCallStmt_InStmt([NotNull] VBAParser.ImplicitCallStmt_InStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.implicitCallStmt_InStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplicitCallStmt_InStmt([NotNull] VBAParser.ImplicitCallStmt_InStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleDeclarations([NotNull] VBAParser.ModuleDeclarationsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleDeclarations"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleDeclarations([NotNull] VBAParser.ModuleDeclarationsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.explicitCallStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExplicitCallStmt([NotNull] VBAParser.ExplicitCallStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.explicitCallStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExplicitCallStmt([NotNull] VBAParser.ExplicitCallStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.onGoSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOnGoSubStmt([NotNull] VBAParser.OnGoSubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.onGoSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOnGoSubStmt([NotNull] VBAParser.OnGoSubStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.iCS_B_MemberProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterICS_B_MemberProcedureCall([NotNull] VBAParser.ICS_B_MemberProcedureCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.iCS_B_MemberProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitICS_B_MemberProcedureCall([NotNull] VBAParser.ICS_B_MemberProcedureCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.filecopyStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFilecopyStmt([NotNull] VBAParser.FilecopyStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.filecopyStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFilecopyStmt([NotNull] VBAParser.FilecopyStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.outputList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputList([NotNull] VBAParser.OutputListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.outputList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputList([NotNull] VBAParser.OutputListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.selectCaseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectCaseStmt([NotNull] VBAParser.SelectCaseStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.selectCaseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectCaseStmt([NotNull] VBAParser.SelectCaseStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsIntDiv"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsIntDiv([NotNull] VBAParser.VsIntDivContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsIntDiv"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsIntDiv([NotNull] VBAParser.VsIntDivContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleBody([NotNull] VBAParser.ModuleBodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleBody"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleBody([NotNull] VBAParser.ModuleBodyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.caseCondSelection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseCondSelection([NotNull] VBAParser.CaseCondSelectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.caseCondSelection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseCondSelection([NotNull] VBAParser.CaseCondSelectionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.widthStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWidthStmt([NotNull] VBAParser.WidthStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.widthStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWidthStmt([NotNull] VBAParser.WidthStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.withStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWithStmt([NotNull] VBAParser.WithStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.withStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWithStmt([NotNull] VBAParser.WithStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.argCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgCall([NotNull] VBAParser.ArgCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.argCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgCall([NotNull] VBAParser.ArgCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.nameStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNameStmt([NotNull] VBAParser.NameStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.nameStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNameStmt([NotNull] VBAParser.NameStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.annotationName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotationName([NotNull] VBAParser.AnnotationNameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.annotationName"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotationName([NotNull] VBAParser.AnnotationNameContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.typeHint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeHint([NotNull] VBAParser.TypeHintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.typeHint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeHint([NotNull] VBAParser.TypeHintContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.constSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstSubStmt([NotNull] VBAParser.ConstSubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.constSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstSubStmt([NotNull] VBAParser.ConstSubStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.dateStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDateStmt([NotNull] VBAParser.DateStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.dateStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDateStmt([NotNull] VBAParser.DateStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.endOfStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEndOfStatement([NotNull] VBAParser.EndOfStatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.endOfStatement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEndOfStatement([NotNull] VBAParser.EndOfStatementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.optionCompareStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionCompareStmt([NotNull] VBAParser.OptionCompareStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.optionCompareStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionCompareStmt([NotNull] VBAParser.OptionCompareStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.redimStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRedimStmt([NotNull] VBAParser.RedimStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.redimStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRedimStmt([NotNull] VBAParser.RedimStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.saveSettingStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSaveSettingStmt([NotNull] VBAParser.SaveSettingStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.saveSettingStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSaveSettingStmt([NotNull] VBAParser.SaveSettingStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLiteral([NotNull] VBAParser.LiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.literal"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLiteral([NotNull] VBAParser.LiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.asTypeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAsTypeClause([NotNull] VBAParser.AsTypeClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.asTypeClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAsTypeClause([NotNull] VBAParser.AsTypeClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.errorStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterErrorStmt([NotNull] VBAParser.ErrorStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.errorStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitErrorStmt([NotNull] VBAParser.ErrorStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsAddressOf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsAddressOf([NotNull] VBAParser.VsAddressOfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsAddressOf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsAddressOf([NotNull] VBAParser.VsAddressOfContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.arg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArg([NotNull] VBAParser.ArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.arg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArg([NotNull] VBAParser.ArgContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ifElseBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfElseBlockStmt([NotNull] VBAParser.IfElseBlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ifElseBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfElseBlockStmt([NotNull] VBAParser.IfElseBlockStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsMult"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsMult([NotNull] VBAParser.VsMultContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsMult"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsMult([NotNull] VBAParser.VsMultContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.eventStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEventStmt([NotNull] VBAParser.EventStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.eventStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEventStmt([NotNull] VBAParser.EventStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.mkdirStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMkdirStmt([NotNull] VBAParser.MkdirStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.mkdirStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMkdirStmt([NotNull] VBAParser.MkdirStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLockStmt([NotNull] VBAParser.LockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLockStmt([NotNull] VBAParser.LockStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.resumeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterResumeStmt([NotNull] VBAParser.ResumeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.resumeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitResumeStmt([NotNull] VBAParser.ResumeStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.sendkeysStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSendkeysStmt([NotNull] VBAParser.SendkeysStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.sendkeysStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSendkeysStmt([NotNull] VBAParser.SendkeysStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.optionExplicitStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionExplicitStmt([NotNull] VBAParser.OptionExplicitStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.optionExplicitStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionExplicitStmt([NotNull] VBAParser.OptionExplicitStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.annotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotation([NotNull] VBAParser.AnnotationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.annotation"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotation([NotNull] VBAParser.AnnotationContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsNot"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsNot([NotNull] VBAParser.VsNotContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsNot"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsNot([NotNull] VBAParser.VsNotContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.chdriveStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChdriveStmt([NotNull] VBAParser.ChdriveStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.chdriveStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChdriveStmt([NotNull] VBAParser.ChdriveStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.deftypeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDeftypeStmt([NotNull] VBAParser.DeftypeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.deftypeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDeftypeStmt([NotNull] VBAParser.DeftypeStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.endOfLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEndOfLine([NotNull] VBAParser.EndOfLineContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.endOfLine"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEndOfLine([NotNull] VBAParser.EndOfLineContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.randomizeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRandomizeStmt([NotNull] VBAParser.RandomizeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.randomizeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRandomizeStmt([NotNull] VBAParser.RandomizeStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.startRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStartRule([NotNull] VBAParser.StartRuleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.startRule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStartRule([NotNull] VBAParser.StartRuleContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.writeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWriteStmt([NotNull] VBAParser.WriteStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.writeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWriteStmt([NotNull] VBAParser.WriteStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsAnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsAnd([NotNull] VBAParser.VsAndContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsAnd"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsAnd([NotNull] VBAParser.VsAndContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.endStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEndStmt([NotNull] VBAParser.EndStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.endStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEndStmt([NotNull] VBAParser.EndStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.annotationList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotationList([NotNull] VBAParser.AnnotationListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.annotationList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotationList([NotNull] VBAParser.AnnotationListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.blockIfThenElse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockIfThenElse([NotNull] VBAParser.BlockIfThenElseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.blockIfThenElse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockIfThenElse([NotNull] VBAParser.BlockIfThenElseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.savepictureStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSavepictureStmt([NotNull] VBAParser.SavepictureStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.savepictureStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSavepictureStmt([NotNull] VBAParser.SavepictureStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsAmp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsAmp([NotNull] VBAParser.VsAmpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsAmp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsAmp([NotNull] VBAParser.VsAmpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ambiguousKeyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAmbiguousKeyword([NotNull] VBAParser.AmbiguousKeywordContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ambiguousKeyword"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAmbiguousKeyword([NotNull] VBAParser.AmbiguousKeywordContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.forNextStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForNextStmt([NotNull] VBAParser.ForNextStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.forNextStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForNextStmt([NotNull] VBAParser.ForNextStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.caseCondTo"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseCondTo([NotNull] VBAParser.CaseCondToContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.caseCondTo"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseCondTo([NotNull] VBAParser.CaseCondToContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.certainIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCertainIdentifier([NotNull] VBAParser.CertainIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.certainIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCertainIdentifier([NotNull] VBAParser.CertainIdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsImp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsImp([NotNull] VBAParser.VsImpContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsImp"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsImp([NotNull] VBAParser.VsImpContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.iCS_S_MembersCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterICS_S_MembersCall([NotNull] VBAParser.ICS_S_MembersCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.iCS_S_MembersCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitICS_S_MembersCall([NotNull] VBAParser.ICS_S_MembersCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.forEachStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterForEachStmt([NotNull] VBAParser.ForEachStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.forEachStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitForEachStmt([NotNull] VBAParser.ForEachStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.exitStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExitStmt([NotNull] VBAParser.ExitStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.exitStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExitStmt([NotNull] VBAParser.ExitStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.numberLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumberLiteral([NotNull] VBAParser.NumberLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.numberLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumberLiteral([NotNull] VBAParser.NumberLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgList([NotNull] VBAParser.ArgListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgList([NotNull] VBAParser.ArgListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsStruct"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsStruct([NotNull] VBAParser.VsStructContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsStruct"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsStruct([NotNull] VBAParser.VsStructContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.subscripts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubscripts([NotNull] VBAParser.SubscriptsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.subscripts"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubscripts([NotNull] VBAParser.SubscriptsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.letterrange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetterrange([NotNull] VBAParser.LetterrangeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.letterrange"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetterrange([NotNull] VBAParser.LetterrangeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.letStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLetStmt([NotNull] VBAParser.LetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.letStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLetStmt([NotNull] VBAParser.LetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.propertySetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertySetStmt([NotNull] VBAParser.PropertySetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.propertySetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertySetStmt([NotNull] VBAParser.PropertySetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.subStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubStmt([NotNull] VBAParser.SubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.subStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubStmt([NotNull] VBAParser.SubStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.optionBaseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionBaseStmt([NotNull] VBAParser.OptionBaseStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.optionBaseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionBaseStmt([NotNull] VBAParser.OptionBaseStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsRelational"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsRelational([NotNull] VBAParser.VsRelationalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsRelational"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsRelational([NotNull] VBAParser.VsRelationalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.chdirStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterChdirStmt([NotNull] VBAParser.ChdirStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.chdirStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitChdirStmt([NotNull] VBAParser.ChdirStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lineInputStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLineInputStmt([NotNull] VBAParser.LineInputStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lineInputStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLineInputStmt([NotNull] VBAParser.LineInputStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.typeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeStmt([NotNull] VBAParser.TypeStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.typeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeStmt([NotNull] VBAParser.TypeStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.inlineIfThenElse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInlineIfThenElse([NotNull] VBAParser.InlineIfThenElseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.inlineIfThenElse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInlineIfThenElse([NotNull] VBAParser.InlineIfThenElseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.iCS_S_MemberCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterICS_S_MemberCall([NotNull] VBAParser.ICS_S_MemberCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.iCS_S_MemberCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitICS_S_MemberCall([NotNull] VBAParser.ICS_S_MemberCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.outputList_Expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOutputList_Expression([NotNull] VBAParser.OutputList_ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.outputList_Expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOutputList_Expression([NotNull] VBAParser.OutputList_ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.typeOfStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTypeOfStmt([NotNull] VBAParser.TypeOfStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.typeOfStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTypeOfStmt([NotNull] VBAParser.TypeOfStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ambiguousIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAmbiguousIdentifier([NotNull] VBAParser.AmbiguousIdentifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ambiguousIdentifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAmbiguousIdentifier([NotNull] VBAParser.AmbiguousIdentifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.optionPrivateModuleStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionPrivateModuleStmt([NotNull] VBAParser.OptionPrivateModuleStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.optionPrivateModuleStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionPrivateModuleStmt([NotNull] VBAParser.OptionPrivateModuleStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.putStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPutStmt([NotNull] VBAParser.PutStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.putStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPutStmt([NotNull] VBAParser.PutStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.iCS_S_DictionaryCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterICS_S_DictionaryCall([NotNull] VBAParser.ICS_S_DictionaryCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.iCS_S_DictionaryCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitICS_S_DictionaryCall([NotNull] VBAParser.ICS_S_DictionaryCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.annotationArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotationArg([NotNull] VBAParser.AnnotationArgContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.annotationArg"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotationArg([NotNull] VBAParser.AnnotationArgContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.unloadStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnloadStmt([NotNull] VBAParser.UnloadStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.unloadStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnloadStmt([NotNull] VBAParser.UnloadStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsAssign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsAssign([NotNull] VBAParser.VsAssignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsAssign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsAssign([NotNull] VBAParser.VsAssignContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.variableStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableStmt([NotNull] VBAParser.VariableStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.variableStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableStmt([NotNull] VBAParser.VariableStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSubscript([NotNull] VBAParser.SubscriptContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.subscript"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSubscript([NotNull] VBAParser.SubscriptContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.visibility"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVisibility([NotNull] VBAParser.VisibilityContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.visibility"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVisibility([NotNull] VBAParser.VisibilityContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.beepStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBeepStmt([NotNull] VBAParser.BeepStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.beepStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBeepStmt([NotNull] VBAParser.BeepStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsTypeOf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsTypeOf([NotNull] VBAParser.VsTypeOfContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsTypeOf"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsTypeOf([NotNull] VBAParser.VsTypeOfContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.comparisonOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparisonOperator([NotNull] VBAParser.ComparisonOperatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.comparisonOperator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparisonOperator([NotNull] VBAParser.ComparisonOperatorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.caseCondValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseCondValue([NotNull] VBAParser.CaseCondValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.caseCondValue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseCondValue([NotNull] VBAParser.CaseCondValueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.whileWendStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhileWendStmt([NotNull] VBAParser.WhileWendStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.whileWendStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhileWendStmt([NotNull] VBAParser.WhileWendStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.functionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionStmt([NotNull] VBAParser.FunctionStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.functionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionStmt([NotNull] VBAParser.FunctionStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturnStmt([NotNull] VBAParser.ReturnStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.returnStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturnStmt([NotNull] VBAParser.ReturnStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ifConditionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfConditionStmt([NotNull] VBAParser.IfConditionStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ifConditionStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfConditionStmt([NotNull] VBAParser.IfConditionStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsMod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsMod([NotNull] VBAParser.VsModContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsMod"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsMod([NotNull] VBAParser.VsModContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.killStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterKillStmt([NotNull] VBAParser.KillStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.killStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitKillStmt([NotNull] VBAParser.KillStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsOr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsOr([NotNull] VBAParser.VsOrContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsOr"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsOr([NotNull] VBAParser.VsOrContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.rmdirStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRmdirStmt([NotNull] VBAParser.RmdirStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.rmdirStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRmdirStmt([NotNull] VBAParser.RmdirStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.variableSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableSubStmt([NotNull] VBAParser.VariableSubStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.variableSubStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableSubStmt([NotNull] VBAParser.VariableSubStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.caseCondElse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseCondElse([NotNull] VBAParser.CaseCondElseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.caseCondElse"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseCondElse([NotNull] VBAParser.CaseCondElseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.appactivateStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAppactivateStmt([NotNull] VBAParser.AppactivateStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.appactivateStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAppactivateStmt([NotNull] VBAParser.AppactivateStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.getStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGetStmt([NotNull] VBAParser.GetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.getStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGetStmt([NotNull] VBAParser.GetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.raiseEventStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRaiseEventStmt([NotNull] VBAParser.RaiseEventStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.raiseEventStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRaiseEventStmt([NotNull] VBAParser.RaiseEventStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lineLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLineLabel([NotNull] VBAParser.LineLabelContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lineLabel"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLineLabel([NotNull] VBAParser.LineLabelContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.annotationArgList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnnotationArgList([NotNull] VBAParser.AnnotationArgListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.annotationArgList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnnotationArgList([NotNull] VBAParser.AnnotationArgListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.caseCondIs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCaseCondIs([NotNull] VBAParser.CaseCondIsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.caseCondIs"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCaseCondIs([NotNull] VBAParser.CaseCondIsContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.onGoToStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOnGoToStmt([NotNull] VBAParser.OnGoToStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.onGoToStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOnGoToStmt([NotNull] VBAParser.OnGoToStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.argsCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgsCall([NotNull] VBAParser.ArgsCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.argsCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgsCall([NotNull] VBAParser.ArgsCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleConfigElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleConfigElement([NotNull] VBAParser.ModuleConfigElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleConfigElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleConfigElement([NotNull] VBAParser.ModuleConfigElementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.propertyGetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyGetStmt([NotNull] VBAParser.PropertyGetStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.propertyGetStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyGetStmt([NotNull] VBAParser.PropertyGetStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.loadStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLoadStmt([NotNull] VBAParser.LoadStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.loadStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLoadStmt([NotNull] VBAParser.LoadStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.baseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBaseType([NotNull] VBAParser.BaseTypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.baseType"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBaseType([NotNull] VBAParser.BaseTypeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.iCS_S_ProcedureOrArrayCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterICS_S_ProcedureOrArrayCall([NotNull] VBAParser.ICS_S_ProcedureOrArrayCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.iCS_S_ProcedureOrArrayCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitICS_S_ProcedureOrArrayCall([NotNull] VBAParser.ICS_S_ProcedureOrArrayCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.openStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOpenStmt([NotNull] VBAParser.OpenStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.openStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOpenStmt([NotNull] VBAParser.OpenStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ifBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfBlockStmt([NotNull] VBAParser.IfBlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ifBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfBlockStmt([NotNull] VBAParser.IfBlockStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.implementsStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImplementsStmt([NotNull] VBAParser.ImplementsStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.implementsStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImplementsStmt([NotNull] VBAParser.ImplementsStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.closeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCloseStmt([NotNull] VBAParser.CloseStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.closeStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCloseStmt([NotNull] VBAParser.CloseStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ifElseIfBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIfElseIfBlockStmt([NotNull] VBAParser.IfElseIfBlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ifElseIfBlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIfElseIfBlockStmt([NotNull] VBAParser.IfElseIfBlockStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.stopStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStopStmt([NotNull] VBAParser.StopStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.stopStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStopStmt([NotNull] VBAParser.StopStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.whiteSpace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhiteSpace([NotNull] VBAParser.WhiteSpaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.whiteSpace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhiteSpace([NotNull] VBAParser.WhiteSpaceContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.sC_Case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSC_Case([NotNull] VBAParser.SC_CaseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.sC_Case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSC_Case([NotNull] VBAParser.SC_CaseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.variableListStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariableListStmt([NotNull] VBAParser.VariableListStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.variableListStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariableListStmt([NotNull] VBAParser.VariableListStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.iCS_B_ProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterICS_B_ProcedureCall([NotNull] VBAParser.ICS_B_ProcedureCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.iCS_B_ProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitICS_B_ProcedureCall([NotNull] VBAParser.ICS_B_ProcedureCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.unlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnlockStmt([NotNull] VBAParser.UnlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.unlockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnlockStmt([NotNull] VBAParser.UnlockStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsXor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsXor([NotNull] VBAParser.VsXorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsXor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsXor([NotNull] VBAParser.VsXorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.goToStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGoToStmt([NotNull] VBAParser.GoToStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.goToStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGoToStmt([NotNull] VBAParser.GoToStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.midStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMidStmt([NotNull] VBAParser.MidStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.midStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMidStmt([NotNull] VBAParser.MidStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsPow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsPow([NotNull] VBAParser.VsPowContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsPow"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsPow([NotNull] VBAParser.VsPowContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.printStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrintStmt([NotNull] VBAParser.PrintStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.printStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrintStmt([NotNull] VBAParser.PrintStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleConfig"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleConfig([NotNull] VBAParser.ModuleConfigContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleConfig"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleConfig([NotNull] VBAParser.ModuleConfigContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.doLoopStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDoLoopStmt([NotNull] VBAParser.DoLoopStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.doLoopStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDoLoopStmt([NotNull] VBAParser.DoLoopStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.iCS_S_VariableOrProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterICS_S_VariableOrProcedureCall([NotNull] VBAParser.ICS_S_VariableOrProcedureCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.iCS_S_VariableOrProcedureCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitICS_S_VariableOrProcedureCall([NotNull] VBAParser.ICS_S_VariableOrProcedureCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleDeclarationsElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleDeclarationsElement([NotNull] VBAParser.ModuleDeclarationsElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleDeclarationsElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleDeclarationsElement([NotNull] VBAParser.ModuleDeclarationsElementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.blockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlockStmt([NotNull] VBAParser.BlockStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.blockStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlockStmt([NotNull] VBAParser.BlockStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.eraseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEraseStmt([NotNull] VBAParser.EraseStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.eraseStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEraseStmt([NotNull] VBAParser.EraseStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.enumerationStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnumerationStmt([NotNull] VBAParser.EnumerationStmtContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.enumerationStmt"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnumerationStmt([NotNull] VBAParser.EnumerationStmtContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsLiteral([NotNull] VBAParser.VsLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsLiteral([NotNull] VBAParser.VsLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsEqv"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsEqv([NotNull] VBAParser.VsEqvContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsEqv"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsEqv([NotNull] VBAParser.VsEqvContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComment([NotNull] VBAParser.CommentContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.comment"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComment([NotNull] VBAParser.CommentContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleBodyElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterModuleBodyElement([NotNull] VBAParser.ModuleBodyElementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleBodyElement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitModuleBodyElement([NotNull] VBAParser.ModuleBodyElementContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.vsMid"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVsMid([NotNull] VBAParser.VsMidContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.vsMid"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVsMid([NotNull] VBAParser.VsMidContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace Rubberduck.Parsing.Grammar
