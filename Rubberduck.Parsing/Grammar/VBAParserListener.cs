//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.3
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Dev\Rubberduck\Rubberduck.Parsing\Grammar\VBAParser.g4 by ANTLR 4.3

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace Rubberduck.Parsing.Grammar {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="VBAParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.3")]
[System.CLSCompliant(false)]
public interface IVBAParserListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.identifierValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierValue([NotNull] VBAParser.IdentifierValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.identifierValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierValue([NotNull] VBAParser.IdentifierValueContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>powOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPowOp([NotNull] VBAParser.PowOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>powOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPowOp([NotNull] VBAParser.PowOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.udtMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUdtMember([NotNull] VBAParser.UdtMemberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.udtMember"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUdtMember([NotNull] VBAParser.UdtMemberContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.tabNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTabNumber([NotNull] VBAParser.TabNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.tabNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTabNumber([NotNull] VBAParser.TabNumberContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.spcClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpcClause([NotNull] VBAParser.SpcClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.spcClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpcClause([NotNull] VBAParser.SpcClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.rsetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRsetStmt([NotNull] VBAParser.RsetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.rsetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRsetStmt([NotNull] VBAParser.RsetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.eventArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventArgument([NotNull] VBAParser.EventArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.eventArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventArgument([NotNull] VBAParser.EventArgumentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentList([NotNull] VBAParser.ArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.argumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentList([NotNull] VBAParser.ArgumentListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lsetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLsetStmt([NotNull] VBAParser.LsetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lsetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLsetStmt([NotNull] VBAParser.LsetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.remComment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRemComment([NotNull] VBAParser.RemCommentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.remComment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRemComment([NotNull] VBAParser.RemCommentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.letterSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetterSpec([NotNull] VBAParser.LetterSpecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.letterSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetterSpec([NotNull] VBAParser.LetterSpecContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.fieldLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFieldLength([NotNull] VBAParser.FieldLengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.fieldLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFieldLength([NotNull] VBAParser.FieldLengthContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.debugModule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDebugModule([NotNull] VBAParser.DebugModuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.debugModule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDebugModule([NotNull] VBAParser.DebugModuleContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.goSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGoSubStmt([NotNull] VBAParser.GoSubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.goSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGoSubStmt([NotNull] VBAParser.GoSubStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.module"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModule([NotNull] VBAParser.ModuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.module"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModule([NotNull] VBAParser.ModuleContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleHeader([NotNull] VBAParser.ModuleHeaderContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleHeader"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleHeader([NotNull] VBAParser.ModuleHeaderContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>typeofexpr</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeofexpr([NotNull] VBAParser.TypeofexprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>typeofexpr</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeofexpr([NotNull] VBAParser.TypeofexprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>instanceExpr</c>
	/// labeled alternative in <see cref="VBAParser.lExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInstanceExpr([NotNull] VBAParser.InstanceExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>instanceExpr</c>
	/// labeled alternative in <see cref="VBAParser.lExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInstanceExpr([NotNull] VBAParser.InstanceExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleDeclarations([NotNull] VBAParser.ModuleDeclarationsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleDeclarations"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleDeclarations([NotNull] VBAParser.ModuleDeclarationsContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>indexExpr</c>
	/// labeled alternative in <see cref="VBAParser.lExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndexExpr([NotNull] VBAParser.IndexExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>indexExpr</c>
	/// labeled alternative in <see cref="VBAParser.lExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndexExpr([NotNull] VBAParser.IndexExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.untypedNameMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUntypedNameMemberDeclaration([NotNull] VBAParser.UntypedNameMemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.untypedNameMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUntypedNameMemberDeclaration([NotNull] VBAParser.UntypedNameMemberDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.inputList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInputList([NotNull] VBAParser.InputListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.inputList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInputList([NotNull] VBAParser.InputListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.selectCaseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectCaseStmt([NotNull] VBAParser.SelectCaseStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.selectCaseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectCaseStmt([NotNull] VBAParser.SelectCaseStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleBody([NotNull] VBAParser.ModuleBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleBody([NotNull] VBAParser.ModuleBodyContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ctLiteralExpr</c>
	/// labeled alternative in <see cref="VBAParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtLiteralExpr([NotNull] VBAParser.CtLiteralExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ctLiteralExpr</c>
	/// labeled alternative in <see cref="VBAParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtLiteralExpr([NotNull] VBAParser.CtLiteralExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.udtMemberList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUdtMemberList([NotNull] VBAParser.UdtMemberListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.udtMemberList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUdtMemberList([NotNull] VBAParser.UdtMemberListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.letterRange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetterRange([NotNull] VBAParser.LetterRangeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.letterRange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetterRange([NotNull] VBAParser.LetterRangeContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>newExpr</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNewExpr([NotNull] VBAParser.NewExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>newExpr</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNewExpr([NotNull] VBAParser.NewExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccess([NotNull] VBAParser.AccessContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.access"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccess([NotNull] VBAParser.AccessContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.widthStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWidthStmt([NotNull] VBAParser.WidthStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.widthStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWidthStmt([NotNull] VBAParser.WidthStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.withStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWithStmt([NotNull] VBAParser.WithStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.withStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWithStmt([NotNull] VBAParser.WithStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.addressOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddressOfExpression([NotNull] VBAParser.AddressOfExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.addressOfExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddressOfExpression([NotNull] VBAParser.AddressOfExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.endRecordNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEndRecordNumber([NotNull] VBAParser.EndRecordNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.endRecordNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEndRecordNumber([NotNull] VBAParser.EndRecordNumberContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.annotationName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationName([NotNull] VBAParser.AnnotationNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.annotationName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationName([NotNull] VBAParser.AnnotationNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.constSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstSubStmt([NotNull] VBAParser.ConstSubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.constSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstSubStmt([NotNull] VBAParser.ConstSubStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.endOfStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEndOfStatement([NotNull] VBAParser.EndOfStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.endOfStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEndOfStatement([NotNull] VBAParser.EndOfStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.midStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMidStatement([NotNull] VBAParser.MidStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.midStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMidStatement([NotNull] VBAParser.MidStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>optionCompareStmt</c>
	/// labeled alternative in <see cref="VBAParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionCompareStmt([NotNull] VBAParser.OptionCompareStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>optionCompareStmt</c>
	/// labeled alternative in <see cref="VBAParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionCompareStmt([NotNull] VBAParser.OptionCompareStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lineWidth"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLineWidth([NotNull] VBAParser.LineWidthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lineWidth"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLineWidth([NotNull] VBAParser.LineWidthContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.publicTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPublicTypeDeclaration([NotNull] VBAParser.PublicTypeDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.publicTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPublicTypeDeclaration([NotNull] VBAParser.PublicTypeDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.asTypeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsTypeClause([NotNull] VBAParser.AsTypeClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.asTypeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsTypeClause([NotNull] VBAParser.AsTypeClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.errorStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterErrorStmt([NotNull] VBAParser.ErrorStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.errorStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitErrorStmt([NotNull] VBAParser.ErrorStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArg([NotNull] VBAParser.ArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.arg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArg([NotNull] VBAParser.ArgContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.scaleSpecialForm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterScaleSpecialForm([NotNull] VBAParser.ScaleSpecialFormContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.scaleSpecialForm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitScaleSpecialForm([NotNull] VBAParser.ScaleSpecialFormContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>memberAccessExpr</c>
	/// labeled alternative in <see cref="VBAParser.lExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMemberAccessExpr([NotNull] VBAParser.MemberAccessExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>memberAccessExpr</c>
	/// labeled alternative in <see cref="VBAParser.lExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMemberAccessExpr([NotNull] VBAParser.MemberAccessExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.eventStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventStmt([NotNull] VBAParser.EventStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.eventStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventStmt([NotNull] VBAParser.EventStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLockStmt([NotNull] VBAParser.LockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLockStmt([NotNull] VBAParser.LockStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>logicalNotOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalNotOp([NotNull] VBAParser.LogicalNotOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>logicalNotOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalNotOp([NotNull] VBAParser.LogicalNotOpContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>optionExplicitStmt</c>
	/// labeled alternative in <see cref="VBAParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionExplicitStmt([NotNull] VBAParser.OptionExplicitStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>optionExplicitStmt</c>
	/// labeled alternative in <see cref="VBAParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionExplicitStmt([NotNull] VBAParser.OptionExplicitStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotation([NotNull] VBAParser.AnnotationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.annotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotation([NotNull] VBAParser.AnnotationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.reservedNameMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReservedNameMemberDeclaration([NotNull] VBAParser.ReservedNameMemberDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.reservedNameMemberDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReservedNameMemberDeclaration([NotNull] VBAParser.ReservedNameMemberDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.mandatoryLineContinuation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMandatoryLineContinuation([NotNull] VBAParser.MandatoryLineContinuationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.mandatoryLineContinuation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMandatoryLineContinuation([NotNull] VBAParser.MandatoryLineContinuationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.foreignIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeignIdentifier([NotNull] VBAParser.ForeignIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.foreignIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeignIdentifier([NotNull] VBAParser.ForeignIdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>simpleNameExpr</c>
	/// labeled alternative in <see cref="VBAParser.lExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSimpleNameExpr([NotNull] VBAParser.SimpleNameExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>simpleNameExpr</c>
	/// labeled alternative in <see cref="VBAParser.lExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSimpleNameExpr([NotNull] VBAParser.SimpleNameExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ctParenthesizedExpr</c>
	/// labeled alternative in <see cref="VBAParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtParenthesizedExpr([NotNull] VBAParser.CtParenthesizedExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ctParenthesizedExpr</c>
	/// labeled alternative in <see cref="VBAParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtParenthesizedExpr([NotNull] VBAParser.CtParenthesizedExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.writeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWriteStmt([NotNull] VBAParser.WriteStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.writeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWriteStmt([NotNull] VBAParser.WriteStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>markedFileNumberExpr</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMarkedFileNumberExpr([NotNull] VBAParser.MarkedFileNumberExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>markedFileNumberExpr</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMarkedFileNumberExpr([NotNull] VBAParser.MarkedFileNumberExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.annotationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationList([NotNull] VBAParser.AnnotationListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.annotationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationList([NotNull] VBAParser.AnnotationListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.singleLetter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleLetter([NotNull] VBAParser.SingleLetterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.singleLetter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleLetter([NotNull] VBAParser.SingleLetterContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>withDictionaryAccessExpr</c>
	/// labeled alternative in <see cref="VBAParser.lExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWithDictionaryAccessExpr([NotNull] VBAParser.WithDictionaryAccessExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>withDictionaryAccessExpr</c>
	/// labeled alternative in <see cref="VBAParser.lExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWithDictionaryAccessExpr([NotNull] VBAParser.WithDictionaryAccessExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfStmt([NotNull] VBAParser.IfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfStmt([NotNull] VBAParser.IfStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.subroutineName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubroutineName([NotNull] VBAParser.SubroutineNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.subroutineName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubroutineName([NotNull] VBAParser.SubroutineNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.inputVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInputVariable([NotNull] VBAParser.InputVariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.inputVariable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInputVariable([NotNull] VBAParser.InputVariableContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lowerBoundArgumentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLowerBoundArgumentExpression([NotNull] VBAParser.LowerBoundArgumentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lowerBoundArgumentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLowerBoundArgumentExpression([NotNull] VBAParser.LowerBoundArgumentExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.forEachStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForEachStmt([NotNull] VBAParser.ForEachStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.forEachStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForEachStmt([NotNull] VBAParser.ForEachStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.numberLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNumberLiteral([NotNull] VBAParser.NumberLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.numberLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNumberLiteral([NotNull] VBAParser.NumberLiteralContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.singleLineIfStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleLineIfStmt([NotNull] VBAParser.SingleLineIfStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.singleLineIfStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleLineIfStmt([NotNull] VBAParser.SingleLineIfStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lastLetter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLastLetter([NotNull] VBAParser.LastLetterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lastLetter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLastLetter([NotNull] VBAParser.LastLetterContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.spcNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpcNumber([NotNull] VBAParser.SpcNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.spcNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpcNumber([NotNull] VBAParser.SpcNumberContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.letStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLetStmt([NotNull] VBAParser.LetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.letStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLetStmt([NotNull] VBAParser.LetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.subStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubStmt([NotNull] VBAParser.SubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.subStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubStmt([NotNull] VBAParser.SubStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>optionBaseStmt</c>
	/// labeled alternative in <see cref="VBAParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionBaseStmt([NotNull] VBAParser.OptionBaseStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>optionBaseStmt</c>
	/// labeled alternative in <see cref="VBAParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionBaseStmt([NotNull] VBAParser.OptionBaseStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lineInputStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLineInputStmt([NotNull] VBAParser.LineInputStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lineInputStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLineInputStmt([NotNull] VBAParser.LineInputStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.outputExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutputExpression([NotNull] VBAParser.OutputExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.outputExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutputExpression([NotNull] VBAParser.OutputExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.tabClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTabClause([NotNull] VBAParser.TabClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.tabClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTabClause([NotNull] VBAParser.TabClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.circleSpecialForm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCircleSpecialForm([NotNull] VBAParser.CircleSpecialFormContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.circleSpecialForm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCircleSpecialForm([NotNull] VBAParser.CircleSpecialFormContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>lExpr</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLExpr([NotNull] VBAParser.LExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>lExpr</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLExpr([NotNull] VBAParser.LExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.statementKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementKeyword([NotNull] VBAParser.StatementKeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.statementKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementKeyword([NotNull] VBAParser.StatementKeywordContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>logicalAndOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalAndOp([NotNull] VBAParser.LogicalAndOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>logicalAndOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalAndOp([NotNull] VBAParser.LogicalAndOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.fileNumberList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFileNumberList([NotNull] VBAParser.FileNumberListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.fileNumberList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFileNumberList([NotNull] VBAParser.FileNumberListContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>parenthesizedExpr</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesizedExpr([NotNull] VBAParser.ParenthesizedExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>parenthesizedExpr</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesizedExpr([NotNull] VBAParser.ParenthesizedExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>optionPrivateModuleStmt</c>
	/// labeled alternative in <see cref="VBAParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionPrivateModuleStmt([NotNull] VBAParser.OptionPrivateModuleStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>optionPrivateModuleStmt</c>
	/// labeled alternative in <see cref="VBAParser.moduleOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionPrivateModuleStmt([NotNull] VBAParser.OptionPrivateModuleStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterKeyword([NotNull] VBAParser.KeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.keyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitKeyword([NotNull] VBAParser.KeywordContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>unaryMinusOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryMinusOp([NotNull] VBAParser.UnaryMinusOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>unaryMinusOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryMinusOp([NotNull] VBAParser.UnaryMinusOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.elseIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseIfBlock([NotNull] VBAParser.ElseIfBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.elseIfBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseIfBlock([NotNull] VBAParser.ElseIfBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.visibility"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVisibility([NotNull] VBAParser.VisibilityContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.visibility"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVisibility([NotNull] VBAParser.VisibilityContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.attributeValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributeValue([NotNull] VBAParser.AttributeValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.attributeValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributeValue([NotNull] VBAParser.AttributeValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.positionalArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPositionalArgument([NotNull] VBAParser.PositionalArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.positionalArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPositionalArgument([NotNull] VBAParser.PositionalArgumentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.functionStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionStmt([NotNull] VBAParser.FunctionStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.functionStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionStmt([NotNull] VBAParser.FunctionStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.recordRange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRecordRange([NotNull] VBAParser.RecordRangeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.recordRange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRecordRange([NotNull] VBAParser.RecordRangeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] VBAParser.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] VBAParser.ReturnStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lineNumberLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLineNumberLabel([NotNull] VBAParser.LineNumberLabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lineNumberLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLineNumberLabel([NotNull] VBAParser.LineNumberLabelContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.universalLetterRange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUniversalLetterRange([NotNull] VBAParser.UniversalLetterRangeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.universalLetterRange"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUniversalLetterRange([NotNull] VBAParser.UniversalLetterRangeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.variantLiteralIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariantLiteralIdentifier([NotNull] VBAParser.VariantLiteralIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.variantLiteralIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariantLiteralIdentifier([NotNull] VBAParser.VariantLiteralIdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>modOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModOp([NotNull] VBAParser.ModOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>modOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModOp([NotNull] VBAParser.ModOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.namedArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamedArgumentList([NotNull] VBAParser.NamedArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.namedArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamedArgumentList([NotNull] VBAParser.NamedArgumentListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ifWithEmptyThen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfWithEmptyThen([NotNull] VBAParser.IfWithEmptyThenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ifWithEmptyThen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfWithEmptyThen([NotNull] VBAParser.IfWithEmptyThenContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.modeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModeClause([NotNull] VBAParser.ModeClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.modeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModeClause([NotNull] VBAParser.ModeClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.annotationArgList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationArgList([NotNull] VBAParser.AnnotationArgListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.annotationArgList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationArgList([NotNull] VBAParser.AnnotationArgListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.upperBound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUpperBound([NotNull] VBAParser.UpperBoundContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.upperBound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUpperBound([NotNull] VBAParser.UpperBoundContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>specifiedPositionalArgument</c>
	/// labeled alternative in <see cref="VBAParser.positionalArgumentOrMissing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSpecifiedPositionalArgument([NotNull] VBAParser.SpecifiedPositionalArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>specifiedPositionalArgument</c>
	/// labeled alternative in <see cref="VBAParser.positionalArgumentOrMissing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSpecifiedPositionalArgument([NotNull] VBAParser.SpecifiedPositionalArgumentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.onGoToStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnGoToStmt([NotNull] VBAParser.OnGoToStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.onGoToStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnGoToStmt([NotNull] VBAParser.OnGoToStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.upperCaseA"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUpperCaseA([NotNull] VBAParser.UpperCaseAContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.upperCaseA"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUpperCaseA([NotNull] VBAParser.UpperCaseAContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.selectExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectExpression([NotNull] VBAParser.SelectExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.selectExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectExpression([NotNull] VBAParser.SelectExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBaseType([NotNull] VBAParser.BaseTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.baseType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBaseType([NotNull] VBAParser.BaseTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.defType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefType([NotNull] VBAParser.DefTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.defType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefType([NotNull] VBAParser.DefTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.redimDeclarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRedimDeclarationList([NotNull] VBAParser.RedimDeclarationListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.redimDeclarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRedimDeclarationList([NotNull] VBAParser.RedimDeclarationListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.foreignName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForeignName([NotNull] VBAParser.ForeignNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.foreignName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForeignName([NotNull] VBAParser.ForeignNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.caseElseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseElseClause([NotNull] VBAParser.CaseElseClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.caseElseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseElseClause([NotNull] VBAParser.CaseElseClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>literalExpr</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralExpr([NotNull] VBAParser.LiteralExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>literalExpr</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralExpr([NotNull] VBAParser.LiteralExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.openStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOpenStmt([NotNull] VBAParser.OpenStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.openStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOpenStmt([NotNull] VBAParser.OpenStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.markerKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMarkerKeyword([NotNull] VBAParser.MarkerKeywordContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.markerKeyword"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMarkerKeyword([NotNull] VBAParser.MarkerKeywordContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.attributeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributeName([NotNull] VBAParser.AttributeNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.attributeName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributeName([NotNull] VBAParser.AttributeNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.implementsStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImplementsStmt([NotNull] VBAParser.ImplementsStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.implementsStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImplementsStmt([NotNull] VBAParser.ImplementsStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.closeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCloseStmt([NotNull] VBAParser.CloseStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.closeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCloseStmt([NotNull] VBAParser.CloseStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.stopStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStopStmt([NotNull] VBAParser.StopStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.stopStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStopStmt([NotNull] VBAParser.StopStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.variableName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableName([NotNull] VBAParser.VariableNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.variableName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableName([NotNull] VBAParser.VariableNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.whiteSpace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhiteSpace([NotNull] VBAParser.WhiteSpaceContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.whiteSpace"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhiteSpace([NotNull] VBAParser.WhiteSpaceContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.upperCaseZ"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUpperCaseZ([NotNull] VBAParser.UpperCaseZContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.upperCaseZ"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUpperCaseZ([NotNull] VBAParser.UpperCaseZContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.commentOrAnnotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommentOrAnnotation([NotNull] VBAParser.CommentOrAnnotationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.commentOrAnnotation"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommentOrAnnotation([NotNull] VBAParser.CommentOrAnnotationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.goToStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGoToStmt([NotNull] VBAParser.GoToStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.goToStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGoToStmt([NotNull] VBAParser.GoToStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.printStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrintStmt([NotNull] VBAParser.PrintStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.printStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrintStmt([NotNull] VBAParser.PrintStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleConfig"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleConfig([NotNull] VBAParser.ModuleConfigContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleConfig"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleConfig([NotNull] VBAParser.ModuleConfigContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.doLoopStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDoLoopStmt([NotNull] VBAParser.DoLoopStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.doLoopStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDoLoopStmt([NotNull] VBAParser.DoLoopStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.callStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCallStmt([NotNull] VBAParser.CallStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.callStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCallStmt([NotNull] VBAParser.CallStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.optionalArrayClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOptionalArrayClause([NotNull] VBAParser.OptionalArrayClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.optionalArrayClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOptionalArrayClause([NotNull] VBAParser.OptionalArrayClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.debugPrintSub"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDebugPrintSub([NotNull] VBAParser.DebugPrintSubContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.debugPrintSub"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDebugPrintSub([NotNull] VBAParser.DebugPrintSubContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.enumerationStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumerationStmt([NotNull] VBAParser.EnumerationStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.enumerationStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumerationStmt([NotNull] VBAParser.EnumerationStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.rangeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRangeClause([NotNull] VBAParser.RangeClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.rangeClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRangeClause([NotNull] VBAParser.RangeClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.comment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComment([NotNull] VBAParser.CommentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.comment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComment([NotNull] VBAParser.CommentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleBodyElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleBodyElement([NotNull] VBAParser.ModuleBodyElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleBodyElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleBodyElement([NotNull] VBAParser.ModuleBodyElementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.udtDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUdtDeclaration([NotNull] VBAParser.UdtDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.udtDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUdtDeclaration([NotNull] VBAParser.UdtDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.seekStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSeekStmt([NotNull] VBAParser.SeekStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.seekStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSeekStmt([NotNull] VBAParser.SeekStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.listOrLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListOrLabel([NotNull] VBAParser.ListOrLabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.listOrLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListOrLabel([NotNull] VBAParser.ListOrLabelContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ctTypeofexpr</c>
	/// labeled alternative in <see cref="VBAParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtTypeofexpr([NotNull] VBAParser.CtTypeofexprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ctTypeofexpr</c>
	/// labeled alternative in <see cref="VBAParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtTypeofexpr([NotNull] VBAParser.CtTypeofexprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.fileNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFileNumber([NotNull] VBAParser.FileNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.fileNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFileNumber([NotNull] VBAParser.FileNumberContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.constStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstStmt([NotNull] VBAParser.ConstStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.constStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstStmt([NotNull] VBAParser.ConstStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.argDefaultValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgDefaultValue([NotNull] VBAParser.ArgDefaultValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.argDefaultValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgDefaultValue([NotNull] VBAParser.ArgDefaultValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.propertyLetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyLetStmt([NotNull] VBAParser.PropertyLetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.propertyLetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyLetStmt([NotNull] VBAParser.PropertyLetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleAttributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleAttributes([NotNull] VBAParser.ModuleAttributesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleAttributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleAttributes([NotNull] VBAParser.ModuleAttributesContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterType([NotNull] VBAParser.TypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.type"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitType([NotNull] VBAParser.TypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.inputStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterInputStmt([NotNull] VBAParser.InputStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.inputStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitInputStmt([NotNull] VBAParser.InputStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.declareStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclareStmt([NotNull] VBAParser.DeclareStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.declareStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclareStmt([NotNull] VBAParser.DeclareStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.booleanLiteralIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanLiteralIdentifier([NotNull] VBAParser.BooleanLiteralIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.booleanLiteralIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanLiteralIdentifier([NotNull] VBAParser.BooleanLiteralIdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>logicalOrOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalOrOp([NotNull] VBAParser.LogicalOrOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>logicalOrOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalOrOp([NotNull] VBAParser.LogicalOrOpContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>logicalEqvOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalEqvOp([NotNull] VBAParser.LogicalEqvOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>logicalEqvOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalEqvOp([NotNull] VBAParser.LogicalEqvOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.resetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResetStmt([NotNull] VBAParser.ResetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.resetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResetStmt([NotNull] VBAParser.ResetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLock([NotNull] VBAParser.LockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLock([NotNull] VBAParser.LockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlock([NotNull] VBAParser.BlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlock([NotNull] VBAParser.BlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.fileMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFileMode([NotNull] VBAParser.FileModeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.fileMode"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFileMode([NotNull] VBAParser.FileModeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.setStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSetStmt([NotNull] VBAParser.SetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.setStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSetStmt([NotNull] VBAParser.SetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.onErrorStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnErrorStmt([NotNull] VBAParser.OnErrorStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.onErrorStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnErrorStmt([NotNull] VBAParser.OnErrorStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.dimSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDimSpec([NotNull] VBAParser.DimSpecContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.dimSpec"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDimSpec([NotNull] VBAParser.DimSpecContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifier([NotNull] VBAParser.IdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifier([NotNull] VBAParser.IdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.attributeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttributeStmt([NotNull] VBAParser.AttributeStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.attributeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttributeStmt([NotNull] VBAParser.AttributeStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.enumerationStmt_Constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEnumerationStmt_Constant([NotNull] VBAParser.EnumerationStmt_ConstantContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.enumerationStmt_Constant"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEnumerationStmt_Constant([NotNull] VBAParser.EnumerationStmt_ConstantContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>concatOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConcatOp([NotNull] VBAParser.ConcatOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>concatOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConcatOp([NotNull] VBAParser.ConcatOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.onGoSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOnGoSubStmt([NotNull] VBAParser.OnGoSubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.onGoSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOnGoSubStmt([NotNull] VBAParser.OnGoSubStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.outputList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutputList([NotNull] VBAParser.OutputListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.outputList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutputList([NotNull] VBAParser.OutputListContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>relationalOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalOp([NotNull] VBAParser.RelationalOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>relationalOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalOp([NotNull] VBAParser.RelationalOpContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>builtInTypeExpr</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBuiltInTypeExpr([NotNull] VBAParser.BuiltInTypeExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>builtInTypeExpr</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBuiltInTypeExpr([NotNull] VBAParser.BuiltInTypeExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.positionalOrNamedArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPositionalOrNamedArgumentList([NotNull] VBAParser.PositionalOrNamedArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.positionalOrNamedArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPositionalOrNamedArgumentList([NotNull] VBAParser.PositionalOrNamedArgumentListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.defDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefDirective([NotNull] VBAParser.DefDirectiveContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.defDirective"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefDirective([NotNull] VBAParser.DefDirectiveContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.nameStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNameStmt([NotNull] VBAParser.NameStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.nameStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNameStmt([NotNull] VBAParser.NameStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.typeHint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeHint([NotNull] VBAParser.TypeHintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.typeHint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeHint([NotNull] VBAParser.TypeHintContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.fileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFileStmt([NotNull] VBAParser.FileStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.fileStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFileStmt([NotNull] VBAParser.FileStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.elseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElseBlock([NotNull] VBAParser.ElseBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.elseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElseBlock([NotNull] VBAParser.ElseBlockContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.redimStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRedimStmt([NotNull] VBAParser.RedimStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.redimStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRedimStmt([NotNull] VBAParser.RedimStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.boundsList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoundsList([NotNull] VBAParser.BoundsListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.boundsList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoundsList([NotNull] VBAParser.BoundsListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.literalIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralIdentifier([NotNull] VBAParser.LiteralIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.literalIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralIdentifier([NotNull] VBAParser.LiteralIdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.tuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTuple([NotNull] VBAParser.TupleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.tuple"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTuple([NotNull] VBAParser.TupleContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.untypedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUntypedIdentifier([NotNull] VBAParser.UntypedIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.untypedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUntypedIdentifier([NotNull] VBAParser.UntypedIdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.builtInType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBuiltInType([NotNull] VBAParser.BuiltInTypeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.builtInType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBuiltInType([NotNull] VBAParser.BuiltInTypeContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.requiredPositionalArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRequiredPositionalArgument([NotNull] VBAParser.RequiredPositionalArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.requiredPositionalArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRequiredPositionalArgument([NotNull] VBAParser.RequiredPositionalArgumentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.recLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRecLength([NotNull] VBAParser.RecLengthContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.recLength"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRecLength([NotNull] VBAParser.RecLengthContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.unmarkedFileNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnmarkedFileNumber([NotNull] VBAParser.UnmarkedFileNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.unmarkedFileNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnmarkedFileNumber([NotNull] VBAParser.UnmarkedFileNumberContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.firstLetter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFirstLetter([NotNull] VBAParser.FirstLetterContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.firstLetter"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFirstLetter([NotNull] VBAParser.FirstLetterContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.resumeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResumeStmt([NotNull] VBAParser.ResumeStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.resumeStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResumeStmt([NotNull] VBAParser.ResumeStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterConstantExpression([NotNull] VBAParser.ConstantExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.constantExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitConstantExpression([NotNull] VBAParser.ConstantExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.debugPrint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDebugPrint([NotNull] VBAParser.DebugPrintContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.debugPrint"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDebugPrint([NotNull] VBAParser.DebugPrintContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.endOfLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEndOfLine([NotNull] VBAParser.EndOfLineContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.endOfLine"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEndOfLine([NotNull] VBAParser.EndOfLineContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.selectEndValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectEndValue([NotNull] VBAParser.SelectEndValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.selectEndValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectEndValue([NotNull] VBAParser.SelectEndValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.startRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStartRule([NotNull] VBAParser.StartRuleContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.startRule"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStartRule([NotNull] VBAParser.StartRuleContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.endStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEndStmt([NotNull] VBAParser.EndStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.endStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEndStmt([NotNull] VBAParser.EndStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>withMemberAccessExpr</c>
	/// labeled alternative in <see cref="VBAParser.lExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWithMemberAccessExpr([NotNull] VBAParser.WithMemberAccessExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>withMemberAccessExpr</c>
	/// labeled alternative in <see cref="VBAParser.lExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWithMemberAccessExpr([NotNull] VBAParser.WithMemberAccessExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>logicalXorOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalXorOp([NotNull] VBAParser.LogicalXorOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>logicalXorOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalXorOp([NotNull] VBAParser.LogicalXorOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.singleLineElseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSingleLineElseClause([NotNull] VBAParser.SingleLineElseClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.singleLineElseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSingleLineElseClause([NotNull] VBAParser.SingleLineElseClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.upperBoundArgumentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUpperBoundArgumentExpression([NotNull] VBAParser.UpperBoundArgumentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.upperBoundArgumentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUpperBoundArgumentExpression([NotNull] VBAParser.UpperBoundArgumentExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.forNextStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForNextStmt([NotNull] VBAParser.ForNextStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.forNextStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForNextStmt([NotNull] VBAParser.ForNextStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.caseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseClause([NotNull] VBAParser.CaseClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.caseClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseClause([NotNull] VBAParser.CaseClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lowerBound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLowerBound([NotNull] VBAParser.LowerBoundContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lowerBound"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLowerBound([NotNull] VBAParser.LowerBoundContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.exitStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExitStmt([NotNull] VBAParser.ExitStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.exitStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExitStmt([NotNull] VBAParser.ExitStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.selectStartValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectStartValue([NotNull] VBAParser.SelectStartValueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.selectStartValue"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectStartValue([NotNull] VBAParser.SelectStartValueContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgList([NotNull] VBAParser.ArgListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.argList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgList([NotNull] VBAParser.ArgListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.arrayDim"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArrayDim([NotNull] VBAParser.ArrayDimContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.arrayDim"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArrayDim([NotNull] VBAParser.ArrayDimContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.eventArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEventArgumentList([NotNull] VBAParser.EventArgumentListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.eventArgumentList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEventArgumentList([NotNull] VBAParser.EventArgumentListContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.data"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterData([NotNull] VBAParser.DataContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.data"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitData([NotNull] VBAParser.DataContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.subscripts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubscripts([NotNull] VBAParser.SubscriptsContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.subscripts"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubscripts([NotNull] VBAParser.SubscriptsContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.propertySetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertySetStmt([NotNull] VBAParser.PropertySetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.propertySetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertySetStmt([NotNull] VBAParser.PropertySetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>intDivOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntDivOp([NotNull] VBAParser.IntDivOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>intDivOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntDivOp([NotNull] VBAParser.IntDivOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.statementLabelDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatementLabelDefinition([NotNull] VBAParser.StatementLabelDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.statementLabelDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatementLabelDefinition([NotNull] VBAParser.StatementLabelDefinitionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>missingPositionalArgument</c>
	/// labeled alternative in <see cref="VBAParser.positionalArgumentOrMissing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMissingPositionalArgument([NotNull] VBAParser.MissingPositionalArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>missingPositionalArgument</c>
	/// labeled alternative in <see cref="VBAParser.positionalArgumentOrMissing"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMissingPositionalArgument([NotNull] VBAParser.MissingPositionalArgumentContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>multOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultOp([NotNull] VBAParser.MultOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>multOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultOp([NotNull] VBAParser.MultOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.ifWithNonEmptyThen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfWithNonEmptyThen([NotNull] VBAParser.IfWithNonEmptyThenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.ifWithNonEmptyThen"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfWithNonEmptyThen([NotNull] VBAParser.IfWithNonEmptyThenContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.putStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPutStmt([NotNull] VBAParser.PutStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.putStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPutStmt([NotNull] VBAParser.PutStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.annotationArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnnotationArg([NotNull] VBAParser.AnnotationArgContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.annotationArg"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnnotationArg([NotNull] VBAParser.AnnotationArgContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.redimVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRedimVariableDeclaration([NotNull] VBAParser.RedimVariableDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.redimVariableDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRedimVariableDeclaration([NotNull] VBAParser.RedimVariableDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.recordNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRecordNumber([NotNull] VBAParser.RecordNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.recordNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRecordNumber([NotNull] VBAParser.RecordNumberContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.variableStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableStmt([NotNull] VBAParser.VariableStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.variableStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableStmt([NotNull] VBAParser.VariableStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ctMarkedFileNumberExpr</c>
	/// labeled alternative in <see cref="VBAParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtMarkedFileNumberExpr([NotNull] VBAParser.CtMarkedFileNumberExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ctMarkedFileNumberExpr</c>
	/// labeled alternative in <see cref="VBAParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtMarkedFileNumberExpr([NotNull] VBAParser.CtMarkedFileNumberExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubscript([NotNull] VBAParser.SubscriptContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.subscript"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubscript([NotNull] VBAParser.SubscriptContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.outputClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutputClause([NotNull] VBAParser.OutputClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.outputClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutputClause([NotNull] VBAParser.OutputClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparisonOperator([NotNull] VBAParser.ComparisonOperatorContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.comparisonOperator"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparisonOperator([NotNull] VBAParser.ComparisonOperatorContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.startRecordNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStartRecordNumber([NotNull] VBAParser.StartRecordNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.startRecordNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStartRecordNumber([NotNull] VBAParser.StartRecordNumberContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.whileWendStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileWendStmt([NotNull] VBAParser.WhileWendStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.whileWendStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileWendStmt([NotNull] VBAParser.WhileWendStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ctNewExpr</c>
	/// labeled alternative in <see cref="VBAParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtNewExpr([NotNull] VBAParser.CtNewExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ctNewExpr</c>
	/// labeled alternative in <see cref="VBAParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtNewExpr([NotNull] VBAParser.CtNewExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.objectLiteralIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterObjectLiteralIdentifier([NotNull] VBAParser.ObjectLiteralIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.objectLiteralIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitObjectLiteralIdentifier([NotNull] VBAParser.ObjectLiteralIdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.outputItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOutputItem([NotNull] VBAParser.OutputItemContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.outputItem"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOutputItem([NotNull] VBAParser.OutputItemContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.variableSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableSubStmt([NotNull] VBAParser.VariableSubStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.variableSubStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableSubStmt([NotNull] VBAParser.VariableSubStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.position"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPosition([NotNull] VBAParser.PositionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.position"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPosition([NotNull] VBAParser.PositionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.getStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGetStmt([NotNull] VBAParser.GetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.getStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGetStmt([NotNull] VBAParser.GetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.raiseEventStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRaiseEventStmt([NotNull] VBAParser.RaiseEventStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.raiseEventStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRaiseEventStmt([NotNull] VBAParser.RaiseEventStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.debugPrintStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDebugPrintStmt([NotNull] VBAParser.DebugPrintStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.debugPrintStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDebugPrintStmt([NotNull] VBAParser.DebugPrintStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.sameLineStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSameLineStatement([NotNull] VBAParser.SameLineStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.sameLineStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSameLineStatement([NotNull] VBAParser.SameLineStatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.pathName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPathName([NotNull] VBAParser.PathNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.pathName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPathName([NotNull] VBAParser.PathNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.tabNumberClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTabNumberClause([NotNull] VBAParser.TabNumberClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.tabNumberClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTabNumberClause([NotNull] VBAParser.TabNumberClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lineSpecialForm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLineSpecialForm([NotNull] VBAParser.LineSpecialFormContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lineSpecialForm"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLineSpecialForm([NotNull] VBAParser.LineSpecialFormContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>logicalImpOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalImpOp([NotNull] VBAParser.LogicalImpOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>logicalImpOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalImpOp([NotNull] VBAParser.LogicalImpOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.charPosition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCharPosition([NotNull] VBAParser.CharPositionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.charPosition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCharPosition([NotNull] VBAParser.CharPositionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.modeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModeSpecifier([NotNull] VBAParser.ModeSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.modeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModeSpecifier([NotNull] VBAParser.ModeSpecifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleConfigElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleConfigElement([NotNull] VBAParser.ModuleConfigElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleConfigElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleConfigElement([NotNull] VBAParser.ModuleConfigElementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.propertyGetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPropertyGetStmt([NotNull] VBAParser.PropertyGetStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.propertyGetStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPropertyGetStmt([NotNull] VBAParser.PropertyGetStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.integerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIntegerExpression([NotNull] VBAParser.IntegerExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.integerExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIntegerExpression([NotNull] VBAParser.IntegerExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.privateTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrivateTypeDeclaration([NotNull] VBAParser.PrivateTypeDeclarationContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.privateTypeDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrivateTypeDeclaration([NotNull] VBAParser.PrivateTypeDeclarationContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.markedFileNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMarkedFileNumber([NotNull] VBAParser.MarkedFileNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.markedFileNumber"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMarkedFileNumber([NotNull] VBAParser.MarkedFileNumberContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ctLExpr</c>
	/// labeled alternative in <see cref="VBAParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtLExpr([NotNull] VBAParser.CtLExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ctLExpr</c>
	/// labeled alternative in <see cref="VBAParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtLExpr([NotNull] VBAParser.CtLExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.accessClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccessClause([NotNull] VBAParser.AccessClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.accessClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccessClause([NotNull] VBAParser.AccessClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.namedArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNamedArgument([NotNull] VBAParser.NamedArgumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.namedArgument"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNamedArgument([NotNull] VBAParser.NamedArgumentContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.identifierStatementLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentifierStatementLabel([NotNull] VBAParser.IdentifierStatementLabelContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.identifierStatementLabel"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentifierStatementLabel([NotNull] VBAParser.IdentifierStatementLabelContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ctBuiltInTypeExpr</c>
	/// labeled alternative in <see cref="VBAParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCtBuiltInTypeExpr([NotNull] VBAParser.CtBuiltInTypeExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ctBuiltInTypeExpr</c>
	/// labeled alternative in <see cref="VBAParser.complexType"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCtBuiltInTypeExpr([NotNull] VBAParser.CtBuiltInTypeExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.functionName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionName([NotNull] VBAParser.FunctionNameContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.functionName"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionName([NotNull] VBAParser.FunctionNameContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.variableListStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariableListStmt([NotNull] VBAParser.VariableListStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.variableListStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariableListStmt([NotNull] VBAParser.VariableListStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>addOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddOp([NotNull] VBAParser.AddOpContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>addOp</c>
	/// labeled alternative in <see cref="VBAParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddOp([NotNull] VBAParser.AddOpContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.unlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnlockStmt([NotNull] VBAParser.UnlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.unlockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnlockStmt([NotNull] VBAParser.UnlockStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.typedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypedIdentifier([NotNull] VBAParser.TypedIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.typedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypedIdentifier([NotNull] VBAParser.TypedIdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.booleanExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBooleanExpression([NotNull] VBAParser.BooleanExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.booleanExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBooleanExpression([NotNull] VBAParser.BooleanExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.argumentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterArgumentExpression([NotNull] VBAParser.ArgumentExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.argumentExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitArgumentExpression([NotNull] VBAParser.ArgumentExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lenClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLenClause([NotNull] VBAParser.LenClauseContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lenClause"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLenClause([NotNull] VBAParser.LenClauseContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.lineSpecialFormOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLineSpecialFormOption([NotNull] VBAParser.LineSpecialFormOptionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.lineSpecialFormOption"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLineSpecialFormOption([NotNull] VBAParser.LineSpecialFormOptionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.moduleDeclarationsElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModuleDeclarationsElement([NotNull] VBAParser.ModuleDeclarationsElementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.moduleDeclarationsElement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModuleDeclarationsElement([NotNull] VBAParser.ModuleDeclarationsElementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.blockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBlockStmt([NotNull] VBAParser.BlockStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.blockStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBlockStmt([NotNull] VBAParser.BlockStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterVariable([NotNull] VBAParser.VariableContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.variable"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitVariable([NotNull] VBAParser.VariableContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.eraseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEraseStmt([NotNull] VBAParser.EraseStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.eraseStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEraseStmt([NotNull] VBAParser.EraseStmtContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.commentBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCommentBody([NotNull] VBAParser.CommentBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.commentBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCommentBody([NotNull] VBAParser.CommentBodyContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.literalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralExpression([NotNull] VBAParser.LiteralExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.literalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralExpression([NotNull] VBAParser.LiteralExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>dictionaryAccessExpr</c>
	/// labeled alternative in <see cref="VBAParser.lExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDictionaryAccessExpr([NotNull] VBAParser.DictionaryAccessExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>dictionaryAccessExpr</c>
	/// labeled alternative in <see cref="VBAParser.lExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDictionaryAccessExpr([NotNull] VBAParser.DictionaryAccessExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="VBAParser.unrestrictedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnrestrictedIdentifier([NotNull] VBAParser.UnrestrictedIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="VBAParser.unrestrictedIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnrestrictedIdentifier([NotNull] VBAParser.UnrestrictedIdentifierContext context);
}
} // namespace Rubberduck.Parsing.Grammar
